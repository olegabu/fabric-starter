NO_RED_OUTPUT=false ./api/create-channel.sh testchannel16791 sberbank ; ./verify/test-channel-exists.sh testchannel16791 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel16791 sberbank VERIFY: test-channel-exists.sh testchannel16791 sberbank
[1;36mCreating testchannel16791 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: Cannot
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel16791> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-21 15:43:38.802 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 15:43:38.803 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 1_api: exit code 1
./verify/test-channel-does-not-exist.sh testchannel16791 vtb
Step: 2_api Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel16791 vtb
[1;34m
Verifing if the <testchannel16791> channel exists in vtb.example.net...[m[m[m
[34m2020-02-21 15:43:39.337 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 15:43:39.339 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
[1;32mOK: The channel <testchannel16791> does not exist and in not visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh ^^^^^^testchannel16791 sberbank ; ./verify/test-channel-does-not-exist.sh ^^^^^^testchannel16791 sberbank
Step: 3_api Test 'Can not create the channel with incorrect name in ORG1'
SKIPCLI: RUNTESTNOERRPRINT: create-channel.sh ^^^^^^testchannel16791 sberbank VERIFY: test-channel-does-not-exist.sh ^^^^^^testchannel16791 sberbank
[1;36mCreating ^^^^^^testchannel16791 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: Cannot
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <^^^^^^testchannel16791> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-21 15:43:40.095 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 15:43:40.099 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
[1;32mOK: The channel <^^^^^^testchannel16791> does not exist and in not visible to sberbank[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh testchannel16791 vtb ; ./verify/test-channel-does-not-exist.sh testchannel16791 vtb
Step: 4_api Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel16791 vtb VERIFY: test-channel-does-not-exist.sh testchannel16791 vtb
[1;36mCreating testchannel16791 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: Cannot
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel16791> channel exists in vtb.example.net...[m[m[m
[34m2020-02-21 15:43:40.710 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 15:43:40.711 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
[1;32mOK: The channel <testchannel16791> does not exist and in not visible to vtb[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel16791-02 vtb ; ./verify/test-channel-exists.sh testchannel16791-02 vtb
Step: 5_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel16791-02 vtb VERIFY: test-channel-exists.sh testchannel16791-02 vtb
[1;36mCreating testchannel16791-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: Cannot
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel16791-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-21 15:43:41.302 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 15:43:41.303 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_api: exit code 1
NO_RED_OUTPUT=false ./api/add-org-to-channel.sh testchannel16791 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel16791 sberbank vtb
Step: 6_api Test 'Add Second_org to channel created by the First_org'
RUNTEST: add-org-to-channel.sh testchannel16791 sberbank vtb VERIFY: test-channel-add-org.sh testchannel16791 sberbank vtb
[1;36mAdd vtb to the testchannel16791 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel16791 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: Cannot
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel16791 ...[m[m[m
[34m2020-02-21 15:43:41.919 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 15:43:41.921 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
null
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 6_api: exit code 1
NO_RED_OUTPUT=false ./api/add-org-to-channel.sh testchannel16791-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel16791-02 vtb sberbank
Step: 7_api Test 'Add First_org to channel created by the Second_org'
RUNTEST: add-org-to-channel.sh testchannel16791-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel16791-02 vtb sberbank
[1;36mAdd sberbank to the testchannel16791-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel16791-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: Cannot
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel16791-02 ...[m[m[m
[34m2020-02-21 15:43:42.523 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 15:43:42.524 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
null
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 7_api: exit code 1
queryContainerNetworkSettings returns: 4000
queryContainerNetworkSettings returns: 4001
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel13552 sberbank ; ./verify/test-channel-exists.sh testchannel13552 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel13552 sberbank VERIFY: test-channel-exists.sh testchannel13552 sberbank
[1;36mCreating testchannel13552 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjMwNDgwNH0.PLNr2mWqaxP-A3toQ6tN9QsGXj3G_aDPKFi8gqJ2jnU
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel13552> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel13552> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-21 17:06:46.668 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:06:46.671 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-21 17:06:46.672 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-21 17:06:46.672 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel13552",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-21T17:06:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel13552> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
./verify/test-channel-does-not-exist.sh testchannel13552 vtb
Step: 2_api Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel13552 vtb
[1;34m
Verifing if the <testchannel13552> channel exists in vtb.example.net...[m[m[m
[34m2020-02-21 17:06:47.447 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:06:47.450 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel13552> does not exist and in not visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh ^^^^^^testchannel13552 sberbank ; ./verify/test-channel-does-not-exist.sh ^^^^^^testchannel13552 sberbank
Step: 3_api Test 'Can not create the channel with incorrect name in ORG1'
SKIPCLI: RUNTESTNOERRPRINT: create-channel.sh ^^^^^^testchannel13552 sberbank VERIFY: test-channel-does-not-exist.sh ^^^^^^testchannel13552 sberbank
[1;36mCreating ^^^^^^testchannel13552 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjMwNDgwN30.n4a9lpcDX5URJ_QC8nvKVTGRDdGFUQmSBjNytYBBm9I
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
"Failed to create Channel. channel name should match Regex /^[a-z][a-z0-9.-]*$/, but got \"^^^^^^testchannel13552\"" 500
parse error: Unfinished string at EOF at line 1, column 7
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <^^^^^^testchannel13552> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-21 17:06:49.977 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:06:49.978 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
[1;32mOK: The channel <^^^^^^testchannel13552> does not exist and in not visible to sberbank[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh testchannel13552 vtb ; ./verify/test-channel-does-not-exist.sh testchannel13552 vtb
Step: 4_api Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel13552 vtb VERIFY: test-channel-does-not-exist.sh testchannel13552 vtb
[1;36mCreating testchannel13552 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjMwNDgxMH0.rAbkplkb0PaoDiwh7tYgcj1Zx4HPVCwhWJsh4cUZRBE
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
"Invalid results returned ::FORBIDDEN" 500
parse error: Unfinished string at EOF at line 1, column 8
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel13552> channel exists in vtb.example.net...[m[m[m
[34m2020-02-21 17:06:52.433 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:06:52.436 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel13552> does not exist and in not visible to vtb[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel13552-02 vtb ; ./verify/test-channel-exists.sh testchannel13552-02 vtb
Step: 5_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel13552-02 vtb VERIFY: test-channel-exists.sh testchannel13552-02 vtb
[1;36mCreating testchannel13552-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjMwNDgxMn0.R5YWXQVlKIDn-erCBd4SbcDZVqHLEie6ukFFnctk_wA
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel13552-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel13552-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-21 17:06:54.932 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:06:54.935 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-21 17:06:54.938 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-21 17:06:54.938 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel13552-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-21T17:06:53Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel13552-02> exists and visible to vtb[m[m[m
Step 5_api: exit code 0
NO_RED_OUTPUT=false ./api/add-org-to-channel.sh testchannel13552 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel13552 sberbank vtb
Step: 6_api Test 'Add Second_org to channel created by the First_org'
RUNTEST: add-org-to-channel.sh testchannel13552 sberbank vtb VERIFY: test-channel-add-org.sh testchannel13552 sberbank vtb
[1;36mAdd vtb to the testchannel13552 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel13552 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjMwNDgxNX0.UY25dZBRgYvJei9rv7BVpWVOoixRI0-gZCgrhY8m8WA
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel13552 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel13552 ...[m[m[m
[34m2020-02-21 17:06:58.449 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:06:58.455 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-21 17:06:58.456 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-21 17:06:58.456 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel13552>.[m[m[m
Step 6_api: exit code 0
NO_RED_OUTPUT=false ./api/add-org-to-channel.sh testchannel13552-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel13552-02 vtb sberbank
Step: 7_api Test 'Add First_org to channel created by the Second_org'
RUNTEST: add-org-to-channel.sh testchannel13552-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel13552-02 vtb sberbank
[1;36mAdd sberbank to the testchannel13552-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel13552-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjMwNDgxOX0.z2slZWISSwzmXT4CBzT4OF_riFU_AyvNXYpTkY-LU3E
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel13552-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel13552-02 ...[m[m[m
[34m2020-02-21 17:07:34.773 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:34.776 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-21 17:07:34.777 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-21 17:07:34.777 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel13552-02>.[m[m[m
Step 7_api: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel7829 sberbank ; ./verify/test-channel-exists.sh testchannel7829 sberbank
Step: 8_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel7829 sberbank VERIFY: test-channel-exists.sh testchannel7829 sberbank
[1;36m
Creating the <testchannel7829> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel7829[m[m[m

example.net

Create channel sberbank testchannel7829
--2020-02-21 17:07:37--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:37--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:37--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:37--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-21 17:07:37.556 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-21 17:07:37.616 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-21 17:07:37.616 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-21 17:07:37.616 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-21 17:07:37.616 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-21 17:07:37.616 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-21 17:07:37.616 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-21 17:07:37.616 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-21 17:07:37.616 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-21 17:07:37.677 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-21 17:07:37.677 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-21 17:07:37.677 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-21 17:07:37.677 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-21 17:07:37.677 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-21 17:07:37.677 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-21 17:07:37.677 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-21 17:07:37.677 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-21 17:07:37.678 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-21 17:07:37.678 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-21 17:07:37.678 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-21 17:07:37.678 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-21 17:07:37.679 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-21 17:07:37.679 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-21 17:07:37.748 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:37.793 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel7829.pb -o orderer.example.net:7050 -c testchannel7829 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-21 17:07:37.942 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:37.945 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-21 17:07:37.947 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-21 17:07:37.947 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel7829
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel7829 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-21 17:07:38.326 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:38.334 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel7829> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel7829> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-21 17:07:40.658 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:40.662 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-21 17:07:40.663 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-21 17:07:40.663 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel7829",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-21T17:07:38Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel7829> exists and visible to sberbank[m[m[m
Step 8_cli: exit code 0
./verify/test-channel-does-not-exist.sh testchannel7829 vtb
Step: 9_cli Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel7829 vtb
[1;34m
Verifing if the <testchannel7829> channel exists in vtb.example.net...[m[m[m
[34m2020-02-21 17:07:41.253 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:41.255 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel7829> does not exist and in not visible to vtb[m[m[m
Step 9_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel7829 vtb ; ./verify/test-channel-does-not-exist.sh testchannel7829 vtb
Step: 10_cli Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel7829 vtb VERIFY: test-channel-does-not-exist.sh testchannel7829 vtb
[1;36m
Creating the <testchannel7829> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel7829[m[m[m
example.net

Create channel vtb testchannel7829
--2020-02-21 17:07:43--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:43--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:43--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:43--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-21 17:07:43.430 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-21 17:07:43.479 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-21 17:07:43.479 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-21 17:07:43.479 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-21 17:07:43.479 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-21 17:07:43.479 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-21 17:07:43.479 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-21 17:07:43.479 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-21 17:07:43.479 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-21 17:07:43.529 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-21 17:07:43.529 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-21 17:07:43.529 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-21 17:07:43.529 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-21 17:07:43.529 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-21 17:07:43.529 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-21 17:07:43.529 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-21 17:07:43.530 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-21 17:07:43.530 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-21 17:07:43.530 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-21 17:07:43.530 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-21 17:07:43.530 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-21 17:07:43.531 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-21 17:07:43.531 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-21 17:07:43.587 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel7829.pb -o orderer.example.net:7050 -c testchannel7829 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-21 17:07:43.658 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:43.660 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel7829.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel7829.json: No such file or directory
>> Prepare config update from vtb for channel testchannel7829
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel7829 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-21 17:07:43.836 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel7829> channel exists in vtb.example.net...[m[m[m
[34m2020-02-21 17:07:44.919 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:44.921 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel7829> does not exist and in not visible to vtb[m[m[m
Step 10_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel7829-02 vtb ; ./verify/test-channel-exists.sh testchannel7829-02 vtb
Step: 11_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel7829-02 vtb VERIFY: test-channel-exists.sh testchannel7829-02 vtb
[1;36m
Creating the <testchannel7829-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel7829-02[m[m[m
example.net

Create channel vtb testchannel7829-02
--2020-02-21 17:07:47--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:47--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:47--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:47--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-21 17:07:47.282 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-21 17:07:47.337 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-21 17:07:47.337 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-21 17:07:47.337 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-21 17:07:47.337 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-21 17:07:47.337 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-21 17:07:47.337 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-21 17:07:47.337 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-21 17:07:47.337 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-21 17:07:47.383 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-21 17:07:47.383 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-21 17:07:47.383 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-21 17:07:47.383 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-21 17:07:47.383 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-21 17:07:47.383 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-21 17:07:47.383 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-21 17:07:47.384 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-21 17:07:47.384 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-21 17:07:47.384 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-21 17:07:47.384 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-21 17:07:47.384 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-21 17:07:47.385 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-21 17:07:47.385 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-21 17:07:47.440 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:47.478 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel7829-02.pb -o orderer.example.net:7050 -c testchannel7829-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-21 17:07:47.561 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:47.563 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-21 17:07:47.564 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-21 17:07:47.564 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel7829-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel7829-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-21 17:07:47.862 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:47.872 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel7829-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel7829-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-21 17:07:50.050 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:50.053 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-21 17:07:50.055 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-21 17:07:50.055 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel7829-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-21T17:07:47Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel7829-02> exists and visible to vtb[m[m[m
Step 11_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel7829-02 sberbank ; ./verify/test-channel-does-not-exist.sh testchannel7829-02 sberbank
Step: 12_cli Test 'Can not create channel in ORG1 with the same name'
SKIPAPI: RUNTESTNOERRPRINT: create-channel.sh testchannel7829-02 sberbank VERIFY: test-channel-does-not-exist.sh testchannel7829-02 sberbank
[1;36m
Creating the <testchannel7829-02> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel7829-02[m[m[m
example.net

Create channel sberbank testchannel7829-02
--2020-02-21 17:07:52--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:52--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:52--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:52--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-21 17:07:52.319 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-21 17:07:52.370 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-21 17:07:52.370 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-21 17:07:52.370 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-21 17:07:52.370 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-21 17:07:52.370 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-21 17:07:52.370 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-21 17:07:52.370 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-21 17:07:52.370 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-21 17:07:52.420 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-21 17:07:52.420 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-21 17:07:52.420 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-21 17:07:52.420 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-21 17:07:52.420 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-21 17:07:52.420 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-21 17:07:52.420 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-21 17:07:52.421 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-21 17:07:52.421 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-21 17:07:52.421 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-21 17:07:52.421 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-21 17:07:52.421 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-21 17:07:52.422 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-21 17:07:52.422 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-21 17:07:52.479 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel7829-02.pb -o orderer.example.net:7050 -c testchannel7829-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-21 17:07:52.548 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:52.550 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel7829-02.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel7829-02.json: No such file or directory
>> Prepare config update from sberbank for channel testchannel7829-02
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel7829-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-21 17:07:52.724 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel7829-02> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-21 17:07:53.836 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:53.838 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel7829-02> does not exist and in not visible to sberbank[m[m[m
Step 12_cli: exit code 0
NO_RED_OUTPUT=false ./cli/add-org-to-channel.sh testchannel7829 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel7829 sberbank vtb
Step: 13_cli Test 'Add Second_org to channel created by the First_org'
RUNTEST: add-org-to-channel.sh testchannel7829 sberbank vtb VERIFY: test-channel-add-org.sh testchannel7829 sberbank vtb
[1;36m
Add vtb to the testchannel7829 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel7829 vtb 7051 example.net[m[m[m
--2020-02-21 17:07:56--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:56--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:56--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel7829, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel7829.pb -o orderer.example.net:7050 -c testchannel7829 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-21 17:07:56.259 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:56.260 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-21 17:07:56.261 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-21 17:07:56.261 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel7829
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel7829 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-21 17:07:56.569 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:56.580 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel7829 ...[m[m[m
[34m2020-02-21 17:07:57.545 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:07:57.547 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-21 17:07:57.548 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-21 17:07:57.548 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel7829>.[m[m[m
Step 13_cli: exit code 0
NO_RED_OUTPUT=false ./cli/add-org-to-channel.sh testchannel7829-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel7829-02 vtb sberbank
Step: 14_cli Test 'Add First_org to channel created by the Second_org'
RUNTEST: add-org-to-channel.sh testchannel7829-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel7829-02 vtb sberbank
[1;36m
Add sberbank to the testchannel7829-02 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel7829-02 sberbank 7051 example.net[m[m[m
--2020-02-21 17:07:59--  http://www.sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:59--  http://www.sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-21 17:07:59--  http://www.sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'sberbank' to channel testchannel7829-02, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel7829-02.pb -o orderer.example.net:7050 -c testchannel7829-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-21 17:08:00.022 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:08:00.024 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-21 17:08:00.027 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-21 17:08:00.027 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from sberbank for channel testchannel7829-02
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel7829-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-21 17:08:00.328 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:08:00.340 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel7829-02 ...[m[m[m
[34m2020-02-21 17:08:01.309 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-21 17:08:01.313 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-21 17:08:01.314 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-21 17:08:01.314 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel7829-02>.[m[m[m
Step 14_cli: exit code 0
queryContainerNetworkSettings returns: 4000
queryContainerNetworkSettings returns: 4001
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel29525 sberbank ; ./verify/test-channel-exists.sh testchannel29525 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel29525 sberbank VERIFY: test-channel-exists.sh testchannel29525 sberbank
[1;36m
Creating the <testchannel29525> channel for sberbank.example.net...[m[m[m
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel25000 sberbank ; ./verify/test-channel-exists.sh testchannel25000 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel25000 sberbank VERIFY: test-channel-exists.sh testchannel25000 sberbank
[1;36m
Creating the <testchannel25000> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel25000[m[m[m
example.net

Create channel sberbank testchannel25000
--2020-02-25 08:23:48--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:23:48--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:23:48--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:23:48--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:23:48.167 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:23:48.216 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:23:48.216 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:23:48.216 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:23:48.216 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:23:48.216 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:23:48.216 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:23:48.216 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:23:48.216 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:23:48.263 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:23:48.263 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:23:48.263 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:23:48.263 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:23:48.263 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:23:48.263 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:23:48.263 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:23:48.263 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:23:48.264 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:23:48.264 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:23:48.264 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:23:48.264 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:23:48.264 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:23:48.265 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:23:48.319 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:23:48.354 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel25000.pb -o orderer.example.net:7050 -c testchannel25000 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:23:48.436 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:23:48.438 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:23:48.439 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:23:48.439 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel25000
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel25000 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:23:48.726 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:23:48.734 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel25000> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel25000> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:23:50.702 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:23:50.705 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:23:50.706 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:23:50.706 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel25000",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:23:48Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel25000> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel18092 sberbank ; ./verify/test-channel-exists.sh testchannel18092 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel18092 sberbank VERIFY: test-channel-exists.sh testchannel18092 sberbank
[1;36mCreating testchannel18092 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYxOTA3M30.JFEOYr7E0uMi7YSvVREOlOeMWI5rpDoun7J752wHQ4A
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel18092> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel18092> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:24:35.441 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:24:35.443 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:24:35.444 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:24:35.444 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel18092",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:24:34Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel18092> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel13807 sberbank ; ./verify/test-channel-exists.sh testchannel13807 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel13807 sberbank VERIFY: test-channel-exists.sh testchannel13807 sberbank
[1;36mCreating testchannel13807 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYxOTA5MH0.pOdOjbsZMr-QDniOjMIu4Dw6l6gyhm67oBqk3B7wysw
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel13807> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel13807> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:24:52.052 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:24:52.054 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:24:52.055 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:24:52.055 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel13807",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:24:50Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel13807> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel13963 sberbank ; ./verify/test-channel-exists.sh testchannel13963 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel13963 sberbank VERIFY: test-channel-exists.sh testchannel13963 sberbank
[1;36m
Creating the <testchannel13963> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel13963[m[m[m
example.net

Create channel sberbank testchannel13963
--2020-02-25 08:25:06--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:06--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:06--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:07--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:25:07.049 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:25:07.100 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:25:07.100 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:25:07.100 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:25:07.100 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:25:07.100 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:25:07.100 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:25:07.100 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:25:07.100 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:25:07.147 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:25:07.147 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:25:07.147 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:25:07.147 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:25:07.147 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:25:07.148 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:25:07.148 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:25:07.148 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:25:07.148 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:25:07.148 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:25:07.148 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:25:07.149 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:25:07.149 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:25:07.149 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:25:07.201 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:07.233 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel13963.pb -o orderer.example.net:7050 -c testchannel13963 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:25:07.297 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:07.299 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:25:07.300 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:25:07.300 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel13963
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel13963 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:25:07.595 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:07.606 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel13963> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel13963> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:25:09.660 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:09.663 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:25:09.665 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:25:09.665 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel13963",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:25:07Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel13963> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel19799 sberbank ; ./verify/test-channel-exists.sh testchannel19799 sberbank
Step: 2_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel19799 sberbank VERIFY: test-channel-exists.sh testchannel19799 sberbank
[1;36mCreating testchannel19799 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYxOTExMH0.onBArlyyHdHSn1UprV649PsH57FwPKvi2wyTKYgeLIo
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel19799> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel19799> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:25:12.215 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:12.216 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:25:12.217 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:25:12.217 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel19799",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:25:11Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel19799> exists and visible to sberbank[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel24665 sberbank ; ./verify/test-channel-exists.sh testchannel24665 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel24665 sberbank VERIFY: test-channel-exists.sh testchannel24665 sberbank
[1;36m
Creating the <testchannel24665> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel24665[m[m[m
example.net

Create channel sberbank testchannel24665
--2020-02-25 08:25:23--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:23--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:23--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:23--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:25:23.316 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:25:23.385 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:25:23.385 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:25:23.385 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:25:23.385 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:25:23.385 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:25:23.385 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:25:23.385 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:25:23.385 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:25:23.441 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:25:23.441 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:25:23.441 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:25:23.441 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:25:23.441 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:25:23.441 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:25:23.441 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:25:23.442 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:25:23.442 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:25:23.442 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:25:23.442 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:25:23.442 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:25:23.443 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:25:23.443 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:25:23.495 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:23.538 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel24665.pb -o orderer.example.net:7050 -c testchannel24665 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:25:23.651 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:23.653 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:25:23.654 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:25:23.654 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel24665
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel24665 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:25:23.944 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:23.964 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel24665> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel24665> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:25:26.138 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:26.139 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:25:26.140 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:25:26.140 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel24665",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:25:23Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel24665> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
./verify/test-channel-does-not-exist.sh testchannel24665 vtb
Step: 2_cli Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel24665 vtb
[1;34m
Verifing if the <testchannel24665> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:25:26.715 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:26.719 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel24665> does not exist and in not visible to vtb[m[m[m
Step 2_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel24665 vtb ; ./verify/test-channel-does-not-exist.sh testchannel24665 vtb
Step: 3_cli Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel24665 vtb VERIFY: test-channel-does-not-exist.sh testchannel24665 vtb
[1;36m
Creating the <testchannel24665> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel24665[m[m[m
example.net

Create channel vtb testchannel24665
--2020-02-25 08:25:28--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:28--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:28--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:28--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:25:28.875 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:25:28.924 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:25:28.924 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:25:28.924 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:25:28.924 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:25:28.924 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:25:28.924 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:25:28.924 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:25:28.924 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:25:28.988 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:25:28.988 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:25:28.988 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:25:28.988 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:25:28.988 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:25:28.988 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:25:28.988 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:25:28.989 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:25:28.990 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:25:28.990 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:25:28.990 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:25:28.990 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:25:28.991 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:25:28.992 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:25:29.053 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel24665.pb -o orderer.example.net:7050 -c testchannel24665 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:25:29.121 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:29.122 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel24665.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel24665.json: No such file or directory
>> Prepare config update from vtb for channel testchannel24665
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel24665 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:25:29.290 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel24665> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:25:30.396 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:30.398 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel24665> does not exist and in not visible to vtb[m[m[m
Step 3_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel24665-02 vtb ; ./verify/test-channel-exists.sh testchannel24665-02 vtb
Step: 4_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel24665-02 vtb VERIFY: test-channel-exists.sh testchannel24665-02 vtb
[1;36m
Creating the <testchannel24665-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel24665-02[m[m[m
example.net

Create channel vtb testchannel24665-02
--2020-02-25 08:25:32--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:32--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:32--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:32--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:25:32.613 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:25:32.660 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:25:32.660 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:25:32.660 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:25:32.660 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:25:32.660 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:25:32.660 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:25:32.660 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:25:32.661 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:25:32.707 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:25:32.707 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:25:32.707 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:25:32.707 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:25:32.707 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:25:32.707 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:25:32.708 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:25:32.709 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:25:32.709 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:25:32.709 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:25:32.709 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:25:32.709 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:25:32.710 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:25:32.710 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:25:32.762 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:32.803 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel24665-02.pb -o orderer.example.net:7050 -c testchannel24665-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:25:32.879 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:32.882 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:25:32.883 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:25:32.883 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel24665-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel24665-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:25:33.208 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:33.216 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel24665-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel24665-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:25:35.377 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:35.379 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:25:35.380 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:25:35.380 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel24665-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:25:33Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel24665-02> exists and visible to vtb[m[m[m
Step 4_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel24665-02 sberbank ; ./verify/test-channel-does-not-exist.sh testchannel24665-02 sberbank
Step: 5_cli Test 'Can not create channel in ORG1 with the same name'
SKIPAPI: RUNTESTNOERRPRINT: create-channel.sh testchannel24665-02 sberbank VERIFY: test-channel-does-not-exist.sh testchannel24665-02 sberbank
[1;36m
Creating the <testchannel24665-02> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel24665-02[m[m[m
example.net

Create channel sberbank testchannel24665-02
--2020-02-25 08:25:37--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:37--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:37--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:37--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:25:37.632 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:25:37.682 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:25:37.682 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:25:37.682 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:25:37.682 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:25:37.682 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:25:37.682 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:25:37.682 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:25:37.682 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:25:37.728 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:25:37.728 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:25:37.728 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:25:37.728 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:25:37.728 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:25:37.728 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:25:37.728 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:25:37.728 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:25:37.729 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:25:37.729 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:25:37.729 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:25:37.729 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:25:37.729 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:25:37.730 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:25:37.783 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel24665-02.pb -o orderer.example.net:7050 -c testchannel24665-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:25:37.849 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:37.851 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel24665-02.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel24665-02.json: No such file or directory
>> Prepare config update from sberbank for channel testchannel24665-02
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel24665-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:25:38.035 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel24665-02> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:25:39.197 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:39.200 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel24665-02> does not exist and in not visible to sberbank[m[m[m
Step 5_cli: exit code 0
NO_RED_OUTPUT=false ./cli/add-org-to-channel.sh testchannel24665 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel24665 sberbank vtb
Step: 6_cli Test 'Add Second_org to channel created by the First_org'
RUNTEST: add-org-to-channel.sh testchannel24665 sberbank vtb VERIFY: test-channel-add-org.sh testchannel24665 sberbank vtb
[1;36m
Add vtb to the testchannel24665 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel24665 vtb 7051 example.net[m[m[m
--2020-02-25 08:25:41--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:41--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:41--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel24665, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel24665.pb -o orderer.example.net:7050 -c testchannel24665 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:25:41.379 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:41.381 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:25:41.383 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:25:41.383 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel24665
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel24665 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:25:41.686 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:41.702 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel24665 ...[m[m[m
[34m2020-02-25 08:25:42.685 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:42.688 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 08:25:42.689 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 08:25:42.689 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel24665>.[m[m[m
Step 6_cli: exit code 0
NO_RED_OUTPUT=false ./cli/add-org-to-channel.sh testchannel24665-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel24665-02 vtb sberbank
Step: 7_cli Test 'Add First_org to channel created by the Second_org'
RUNTEST: add-org-to-channel.sh testchannel24665-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel24665-02 vtb sberbank
[1;36m
Add sberbank to the testchannel24665-02 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel24665-02 sberbank 7051 example.net[m[m[m
--2020-02-25 08:25:45--  http://www.sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:45--  http://www.sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:25:45--  http://www.sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'sberbank' to channel testchannel24665-02, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel24665-02.pb -o orderer.example.net:7050 -c testchannel24665-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:25:45.283 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:45.285 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:25:45.286 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:25:45.286 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from sberbank for channel testchannel24665-02
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel24665-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:25:45.586 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:45.596 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel24665-02 ...[m[m[m
[34m2020-02-25 08:25:46.599 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:46.602 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 08:25:46.603 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 08:25:46.603 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel24665-02>.[m[m[m
Step 7_cli: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel19176 sberbank ; ./verify/test-channel-exists.sh testchannel19176 sberbank
Step: 8_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel19176 sberbank VERIFY: test-channel-exists.sh testchannel19176 sberbank
[1;36mCreating testchannel19176 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYxOTE0N30.EILCrHwKmgxoMSBGQ0cVKBHbmTAfG-BeQyB7B5jGENY
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel19176> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel19176> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:25:49.208 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:49.210 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:25:49.211 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:25:49.211 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel19176",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:25:48Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel19176> exists and visible to sberbank[m[m[m
Step 8_api: exit code 0
./verify/test-channel-does-not-exist.sh testchannel19176 vtb
Step: 9_api Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel19176 vtb
[1;34m
Verifing if the <testchannel19176> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:25:49.754 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:49.756 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel19176> does not exist and in not visible to vtb[m[m[m
Step 9_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh ^^^^^^testchannel19176 sberbank ; ./verify/test-channel-does-not-exist.sh ^^^^^^testchannel19176 sberbank
Step: 10_api Test 'Can not create the channel with incorrect name in ORG1'
SKIPCLI: RUNTESTNOERRPRINT: create-channel.sh ^^^^^^testchannel19176 sberbank VERIFY: test-channel-does-not-exist.sh ^^^^^^testchannel19176 sberbank
[1;36mCreating ^^^^^^testchannel19176 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYxOTE1MH0.T2qW538SpB6oi7COzrd6s1S5X_GPG7p0nawYH_WZ7AI
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
"Failed to create Channel. channel name should match Regex /^[a-z][a-z0-9.-]*$/, but got \"^^^^^^testchannel19176\"" 500
parse error: Unfinished string at EOF at line 1, column 7
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <^^^^^^testchannel19176> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:25:51.810 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:51.811 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
[1;32mOK: The channel <^^^^^^testchannel19176> does not exist and in not visible to sberbank[m[m[m
Step 10_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh testchannel19176 vtb ; ./verify/test-channel-does-not-exist.sh testchannel19176 vtb
Step: 11_api Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel19176 vtb VERIFY: test-channel-does-not-exist.sh testchannel19176 vtb
[1;36mCreating testchannel19176 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYxOTE1Mn0.pXlXw0uxcTPRsEgb6WH00vwexZCxAOD2TVBseD5_wyg
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
"Invalid results returned ::FORBIDDEN" 500
parse error: Unfinished string at EOF at line 1, column 8
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel19176> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:25:54.072 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:54.074 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel19176> does not exist and in not visible to vtb[m[m[m
Step 11_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel19176-02 vtb ; ./verify/test-channel-exists.sh testchannel19176-02 vtb
Step: 12_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel19176-02 vtb VERIFY: test-channel-exists.sh testchannel19176-02 vtb
[1;36mCreating testchannel19176-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYxOTE1NH0.drLzSMpV3EoJPAPJ6pHfBRQZbIAS1HZmNxougIIsiUU
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel19176-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel19176-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:25:56.506 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:56.509 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:25:56.511 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:25:56.511 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel19176-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:25:55Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel19176-02> exists and visible to vtb[m[m[m
Step 12_api: exit code 0
NO_RED_OUTPUT=false ./api/add-org-to-channel.sh testchannel19176 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel19176 sberbank vtb
Step: 13_api Test 'Add Second_org to channel created by the First_org'
RUNTEST: add-org-to-channel.sh testchannel19176 sberbank vtb VERIFY: test-channel-add-org.sh testchannel19176 sberbank vtb
[1;36mAdd vtb to the testchannel19176 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel19176 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYxOTE1N30.73Y65QiRJPs-klqC98bP3ZnpHcuG3QUE9n97XUyie0U
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel19176 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel19176 ...[m[m[m
[34m2020-02-25 08:25:59.578 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:25:59.584 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:25:59.587 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:25:59.587 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel19176>.[m[m[m
Step 13_api: exit code 0
NO_RED_OUTPUT=false ./api/add-org-to-channel.sh testchannel19176-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel19176-02 vtb sberbank
Step: 14_api Test 'Add First_org to channel created by the Second_org'
RUNTEST: add-org-to-channel.sh testchannel19176-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel19176-02 vtb sberbank
[1;36mAdd sberbank to the testchannel19176-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel19176-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYxOTE2MH0.f227chMvy6r6FREJxr4jpM8d4EakZm22vKjNC1iygRc
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel19176-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel19176-02 ...[m[m[m
[34m2020-02-25 08:26:02.287 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:26:02.291 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:26:02.294 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:26:02.294 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel19176-02>.[m[m[m
Step 14_api: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel16945 sberbank ; ./verify/test-channel-exists.sh testchannel16945 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel16945 sberbank VERIFY: test-channel-exists.sh testchannel16945 sberbank
[1;36m
Creating the <testchannel16945> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel16945[m[m[m
example.net

Create channel sberbank testchannel16945
--2020-02-25 08:29:00--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:00--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:00--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:00--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:29:00.802 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:29:00.859 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:29:00.859 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:29:00.859 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:29:00.859 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:29:00.859 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:29:00.859 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:29:00.859 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:29:00.859 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:29:00.918 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:29:00.918 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:29:00.918 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:29:00.918 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:29:00.918 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:29:00.918 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:29:00.918 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:29:00.919 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:29:00.919 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:29:00.919 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:29:00.919 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:29:00.920 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:29:00.920 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:29:00.920 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:29:00.992 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:01.037 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel16945.pb -o orderer.example.net:7050 -c testchannel16945 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:29:01.144 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:01.147 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:29:01.148 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:29:01.148 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel16945
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel16945 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:29:01.441 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:01.454 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel16945> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel16945> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:29:03.657 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:03.663 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:29:03.664 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:29:03.664 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel16945",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:29:01Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel16945> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
./verify/test-channel-does-not-exist.sh testchannel16945 vtb
Step: 2_cli Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel16945 vtb
[1;34m
Verifing if the <testchannel16945> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:29:04.345 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:04.347 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel16945> does not exist and in not visible to vtb[m[m[m
Step 2_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel16945 vtb ; ./verify/test-channel-does-not-exist.sh testchannel16945 vtb
Step: 3_cli Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel16945 vtb VERIFY: test-channel-does-not-exist.sh testchannel16945 vtb
[1;36m
Creating the <testchannel16945> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel16945[m[m[m
example.net

Create channel vtb testchannel16945
--2020-02-25 08:29:06--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:06--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:06--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:06--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:29:06.602 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:29:06.650 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:29:06.650 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:29:06.650 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:29:06.650 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:29:06.650 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:29:06.650 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:29:06.650 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:29:06.650 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:29:06.701 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:29:06.701 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:29:06.701 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:29:06.701 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:29:06.702 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:29:06.702 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:29:06.702 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:29:06.702 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:29:06.703 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:29:06.703 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:29:06.703 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:29:06.703 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:29:06.703 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:29:06.704 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:29:06.761 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel16945.pb -o orderer.example.net:7050 -c testchannel16945 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:29:06.829 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:06.831 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel16945.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel16945.json: No such file or directory
>> Prepare config update from vtb for channel testchannel16945
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel16945 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:29:07.025 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel16945> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:29:08.154 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:08.158 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel16945> does not exist and in not visible to vtb[m[m[m
Step 3_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel16945-02 vtb ; ./verify/test-channel-exists.sh testchannel16945-02 vtb
Step: 4_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel16945-02 vtb VERIFY: test-channel-exists.sh testchannel16945-02 vtb
[1;36m
Creating the <testchannel16945-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel16945-02[m[m[m
example.net

Create channel vtb testchannel16945-02
--2020-02-25 08:29:10--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:10--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:10--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:10--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:29:10.345 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:29:10.395 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:29:10.395 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:29:10.395 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:29:10.395 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:29:10.395 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:29:10.395 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:29:10.395 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:29:10.395 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:29:10.442 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:29:10.442 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:29:10.442 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:29:10.442 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:29:10.442 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:29:10.442 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:29:10.442 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:29:10.443 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:29:10.443 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:29:10.443 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:29:10.443 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:29:10.443 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:29:10.444 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:29:10.444 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:29:10.499 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:10.535 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel16945-02.pb -o orderer.example.net:7050 -c testchannel16945-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:29:10.605 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:10.607 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:29:10.608 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:29:10.609 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel16945-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel16945-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:29:10.900 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:10.910 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel16945-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel16945-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:29:13.090 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:13.093 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:29:13.094 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:29:13.094 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel16945-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:29:10Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel16945-02> exists and visible to vtb[m[m[m
Step 4_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel16945-02 sberbank ; ./verify/test-channel-does-not-exist.sh testchannel16945-02 sberbank
Step: 5_cli Test 'Can not create channel in ORG1 with the same name'
SKIPAPI: RUNTESTNOERRPRINT: create-channel.sh testchannel16945-02 sberbank VERIFY: test-channel-does-not-exist.sh testchannel16945-02 sberbank
[1;36m
Creating the <testchannel16945-02> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel16945-02[m[m[m
example.net

Create channel sberbank testchannel16945-02
--2020-02-25 08:29:15--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:15--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:15--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:15--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:29:15.374 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:29:15.422 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:29:15.422 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:29:15.422 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:29:15.422 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:29:15.422 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:29:15.422 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:29:15.422 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:29:15.422 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:29:15.469 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:29:15.469 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:29:15.469 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:29:15.469 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:29:15.469 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:29:15.469 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:29:15.469 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:29:15.469 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:29:15.470 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:29:15.470 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:29:15.470 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:29:15.470 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:29:15.470 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:29:15.471 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:29:15.528 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel16945-02.pb -o orderer.example.net:7050 -c testchannel16945-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:29:15.595 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:15.597 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel16945-02.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel16945-02.json: No such file or directory
>> Prepare config update from sberbank for channel testchannel16945-02
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel16945-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:29:15.764 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel16945-02> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:29:16.940 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:16.942 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel16945-02> does not exist and in not visible to sberbank[m[m[m
Step 5_cli: exit code 0
NO_RED_OUTPUT=false ./cli/add-org-to-channel.sh testchannel16945 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel16945 sberbank vtb
Step: 6_cli Test 'Add Second_org to channel created by the First_org'
RUNTEST: add-org-to-channel.sh testchannel16945 sberbank vtb VERIFY: test-channel-add-org.sh testchannel16945 sberbank vtb
[1;36m
Add vtb to the testchannel16945 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel16945 vtb 7051 example.net[m[m[m
--2020-02-25 08:29:19--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:19--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:19--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel16945, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel16945.pb -o orderer.example.net:7050 -c testchannel16945 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:29:19.387 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:19.392 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:29:19.393 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:29:19.393 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel16945
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel16945 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:29:19.696 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:19.708 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel16945 ...[m[m[m
[34m2020-02-25 08:29:20.666 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:20.669 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 08:29:20.670 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 08:29:20.670 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel16945>.[m[m[m
Step 6_cli: exit code 0
NO_RED_OUTPUT=false ./cli/add-org-to-channel.sh testchannel16945-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel16945-02 vtb sberbank
Step: 7_cli Test 'Add First_org to channel created by the Second_org'
RUNTEST: add-org-to-channel.sh testchannel16945-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel16945-02 vtb sberbank
[1;36m
Add sberbank to the testchannel16945-02 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel16945-02 sberbank 7051 example.net[m[m[m
--2020-02-25 08:29:23--  http://www.sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:23--  http://www.sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:29:23--  http://www.sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'sberbank' to channel testchannel16945-02, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel16945-02.pb -o orderer.example.net:7050 -c testchannel16945-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:29:23.119 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:23.127 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:29:23.129 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:29:23.129 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from sberbank for channel testchannel16945-02
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel16945-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:29:23.445 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:23.455 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel16945-02 ...[m[m[m
[34m2020-02-25 08:29:24.483 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:29:24.485 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 08:29:24.486 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 08:29:24.486 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel16945-02>.[m[m[m
Step 7_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel23106 sberbank ; ./verify/test-channel-exists.sh testchannel23106 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel23106 sberbank VERIFY: test-channel-exists.sh testchannel23106 sberbank
[1;36m
Creating the <testchannel23106> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel23106[m[m[m
example.net

Create channel sberbank testchannel23106
--2020-02-25 08:30:03--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:03--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:03--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:03--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:30:03.988 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:30:04.050 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:30:04.050 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:30:04.050 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:30:04.050 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:30:04.050 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:30:04.050 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:30:04.050 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:30:04.050 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:30:04.098 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:30:04.098 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:30:04.098 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:30:04.098 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:30:04.098 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:30:04.099 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:30:04.099 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:30:04.099 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:30:04.099 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:30:04.099 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:30:04.099 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:30:04.100 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:30:04.100 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:30:04.100 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:30:04.154 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:04.194 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel23106.pb -o orderer.example.net:7050 -c testchannel23106 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:30:04.318 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:04.320 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:30:04.321 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:30:04.321 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel23106
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel23106 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:30:04.616 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:04.624 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel23106> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel23106> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:30:06.597 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:06.599 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:30:06.600 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:30:06.600 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel23106",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:30:04Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel23106> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
./verify/test-channel-does-not-exist.sh testchannel23106 vtb
Step: 2_cli Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel23106 vtb
[1;34m
Verifing if the <testchannel23106> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:30:07.137 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:07.138 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel23106> does not exist and in not visible to vtb[m[m[m
Step 2_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel23106 vtb ; ./verify/test-channel-does-not-exist.sh testchannel23106 vtb
Step: 3_cli Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel23106 vtb VERIFY: test-channel-does-not-exist.sh testchannel23106 vtb
[1;36m
Creating the <testchannel23106> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel23106[m[m[m
example.net

Create channel vtb testchannel23106
--2020-02-25 08:30:09--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:09--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:09--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:09--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:30:09.329 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:30:09.376 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:30:09.377 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:30:09.377 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:30:09.377 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:30:09.377 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:30:09.377 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:30:09.377 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:30:09.377 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:30:09.423 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:30:09.423 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:30:09.423 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:30:09.423 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:30:09.423 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:30:09.423 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:30:09.423 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:30:09.423 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:30:09.424 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:30:09.424 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:30:09.424 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:30:09.424 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:30:09.425 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:30:09.425 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:30:09.478 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel23106.pb -o orderer.example.net:7050 -c testchannel23106 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:30:09.547 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:09.549 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel23106.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel23106.json: No such file or directory
>> Prepare config update from vtb for channel testchannel23106
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel23106 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:30:09.718 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel23106> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:30:10.679 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:10.681 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel23106> does not exist and in not visible to vtb[m[m[m
Step 3_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel23106-02 vtb ; ./verify/test-channel-exists.sh testchannel23106-02 vtb
Step: 4_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel23106-02 vtb VERIFY: test-channel-exists.sh testchannel23106-02 vtb
[1;36m
Creating the <testchannel23106-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel23106-02[m[m[m
example.net

Create channel vtb testchannel23106-02
--2020-02-25 08:30:12--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:12--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:12--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:12--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:30:12.888 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:30:12.936 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:30:12.936 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:30:12.936 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:30:12.936 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:30:12.936 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:30:12.936 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:30:12.936 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:30:12.936 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:30:12.992 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:30:12.993 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:30:12.993 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:30:12.993 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:30:12.993 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:30:12.993 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:30:12.993 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:30:12.994 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:30:12.994 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:30:12.994 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:30:12.994 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:30:12.994 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:30:12.995 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:30:12.995 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:30:13.055 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:13.097 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel23106-02.pb -o orderer.example.net:7050 -c testchannel23106-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:30:13.219 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:13.221 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:30:13.222 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:30:13.222 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel23106-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel23106-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:30:13.510 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:13.519 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel23106-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel23106-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:30:15.645 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:15.647 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:30:15.648 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:30:15.648 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel23106-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:30:13Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel23106-02> exists and visible to vtb[m[m[m
Step 4_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel23106-02 sberbank ; ./verify/test-channel-does-not-exist.sh testchannel23106-02 sberbank
Step: 5_cli Test 'Can not create channel in ORG1 with the same name'
SKIPAPI: RUNTESTNOERRPRINT: create-channel.sh testchannel23106-02 sberbank VERIFY: test-channel-does-not-exist.sh testchannel23106-02 sberbank
[1;36m
Creating the <testchannel23106-02> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel23106-02[m[m[m
example.net

Create channel sberbank testchannel23106-02
--2020-02-25 08:30:17--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:17--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:17--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:17--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:30:17.895 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:30:17.944 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:30:17.944 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:30:17.944 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:30:17.944 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:30:17.944 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:30:17.944 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:30:17.944 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:30:17.944 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:30:18.004 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:30:18.004 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:30:18.004 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:30:18.004 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:30:18.004 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:30:18.004 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:30:18.004 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:30:18.004 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:30:18.005 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:30:18.005 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:30:18.005 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:30:18.005 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:30:18.006 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:30:18.006 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:30:18.063 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel23106-02.pb -o orderer.example.net:7050 -c testchannel23106-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:30:18.131 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:18.133 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel23106-02.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel23106-02.json: No such file or directory
>> Prepare config update from sberbank for channel testchannel23106-02
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel23106-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:30:18.299 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel23106-02> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:30:19.368 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:19.370 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel23106-02> does not exist and in not visible to sberbank[m[m[m
Step 5_cli: exit code 0
NO_RED_OUTPUT=false ./cli/add-org-to-channel.sh testchannel23106 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel23106 sberbank vtb
Step: 6_cli Test 'Add Second_org to channel created by the First_org'
RUNTEST: add-org-to-channel.sh testchannel23106 sberbank vtb VERIFY: test-channel-add-org.sh testchannel23106 sberbank vtb
[1;36m
Add vtb to the testchannel23106 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel23106 vtb 7051 example.net[m[m[m
--2020-02-25 08:30:21--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:21--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:21--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel23106, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel23106.pb -o orderer.example.net:7050 -c testchannel23106 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:30:21.623 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:21.626 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:30:21.628 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:30:21.628 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel23106
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel23106 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:30:21.926 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:21.935 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel23106 ...[m[m[m
[34m2020-02-25 08:30:22.887 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:22.889 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 08:30:22.890 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 08:30:22.890 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel23106>.[m[m[m
Step 6_cli: exit code 0
NO_RED_OUTPUT=false ./cli/add-org-to-channel.sh testchannel23106-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel23106-02 vtb sberbank
Step: 7_cli Test 'Add First_org to channel created by the Second_org'
RUNTEST: add-org-to-channel.sh testchannel23106-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel23106-02 vtb sberbank
[1;36m
Add sberbank to the testchannel23106-02 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel23106-02 sberbank 7051 example.net[m[m[m
--2020-02-25 08:30:25--  http://www.sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:25--  http://www.sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:30:25--  http://www.sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'sberbank' to channel testchannel23106-02, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel23106-02.pb -o orderer.example.net:7050 -c testchannel23106-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:30:25.313 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:25.314 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:30:25.315 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:30:25.315 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from sberbank for channel testchannel23106-02
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel23106-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:30:25.615 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:25.625 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel23106-02 ...[m[m[m
[34m2020-02-25 08:30:26.513 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:30:26.515 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 08:30:26.516 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 08:30:26.516 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel23106-02>.[m[m[m
Step 7_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel3936 sberbank ; ./verify/test-channel-exists.sh testchannel3936 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel3936 sberbank VERIFY: test-channel-exists.sh testchannel3936 sberbank
[1;36m
Creating the <testchannel3936> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel3936[m[m[m
example.net

Create channel sberbank testchannel3936
--2020-02-25 08:33:08--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:08--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:08--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:08--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:33:08.735 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:33:08.783 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:33:08.783 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:33:08.783 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:33:08.783 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:33:08.783 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:33:08.783 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:33:08.783 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:33:08.783 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:33:08.829 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:33:08.829 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:33:08.829 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:33:08.829 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:33:08.829 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:33:08.829 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:33:08.829 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:33:08.829 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:33:08.830 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:33:08.830 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:33:08.830 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:33:08.830 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:33:08.830 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:33:08.830 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:33:08.884 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:08.922 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel3936.pb -o orderer.example.net:7050 -c testchannel3936 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:33:09.032 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:09.035 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:33:09.036 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:33:09.036 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel3936
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel3936 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:33:09.332 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:09.341 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel3936> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel3936> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:33:11.438 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:11.440 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:33:11.441 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:33:11.441 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel3936",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:33:09Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel3936> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
./verify/test-channel-does-not-exist.sh testchannel3936 vtb
Step: 2_cli Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel3936 vtb
[1;34m
Verifing if the <testchannel3936> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:33:11.941 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:11.942 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel3936> does not exist and in not visible to vtb[m[m[m
Step 2_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel3936 vtb ; ./verify/test-channel-does-not-exist.sh testchannel3936 vtb
Step: 3_cli Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel3936 vtb VERIFY: test-channel-does-not-exist.sh testchannel3936 vtb
[1;36m
Creating the <testchannel3936> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel3936[m[m[m
example.net

Create channel vtb testchannel3936
--2020-02-25 08:33:14--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:14--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:14--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:14--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:33:14.254 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:33:14.303 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:33:14.303 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:33:14.303 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:33:14.303 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:33:14.303 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:33:14.303 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:33:14.303 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:33:14.303 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:33:14.350 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:33:14.350 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:33:14.350 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:33:14.350 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:33:14.350 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:33:14.350 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:33:14.350 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:33:14.351 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:33:14.351 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:33:14.351 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:33:14.351 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:33:14.351 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:33:14.352 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:33:14.352 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:33:14.409 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel3936.pb -o orderer.example.net:7050 -c testchannel3936 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:33:14.479 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:14.481 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel3936.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel3936.json: No such file or directory
>> Prepare config update from vtb for channel testchannel3936
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel3936 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:33:14.649 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel3936> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:33:15.579 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:15.580 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel3936> does not exist and in not visible to vtb[m[m[m
Step 3_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel3936-02 vtb ; ./verify/test-channel-exists.sh testchannel3936-02 vtb
Step: 4_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel3936-02 vtb VERIFY: test-channel-exists.sh testchannel3936-02 vtb
[1;36m
Creating the <testchannel3936-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel3936-02[m[m[m
example.net

Create channel vtb testchannel3936-02
--2020-02-25 08:33:17--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:17--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:17--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:17--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:33:17.778 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:33:17.827 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:33:17.827 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:33:17.827 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:33:17.827 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:33:17.827 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:33:17.827 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:33:17.827 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:33:17.827 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:33:17.873 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:33:17.873 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:33:17.873 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:33:17.874 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:33:17.874 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:33:17.874 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:33:17.874 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:33:17.874 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:33:17.874 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:33:17.875 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:33:17.875 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:33:17.875 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:33:17.875 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:33:17.875 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:33:17.929 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:17.965 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel3936-02.pb -o orderer.example.net:7050 -c testchannel3936-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:33:18.041 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:18.044 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:33:18.045 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:33:18.045 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel3936-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel3936-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:33:18.337 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:18.345 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel3936-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel3936-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:33:20.456 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:20.458 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:33:20.460 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:33:20.460 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel3936-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:33:18Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel3936-02> exists and visible to vtb[m[m[m
Step 4_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel3936-02 sberbank ; ./verify/test-channel-does-not-exist.sh testchannel3936-02 sberbank
Step: 5_cli Test 'Can not create channel in ORG1 with the same name'
SKIPAPI: RUNTESTNOERRPRINT: create-channel.sh testchannel3936-02 sberbank VERIFY: test-channel-does-not-exist.sh testchannel3936-02 sberbank
[1;36m
Creating the <testchannel3936-02> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel3936-02[m[m[m
example.net

Create channel sberbank testchannel3936-02
--2020-02-25 08:33:22--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:22--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:22--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:22--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:33:22.778 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:33:22.831 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:33:22.831 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:33:22.831 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:33:22.831 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:33:22.831 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:33:22.831 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:33:22.831 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:33:22.831 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:33:22.879 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:33:22.879 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:33:22.879 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:33:22.879 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:33:22.879 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:33:22.879 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:33:22.879 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:33:22.880 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:33:22.880 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:33:22.880 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:33:22.880 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:33:22.880 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:33:22.881 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:33:22.881 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:33:22.938 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel3936-02.pb -o orderer.example.net:7050 -c testchannel3936-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:33:23.012 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:23.014 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel3936-02.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel3936-02.json: No such file or directory
>> Prepare config update from sberbank for channel testchannel3936-02
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel3936-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:33:23.212 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel3936-02> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:33:24.175 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:24.181 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel3936-02> does not exist and in not visible to sberbank[m[m[m
Step 5_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel3936 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel3936 sberbank vtb
Step: 6_cli Test 'Add Second_org to channel created by the First_org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel3936 sberbank vtb VERIFY: test-channel-add-org.sh testchannel3936 sberbank vtb
[1;36m
Add vtb to the testchannel3936 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel3936 vtb 7051 example.net[m[m[m
--2020-02-25 08:33:26--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:26--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:26--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel3936, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel3936.pb -o orderer.example.net:7050 -c testchannel3936 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:33:26.466 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:26.468 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:33:26.470 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:33:26.470 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel3936
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel3936 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:33:26.768 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:26.779 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel3936 ...[m[m[m
[34m2020-02-25 08:33:27.650 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:27.653 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 08:33:27.654 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 08:33:27.654 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel3936>.[m[m[m
Step 6_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel3936-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel3936-02 vtb sberbank
Step: 7_cli Test 'Add First_org to channel created by the Second_org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel3936-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel3936-02 vtb sberbank
[1;36m
Add sberbank to the testchannel3936-02 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel3936-02 sberbank 7051 example.net[m[m[m
--2020-02-25 08:33:29--  http://www.sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:29--  http://www.sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:33:29--  http://www.sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'sberbank' to channel testchannel3936-02, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel3936-02.pb -o orderer.example.net:7050 -c testchannel3936-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:33:29.890 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:29.892 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:33:29.893 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:33:29.894 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from sberbank for channel testchannel3936-02
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel3936-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:33:30.211 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:30.222 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel3936-02 ...[m[m[m
[34m2020-02-25 08:33:31.114 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:33:31.117 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 08:33:31.118 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 08:33:31.118 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel3936-02>.[m[m[m
Step 7_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel2675 sberbank ; ./verify/test-channel-exists.sh testchannel2675 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel2675 sberbank VERIFY: test-channel-exists.sh testchannel2675 sberbank
[1;36m
Creating the <testchannel2675> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel2675[m[m[m
example.net

Create channel sberbank testchannel2675
--2020-02-25 08:38:36--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:36--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:36--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:36--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:38:36.887 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:38:36.936 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:38:36.936 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:38:36.936 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:38:36.936 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:38:36.936 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:38:36.936 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:38:36.936 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:38:36.936 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:38:36.996 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:38:36.996 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:38:36.996 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:38:36.996 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:38:36.996 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:38:36.996 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:38:36.996 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:38:36.996 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:38:36.997 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:38:36.997 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:38:36.997 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:38:36.997 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:38:36.997 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:38:36.997 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:38:37.061 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:37.095 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel2675.pb -o orderer.example.net:7050 -c testchannel2675 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:38:37.158 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:37.160 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:38:37.161 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:38:37.161 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel2675
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel2675 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:38:37.448 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:37.457 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel2675> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel2675> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:38:39.528 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:39.532 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:38:39.533 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:38:39.533 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel2675",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:38:37Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel2675> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
./verify/test-channel-does-not-exist.sh testchannel2675 vtb
Step: 2_cli Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel2675 vtb
[1;34m
Verifing if the <testchannel2675> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:38:40.107 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:40.109 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel2675> does not exist and in not visible to vtb[m[m[m
Step 2_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel2675 vtb ; ./verify/test-channel-does-not-exist.sh testchannel2675 vtb
Step: 3_cli Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel2675 vtb VERIFY: test-channel-does-not-exist.sh testchannel2675 vtb
[1;36m
Creating the <testchannel2675> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel2675[m[m[m
example.net

Create channel vtb testchannel2675
--2020-02-25 08:38:42--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:42--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:42--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:42--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:38:42.206 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:38:42.254 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:38:42.254 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:38:42.254 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:38:42.254 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:38:42.254 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:38:42.254 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:38:42.254 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:38:42.254 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:38:42.300 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:38:42.300 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:38:42.300 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:38:42.300 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:38:42.300 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:38:42.300 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:38:42.300 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:38:42.301 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:38:42.301 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:38:42.301 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:38:42.301 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:38:42.301 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:38:42.302 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:38:42.302 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:38:42.354 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel2675.pb -o orderer.example.net:7050 -c testchannel2675 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:38:42.421 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:42.423 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel2675.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel2675.json: No such file or directory
>> Prepare config update from vtb for channel testchannel2675
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel2675 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:38:42.591 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel2675> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:38:43.520 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:43.522 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel2675> does not exist and in not visible to vtb[m[m[m
Step 3_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel2675-02 vtb ; ./verify/test-channel-exists.sh testchannel2675-02 vtb
Step: 4_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel2675-02 vtb VERIFY: test-channel-exists.sh testchannel2675-02 vtb
[1;36m
Creating the <testchannel2675-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel2675-02[m[m[m
example.net

Create channel vtb testchannel2675-02
--2020-02-25 08:38:45--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:45--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:45--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:45--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:38:45.731 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:38:45.781 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:38:45.781 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:38:45.781 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:38:45.781 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:38:45.781 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:38:45.781 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:38:45.781 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:38:45.781 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:38:45.831 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:38:45.831 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:38:45.831 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:38:45.831 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:38:45.831 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:38:45.831 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:38:45.831 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:38:45.832 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:38:45.832 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:38:45.832 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:38:45.832 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:38:45.832 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:38:45.833 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:38:45.833 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:38:45.886 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:45.927 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel2675-02.pb -o orderer.example.net:7050 -c testchannel2675-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:38:46.001 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:46.003 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:38:46.004 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:38:46.004 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel2675-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel2675-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:38:46.299 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:46.308 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel2675-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel2675-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:38:48.392 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:48.394 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:38:48.395 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:38:48.395 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel2675-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:38:46Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel2675-02> exists and visible to vtb[m[m[m
Step 4_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel2675-02 sberbank ; ./verify/test-channel-does-not-exist.sh testchannel2675-02 sberbank
Step: 5_cli Test 'Can not create channel in ORG1 with the same name'
SKIPAPI: RUNTESTNOERRPRINT: create-channel.sh testchannel2675-02 sberbank VERIFY: test-channel-does-not-exist.sh testchannel2675-02 sberbank
[1;36m
Creating the <testchannel2675-02> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel2675-02[m[m[m
example.net

Create channel sberbank testchannel2675-02
--2020-02-25 08:38:50--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:50--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:50--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:50--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:38:50.614 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:38:50.662 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:38:50.662 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:38:50.662 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:38:50.662 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:38:50.662 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:38:50.662 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:38:50.662 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:38:50.663 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:38:50.710 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:38:50.710 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:38:50.711 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:38:50.711 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:38:50.711 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:38:50.711 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:38:50.711 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:38:50.711 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:38:50.711 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:38:50.712 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:38:50.712 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:38:50.712 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:38:50.712 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:38:50.712 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:38:50.766 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel2675-02.pb -o orderer.example.net:7050 -c testchannel2675-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:38:50.833 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:50.835 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel2675-02.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel2675-02.json: No such file or directory
>> Prepare config update from sberbank for channel testchannel2675-02
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel2675-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:38:51.021 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel2675-02> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:38:51.956 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:51.959 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel2675-02> does not exist and in not visible to sberbank[m[m[m
Step 5_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel2675 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel2675 sberbank vtb
Step: 6_cli Test 'Add vtb to channel testchannel2675 created by the sberbank org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel2675 sberbank vtb VERIFY: test-channel-add-org.sh testchannel2675 sberbank vtb
[1;36m
Add vtb to the testchannel2675 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel2675 vtb 7051 example.net[m[m[m
--2020-02-25 08:38:54--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:54--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:54--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel2675, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel2675.pb -o orderer.example.net:7050 -c testchannel2675 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:38:54.298 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:54.300 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:38:54.301 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:38:54.301 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel2675
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel2675 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:38:54.603 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:54.614 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel2675 ...[m[m[m
[34m2020-02-25 08:38:55.625 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:55.627 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 08:38:55.631 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 08:38:55.632 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel2675>.[m[m[m
Step 6_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel2675-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel2675-02 vtb sberbank
Step: 7_cli Test 'Add sberbank to channel testchannel2675-02 created by the vtb org''
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel2675-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel2675-02 vtb sberbank
[1;36m
Add sberbank to the testchannel2675-02 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel2675-02 sberbank 7051 example.net[m[m[m
--2020-02-25 08:38:57--  http://www.sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:57--  http://www.sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:38:57--  http://www.sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'sberbank' to channel testchannel2675-02, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel2675-02.pb -o orderer.example.net:7050 -c testchannel2675-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:38:57.900 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:57.902 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:38:57.903 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:38:57.903 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from sberbank for channel testchannel2675-02
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel2675-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:38:58.215 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:58.227 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel2675-02 ...[m[m[m
[34m2020-02-25 08:38:59.107 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:38:59.110 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 08:38:59.111 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 08:38:59.111 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel2675-02>.[m[m[m
Step 7_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel7894 sberbank ; ./verify/test-channel-exists.sh testchannel7894 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel7894 sberbank VERIFY: test-channel-exists.sh testchannel7894 sberbank
[1;36m
Creating the <testchannel7894> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel7894[m[m[m
example.net

Create channel sberbank testchannel7894
--2020-02-25 08:40:07--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:07--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:07--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:07--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:40:07.958 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:40:08.026 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:40:08.026 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:40:08.026 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:40:08.026 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:40:08.026 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:40:08.026 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:40:08.026 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:40:08.026 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:40:08.075 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:40:08.075 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:40:08.075 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:40:08.075 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:40:08.076 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:40:08.076 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:40:08.076 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:40:08.076 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:40:08.076 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:40:08.076 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:40:08.076 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:40:08.077 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:40:08.077 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:40:08.077 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:40:08.137 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:08.172 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel7894.pb -o orderer.example.net:7050 -c testchannel7894 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:40:08.243 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:08.245 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:40:08.246 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:40:08.246 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel7894
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel7894 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:40:08.543 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:08.555 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel7894> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel7894> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:40:10.595 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:10.597 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:40:10.598 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:40:10.598 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel7894",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:40:08Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel7894> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
./verify/test-channel-does-not-exist.sh testchannel7894 vtb
Step: 2_cli Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel7894 vtb
[1;34m
Verifing if the <testchannel7894> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:40:11.115 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:11.117 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel7894> does not exist and in not visible to vtb[m[m[m
Step 2_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel7894 vtb ; ./verify/test-channel-does-not-exist.sh testchannel7894 vtb
Step: 3_cli Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel7894 vtb VERIFY: test-channel-does-not-exist.sh testchannel7894 vtb
[1;36m
Creating the <testchannel7894> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel7894[m[m[m
example.net

Create channel vtb testchannel7894
--2020-02-25 08:40:13--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:13--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:13--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:13--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:40:13.309 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:40:13.356 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:40:13.356 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:40:13.357 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:40:13.357 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:40:13.357 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:40:13.357 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:40:13.357 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:40:13.357 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:40:13.404 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:40:13.404 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:40:13.404 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:40:13.404 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:40:13.404 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:40:13.404 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:40:13.404 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:40:13.405 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:40:13.405 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:40:13.405 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:40:13.405 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:40:13.405 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:40:13.406 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:40:13.406 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:40:13.460 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel7894.pb -o orderer.example.net:7050 -c testchannel7894 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:40:13.528 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:13.529 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel7894.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel7894.json: No such file or directory
>> Prepare config update from vtb for channel testchannel7894
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel7894 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:40:13.696 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel7894> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:40:14.640 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:14.644 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel7894> does not exist and in not visible to vtb[m[m[m
Step 3_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel7894-02 vtb ; ./verify/test-channel-exists.sh testchannel7894-02 vtb
Step: 4_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel7894-02 vtb VERIFY: test-channel-exists.sh testchannel7894-02 vtb
[1;36m
Creating the <testchannel7894-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel7894-02[m[m[m
example.net

Create channel vtb testchannel7894-02
--2020-02-25 08:40:16--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:16--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:16--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:16--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:40:16.933 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:40:16.987 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:40:16.987 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:40:16.987 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:40:16.987 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:40:16.987 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:40:16.987 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:40:16.987 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:40:16.987 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:40:17.048 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:40:17.048 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:40:17.048 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:40:17.048 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:40:17.048 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:40:17.048 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:40:17.048 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:40:17.049 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:40:17.049 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:40:17.049 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:40:17.049 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:40:17.050 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:40:17.050 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:40:17.050 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:40:17.105 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:17.138 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel7894-02.pb -o orderer.example.net:7050 -c testchannel7894-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:40:17.201 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:17.202 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:40:17.203 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:40:17.204 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel7894-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel7894-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:40:17.492 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:17.501 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel7894-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel7894-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:40:19.570 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:19.572 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:40:19.574 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:40:19.574 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel7894-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:40:17Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel7894-02> exists and visible to vtb[m[m[m
Step 4_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel7894-02 sberbank ; ./verify/test-channel-does-not-exist.sh testchannel7894-02 sberbank
Step: 5_cli Test 'Can not create channel in ORG1 with the same name'
SKIPAPI: RUNTESTNOERRPRINT: create-channel.sh testchannel7894-02 sberbank VERIFY: test-channel-does-not-exist.sh testchannel7894-02 sberbank
[1;36m
Creating the <testchannel7894-02> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel7894-02[m[m[m
example.net

Create channel sberbank testchannel7894-02
--2020-02-25 08:40:21--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:21--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:21--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:21--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:40:21.818 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:40:21.867 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:40:21.867 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:40:21.867 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:40:21.867 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:40:21.867 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:40:21.867 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:40:21.867 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:40:21.867 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:40:21.917 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:40:21.917 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:40:21.917 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:40:21.917 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:40:21.917 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:40:21.917 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:40:21.917 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:40:21.918 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:40:21.918 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:40:21.918 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:40:21.918 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:40:21.918 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:40:21.919 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:40:21.919 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:40:21.982 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel7894-02.pb -o orderer.example.net:7050 -c testchannel7894-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:40:22.058 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:22.062 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel7894-02.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel7894-02.json: No such file or directory
>> Prepare config update from sberbank for channel testchannel7894-02
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel7894-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:40:22.232 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel7894-02> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:40:23.258 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:23.259 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel7894-02> does not exist and in not visible to sberbank[m[m[m
Step 5_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel7894 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel7894 sberbank vtb
Step: 6_cli Test 'Add <vtb> to channel <testchannel7894> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel7894 sberbank vtb VERIFY: test-channel-add-org.sh testchannel7894 sberbank vtb
[1;36m
Add vtb to the testchannel7894 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel7894 vtb 7051 example.net[m[m[m
--2020-02-25 08:40:25--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:25--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:25--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel7894, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel7894.pb -o orderer.example.net:7050 -c testchannel7894 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:40:25.460 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:25.462 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:40:25.463 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:40:25.463 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel7894
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel7894 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:40:25.761 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:25.771 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel7894 ...[m[m[m
[34m2020-02-25 08:40:26.635 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:26.637 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 08:40:26.638 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 08:40:26.639 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel7894>.[m[m[m
Step 6_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel7894-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel7894-02 vtb sberbank
Step: 7_cli Test 'Add <sberbank> to channel <testchannel7894-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel7894-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel7894-02 vtb sberbank
[1;36m
Add sberbank to the testchannel7894-02 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel7894-02 sberbank 7051 example.net[m[m[m
--2020-02-25 08:40:28--  http://www.sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:28--  http://www.sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:40:28--  http://www.sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'sberbank' to channel testchannel7894-02, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel7894-02.pb -o orderer.example.net:7050 -c testchannel7894-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:40:29.013 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:29.015 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:40:29.016 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:40:29.016 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from sberbank for channel testchannel7894-02
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel7894-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:40:29.314 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:29.324 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel7894-02 ...[m[m[m
[34m2020-02-25 08:40:30.254 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:40:30.256 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 08:40:30.257 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 08:40:30.257 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel7894-02>.[m[m[m
Step 7_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel26956 sberbank ; ./verify/test-channel-exists.sh testchannel26956 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel26956 sberbank VERIFY: test-channel-exists.sh testchannel26956 sberbank
[1;36m
Creating the <testchannel26956> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel26956[m[m[m
example.net

Create channel sberbank testchannel26956
--2020-02-25 08:42:43--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:42:43--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:42:43--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:42:43--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:42:43.792 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:42:43.842 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:42:43.842 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:42:43.842 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:42:43.842 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:42:43.842 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:42:43.842 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:42:43.842 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:42:43.842 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:42:43.888 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:42:43.888 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:42:43.888 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:42:43.888 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:42:43.888 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:42:43.888 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:42:43.888 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:42:43.889 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:42:43.889 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:42:43.889 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:42:43.889 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:42:43.889 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:42:43.890 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:42:43.890 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:42:43.945 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:42:43.979 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel26956.pb -o orderer.example.net:7050 -c testchannel26956 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:42:44.052 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:42:44.053 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:42:44.055 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:42:44.055 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel26956
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel26956 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:42:44.351 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:42:44.361 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel26956> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel26956> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:42:46.460 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:42:46.462 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:42:46.463 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:42:46.463 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel26956",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:42:44Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel26956> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
./verify/test-channel-does-not-exist.sh testchannel26956 vtb
Step: 2_cli Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel26956 vtb
[1;34m
Verifing if the <testchannel26956> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:42:46.983 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:42:46.984 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel26956> does not exist and in not visible to vtb[m[m[m
Step 2_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel26956 vtb ; ./verify/test-channel-does-not-exist.sh testchannel26956 vtb
Step: 3_cli Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel26956 vtb VERIFY: test-channel-does-not-exist.sh testchannel26956 vtb
[1;36m
Creating the <testchannel26956> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel26956[m[m[m
example.net

Create channel vtb testchannel26956
--2020-02-25 08:42:49--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:42:49--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:42:49--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:42:49--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:42:49.299 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:42:49.346 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:42:49.346 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:42:49.346 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:42:49.346 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:42:49.346 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:42:49.346 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:42:49.346 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:42:49.346 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:42:49.394 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:42:49.394 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:42:49.394 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:42:49.394 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:42:49.394 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:42:49.394 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:42:49.394 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:42:49.395 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:42:49.395 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:42:49.395 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:42:49.395 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:42:49.395 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:42:49.396 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:42:49.396 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:42:49.449 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel26956.pb -o orderer.example.net:7050 -c testchannel26956 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:42:49.515 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:42:49.517 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel26956.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel26956.json: No such file or directory
>> Prepare config update from vtb for channel testchannel26956
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel26956 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:42:49.685 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel26956> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:42:50.644 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:42:50.647 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel26956> does not exist and in not visible to vtb[m[m[m
Step 3_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel26956-02 vtb ; ./verify/test-channel-exists.sh testchannel26956-02 vtb
Step: 4_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel26956-02 vtb VERIFY: test-channel-exists.sh testchannel26956-02 vtb
[1;36m
Creating the <testchannel26956-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel26956-02[m[m[m
example.net

Create channel vtb testchannel26956-02
--2020-02-25 08:42:52--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:42:52--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:42:52--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:42:52--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:42:52.997 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:42:53.052 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:42:53.052 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:42:53.052 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:42:53.052 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:42:53.052 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:42:53.052 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:42:53.052 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:42:53.052 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:42:53.099 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:42:53.099 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:42:53.099 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:42:53.099 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:42:53.099 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:42:53.099 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:42:53.099 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:42:53.100 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:42:53.100 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:42:53.100 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:42:53.100 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:42:53.100 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:42:53.101 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:42:53.101 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:42:53.155 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:42:53.192 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel26956-02.pb -o orderer.example.net:7050 -c testchannel26956-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:42:53.271 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:42:53.273 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:42:53.274 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:42:53.274 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel26956-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel26956-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:42:53.563 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:42:53.572 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel26956-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel26956-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:42:55.733 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:42:55.735 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:42:55.736 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:42:55.736 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel26956-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:42:53Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel26956-02> exists and visible to vtb[m[m[m
Step 4_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel26956-02 sberbank ; ./verify/test-channel-does-not-exist.sh testchannel26956-02 sberbank
Step: 5_cli Test 'Can not create channel in ORG1 with the same name'
SKIPAPI: RUNTESTNOERRPRINT: create-channel.sh testchannel26956-02 sberbank VERIFY: test-channel-does-not-exist.sh testchannel26956-02 sberbank
[1;36m
Creating the <testchannel26956-02> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel26956-02[m[m[m
example.net

Create channel sberbank testchannel26956-02
--2020-02-25 08:42:58--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:42:58--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:42:58--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:42:58--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:42:58.122 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:42:58.169 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:42:58.169 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:42:58.169 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:42:58.169 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:42:58.169 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:42:58.169 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:42:58.169 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:42:58.169 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:42:58.216 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:42:58.216 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:42:58.216 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:42:58.216 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:42:58.216 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:42:58.216 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:42:58.217 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:42:58.217 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:42:58.217 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:42:58.217 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:42:58.217 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:42:58.218 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:42:58.218 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:42:58.218 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:42:58.271 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel26956-02.pb -o orderer.example.net:7050 -c testchannel26956-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:42:58.337 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:42:58.341 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel26956-02.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel26956-02.json: No such file or directory
>> Prepare config update from sberbank for channel testchannel26956-02
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel26956-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:42:58.510 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel26956-02> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:42:59.502 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:42:59.505 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel26956-02> does not exist and in not visible to sberbank[m[m[m
Step 5_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel26956 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel26956 vtb vtb
Step: 6_cli Test 'Add <vtb> to channel <testchannel26956> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel26956 sberbank vtb VERIFY: test-channel-add-org.sh testchannel26956 vtb vtb
[1;36m
Add vtb to the testchannel26956 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel26956 vtb 7051 example.net[m[m[m
--2020-02-25 08:43:01--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:43:01--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:43:01--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel26956, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel26956.pb -o orderer.example.net:7050 -c testchannel26956 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:43:01.741 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:43:01.743 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:43:01.744 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:43:01.744 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel26956
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel26956 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:43:02.056 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:43:02.066 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel26956 ...[m[m[m
[34m2020-02-25 08:43:03.031 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:43:03.033 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 08:43:03.034 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 08:43:03.034 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel26956>.[m[m[m
Step 6_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel26956-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel26956-02 vtb sberbank
Step: 7_cli Test 'Add <sberbank> to channel <testchannel26956-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel26956-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel26956-02 vtb sberbank
[1;36m
Add sberbank to the testchannel26956-02 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel26956-02 sberbank 7051 example.net[m[m[m
--2020-02-25 08:43:05--  http://www.sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:43:05--  http://www.sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:43:05--  http://www.sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'sberbank' to channel testchannel26956-02, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel26956-02.pb -o orderer.example.net:7050 -c testchannel26956-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:43:05.338 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:43:05.340 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:43:05.341 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:43:05.341 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from sberbank for channel testchannel26956-02
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel26956-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:43:05.727 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:43:05.737 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel26956-02 ...[m[m[m
[34m2020-02-25 08:43:06.713 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:43:06.716 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 08:43:06.717 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 08:43:06.717 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel26956-02>.[m[m[m
Step 7_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel21234 sberbank ; ./verify/test-channel-exists.sh testchannel21234 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel21234 sberbank VERIFY: test-channel-exists.sh testchannel21234 sberbank
[1;36m
Creating the <testchannel21234> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel21234[m[m[m
example.net

Create channel sberbank testchannel21234
--2020-02-25 08:44:31--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:31--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:31--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:31--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:44:31.540 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:44:31.587 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:44:31.587 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:44:31.587 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:44:31.587 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:44:31.587 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:44:31.587 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:44:31.587 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:44:31.587 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:44:31.637 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:44:31.637 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:44:31.637 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:44:31.637 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:44:31.637 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:44:31.637 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:44:31.637 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:44:31.638 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:44:31.638 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:44:31.638 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:44:31.638 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:44:31.639 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:44:31.639 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:44:31.639 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:44:31.699 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:31.734 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel21234.pb -o orderer.example.net:7050 -c testchannel21234 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:44:31.802 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:31.804 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:44:31.806 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:44:31.806 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel21234
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel21234 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:44:32.123 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:32.134 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel21234> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel21234> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:44:34.301 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:34.303 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:44:34.304 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:44:34.304 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel21234",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:44:32Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel21234> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
./verify/test-channel-does-not-exist.sh testchannel21234 vtb
Step: 2_cli Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel21234 vtb
[1;34m
Verifing if the <testchannel21234> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:44:34.811 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:34.812 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel21234> does not exist and in not visible to vtb[m[m[m
Step 2_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel21234 vtb ; ./verify/test-channel-does-not-exist.sh testchannel21234 vtb
Step: 3_cli Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel21234 vtb VERIFY: test-channel-does-not-exist.sh testchannel21234 vtb
[1;36m
Creating the <testchannel21234> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel21234[m[m[m
example.net

Create channel vtb testchannel21234
--2020-02-25 08:44:36--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:36--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:36--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:37--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:44:37.049 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:44:37.098 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:44:37.098 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:44:37.098 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:44:37.098 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:44:37.098 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:44:37.098 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:44:37.098 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:44:37.098 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:44:37.146 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:44:37.146 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:44:37.146 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:44:37.146 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:44:37.146 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:44:37.146 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:44:37.146 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:44:37.147 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:44:37.147 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:44:37.147 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:44:37.147 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:44:37.147 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:44:37.148 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:44:37.148 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:44:37.200 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel21234.pb -o orderer.example.net:7050 -c testchannel21234 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:44:37.269 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:37.270 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel21234.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel21234.json: No such file or directory
>> Prepare config update from vtb for channel testchannel21234
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel21234 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:44:37.437 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel21234> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:44:38.390 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:38.391 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel21234> does not exist and in not visible to vtb[m[m[m
Step 3_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel21234-02 vtb ; ./verify/test-channel-exists.sh testchannel21234-02 vtb
Step: 4_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel21234-02 vtb VERIFY: test-channel-exists.sh testchannel21234-02 vtb
[1;36m
Creating the <testchannel21234-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel21234-02[m[m[m
example.net

Create channel vtb testchannel21234-02
--2020-02-25 08:44:40--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:40--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:40--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:40--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:44:40.574 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:44:40.621 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:44:40.621 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:44:40.621 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:44:40.621 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:44:40.621 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:44:40.621 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:44:40.621 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:44:40.621 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:44:40.668 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:44:40.669 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:44:40.669 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:44:40.669 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:44:40.669 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:44:40.669 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:44:40.669 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:44:40.669 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:44:40.669 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 08:44:40.670 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:44:40.670 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:44:40.670 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:44:40.670 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 08:44:40.670 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:44:40.724 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:40.759 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel21234-02.pb -o orderer.example.net:7050 -c testchannel21234-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:44:40.826 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:40.828 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 08:44:40.829 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 08:44:40.829 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel21234-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel21234-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:44:41.147 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:41.155 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel21234-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel21234-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 08:44:43.325 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:43.327 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:44:43.328 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:44:43.328 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel21234-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T08:44:41Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel21234-02> exists and visible to vtb[m[m[m
Step 4_cli: exit code 0
NO_RED_OUTPUT=true ./cli/create-channel.sh testchannel21234-02 sberbank ; ./verify/test-channel-does-not-exist.sh testchannel21234-02 sberbank
Step: 5_cli Test 'Can not create channel in ORG1 with the same name'
SKIPAPI: RUNTESTNOERRPRINT: create-channel.sh testchannel21234-02 sberbank VERIFY: test-channel-does-not-exist.sh testchannel21234-02 sberbank
[1;36m
Creating the <testchannel21234-02> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel21234-02[m[m[m
example.net

Create channel sberbank testchannel21234-02
--2020-02-25 08:44:45--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:45--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:45--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:45--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 08:44:45.574 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 08:44:45.624 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:44:45.624 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:44:45.624 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 08:44:45.624 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 08:44:45.624 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 08:44:45.624 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 08:44:45.624 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 08:44:45.624 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:44:45.671 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 08:44:45.671 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 08:44:45.671 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 08:44:45.671 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 08:44:45.671 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 08:44:45.671 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:44:45.671 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:44:45.671 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:44:45.672 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 08:44:45.672 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 08:44:45.672 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 08:44:45.672 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 08:44:45.673 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 08:44:45.673 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 08:44:45.747 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
Execute: channel fetch config crypto-config/configtx/testchannel21234-02.pb -o orderer.example.net:7050 -c testchannel21234-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:44:45.839 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:45.843 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel21234-02.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel21234-02.json: No such file or directory
>> Prepare config update from sberbank for channel testchannel21234-02
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel21234-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:44:46.037 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel21234-02> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 08:44:47.087 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:47.089 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel21234-02> does not exist and in not visible to sberbank[m[m[m
Step 5_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel21234 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel21234 sberbank vtb
Step: 6_cli Test 'Add <vtb> to channel <testchannel21234> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel21234 sberbank vtb VERIFY: test-channel-add-org.sh testchannel21234 sberbank vtb
[1;36m
Add vtb to the testchannel21234 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel21234 vtb 7051 example.net[m[m[m
--2020-02-25 08:44:49--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:49--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:49--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel21234, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel21234.pb -o orderer.example.net:7050 -c testchannel21234 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:44:49.348 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:49.350 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 08:44:49.351 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 08:44:49.351 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel21234
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel21234 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:44:49.649 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:49.660 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel21234 ...[m[m[m
[34m2020-02-25 08:44:50.558 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:50.560 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 08:44:50.561 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 08:44:50.561 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel21234>.[m[m[m
Step 6_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel21234-02 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel21234-02 sberbank vtb
Step: 7_cli Test 'Add <sberbank> to channel <testchannel21234-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel21234-02 sberbank vtb VERIFY: test-channel-add-org.sh testchannel21234-02 sberbank vtb
[1;36m
Add vtb to the testchannel21234-02 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel21234-02 vtb 7051 example.net[m[m[m
--2020-02-25 08:44:52--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:52--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 08:44:52--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel21234-02, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel21234-02.pb -o orderer.example.net:7050 -c testchannel21234-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:44:52.816 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:52.818 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
configtxlator: error: open crypto-config/configtx/testchannel21234-02.pb: no such file or directory, try --help
jq: error: Could not open file crypto-config/configtx/testchannel21234-02.json: No such file or directory
>> Prepare config update from vtb for channel testchannel21234-02
configtxlator: error: Error decoding: error decoding input: error unmarshaling intermediate JSON: EOF
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel21234-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 08:44:53.001 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Error: got unexpected status: FORBIDDEN -- config update for existing channel did not pass initial checks: implicit policy evaluation failed - 0 sub-policies were satisfied, but this policy requires 1 of the 'Writers' sub-policies to be satisfied: permission denied
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel21234-02 ...[m[m[m
[34m2020-02-25 08:44:53.932 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 08:44:53.934 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
null
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 7_cli: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel10009 sberbank ; ./verify/test-channel-exists.sh testchannel10009 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel10009 sberbank VERIFY: test-channel-exists.sh testchannel10009 sberbank
[1;36mCreating testchannel10009 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel20345 sberbank ; ./verify/test-channel-exists.sh testchannel20345 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel20345 sberbank VERIFY: test-channel-exists.sh testchannel20345 sberbank
[1;36mCreating testchannel20345 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMTU1OX0.10vXkvlcQege6Z_o7qY1wi24g8CkXPuqqd8Xqo5HaVM
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel20345> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel20345> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:06:01.416 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:06:01.418 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:06:01.419 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:06:01.419 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel20345",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:06:00Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel20345> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
./verify/test-channel-does-not-exist.sh testchannel20345 vtb
Step: 2_api Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel20345 vtb
[1;34m
Verifing if the <testchannel20345> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:06:01.897 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:06:01.899 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel20345> does not exist and in not visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh ^^^^^^testchannel20345 sberbank ; ./verify/test-channel-does-not-exist.sh ^^^^^^testchannel20345 sberbank
Step: 3_api Test 'Can not create the channel with incorrect name in ORG1'
SKIPCLI: RUNTESTNOERRPRINT: create-channel.sh ^^^^^^testchannel20345 sberbank VERIFY: test-channel-does-not-exist.sh ^^^^^^testchannel20345 sberbank
[1;36mCreating ^^^^^^testchannel20345 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMTU2Mn0.KGekSE-p30JkYxxYQtiJ2psQu4ww7uFx3nn0NSqe-LI
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
"Failed to create Channel. channel name should match Regex /^[a-z][a-z0-9.-]*$/, but got \"^^^^^^testchannel20345\"" 500
parse error: Unfinished string at EOF at line 1, column 7
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <^^^^^^testchannel20345> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:06:03.918 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:06:03.920 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
[1;32mOK: The channel <^^^^^^testchannel20345> does not exist and in not visible to sberbank[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh testchannel20345 vtb ; ./verify/test-channel-does-not-exist.sh testchannel20345 vtb
Step: 4_api Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel20345 vtb VERIFY: test-channel-does-not-exist.sh testchannel20345 vtb
[1;36mCreating testchannel20345 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMTU2NH0.dWjwfuxtXBuafqWMUy1UzIrBQflK4BGBhQV4u3_Icjg
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
"Invalid results returned ::FORBIDDEN" 500
parse error: Unfinished string at EOF at line 1, column 8
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel20345> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:06:06.143 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:06:06.145 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel20345> does not exist and in not visible to vtb[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel20345-02 vtb ; ./verify/test-channel-exists.sh testchannel20345-02 vtb
Step: 5_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel20345-02 vtb VERIFY: test-channel-exists.sh testchannel20345-02 vtb
[1;36mCreating testchannel20345-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMTU2Nn0.Hsbmu8GMcWWCTa-oJC1172tqvWP1Ja07rT8DyUYEgso
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel20345-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel20345-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:06:09.368 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:06:09.370 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:06:09.373 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:06:09.373 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel20345-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:06:07Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel20345-02> exists and visible to vtb[m[m[m
Step 5_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel20345 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel20345 sberbank vtb
Step: 6_api Test 'Add <vtb> to channel <testchannel20345> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel20345 sberbank vtb VERIFY: test-channel-add-org.sh testchannel20345 sberbank vtb
[1;36mAdd vtb to the testchannel20345 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel20345 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMTU3MH0.wofzz1_VcmNvGacDQIy-syG0KGYzfSNLTv0BGOBepeE
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel20345 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel20345 ...[m[m[m
[34m2020-02-25 09:06:13.296 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:06:13.312 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:06:13.313 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:06:13.313 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel20345>.[m[m[m
Step 6_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel20345-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel20345-02 vtb sberbank
Step: 7_api Test 'Add <sberbank> to channel <testchannel20345-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel20345-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel20345-02 vtb sberbank
[1;36mAdd sberbank to the testchannel20345-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel20345-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMTU3M30.twbltVTPm4fiGEG-yD0dOE--tzjDsI6DK7t1WUwFKs8
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel20345-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel20345-02 ...[m[m[m
[34m2020-02-25 09:06:15.953 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:06:15.962 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:06:15.964 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:06:15.964 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel20345-02>.[m[m[m
Step 7_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel20345 sberbank vtb ; ./verify/test-join-channel.sh testchannel20345 sberbank vtb
Step: 8_api Test 'Join <vtb> to the <testchannel20345> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel20345 sberbank vtb VERIFY: test-join-channel.sh testchannel20345 sberbank vtb
[1;36mJoining vtb.example.net to the testchannel20345 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel20345 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMTU3Nn0.zYhCZlgLvZf89megxp4c1zy6NFG7kYDnE80wAUBX6H0
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
<!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <title>Error</title> </head> <body> <pre>UnauthorizedError: invalid signature<br> &nbsp; &nbsp;at /usr/src/app/node_modules/express-jwt/lib/index.js:102:22<br> &nbsp; &nbsp;at /usr/src/app/node_modules/jsonwebtoken/verify.js:133:14<br> &nbsp; &nbsp;at getSecret (/usr/src/app/node_modules/jsonwebtoken/verify.js:90:14)<br> &nbsp; &nbsp;at Object.module.exports [as verify] (/usr/src/app/node_modules/jsonwebtoken/verify.js:94:10)<br> &nbsp; &nbsp;at verifyToken (/usr/src/app/node_modules/express-jwt/lib/index.js:100:13)<br> &nbsp; &nbsp;at fn (/usr/src/app/node_modules/async/lib/async.js:746:34)<br> &nbsp; &nbsp;at /usr/src/app/node_modules/async/lib/async.js:1213:16<br> &nbsp; &nbsp;at /usr/src/app/node_modules/async/lib/async.js:166:37<br> &nbsp; &nbsp;at /usr/src/app/node_modules/async/lib/async.js:706:43<br> &nbsp; &nbsp;at /usr/src/app/node_modules/async/lib/async.js:167:37<br> &nbsp; &nbsp;at Immediate._onImmediate (/usr/src/app/node_modules/async/lib/async.js:1206:34)<br> &nbsp; &nbsp;at runCallback (timers.js:810:20)<br> &nbsp; &nbsp;at tryOnImmediate (timers.js:768:5)<br> &nbsp; &nbsp;at processImmediate [as _immediateCallback] (timers.js:745:5)</pre> </body> </html> 401
parse error: Invalid numeric literal at EOF at line 1, column 9
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 09:06:17.390 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: 
Step 8_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel11791 sberbank ; ./verify/test-channel-exists.sh testchannel11791 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel11791 sberbank VERIFY: test-channel-exists.sh testchannel11791 sberbank
[1;36mCreating testchannel11791 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMTY5NX0.OMAYCEXRi-J7yjAizPYD31lozYmrMbdzQFTJKPyY05w
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel26389 sberbank ; ./verify/test-channel-exists.sh testchannel26389 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel26389 sberbank VERIFY: test-channel-exists.sh testchannel26389 sberbank
[1;36mCreating testchannel26389 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMTcwMn0.Fmou-fTuCnNkyWhUS8HMoqKeLtifYpOAKBlH7EAIGoo
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel26389> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel26389> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:08:24.313 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:08:24.315 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:08:24.316 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:08:24.316 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel26389",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:08:23Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel26389> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
./verify/test-channel-does-not-exist.sh testchannel26389 vtb
Step: 2_api Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel26389 vtb
[1;34m
Verifing if the <testchannel26389> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:08:24.833 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:08:24.836 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel26389> does not exist and in not visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh ^^^^^^testchannel26389 sberbank ; ./verify/test-channel-does-not-exist.sh ^^^^^^testchannel26389 sberbank
Step: 3_api Test 'Can not create the channel with incorrect name in ORG1'
SKIPCLI: RUNTESTNOERRPRINT: create-channel.sh ^^^^^^testchannel26389 sberbank VERIFY: test-channel-does-not-exist.sh ^^^^^^testchannel26389 sberbank
[1;36mCreating ^^^^^^testchannel26389 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMTcwNX0.3yqLF0ZcrfJsBrouwAMVgAdpMCsyvPAQodqP1j9aXeA
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
"Failed to create Channel. channel name should match Regex /^[a-z][a-z0-9.-]*$/, but got \"^^^^^^testchannel26389\"" 500
parse error: Unfinished string at EOF at line 1, column 7
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <^^^^^^testchannel26389> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:08:26.845 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:08:26.846 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
[1;32mOK: The channel <^^^^^^testchannel26389> does not exist and in not visible to sberbank[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh testchannel26389 vtb ; ./verify/test-channel-does-not-exist.sh testchannel26389 vtb
Step: 4_api Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel26389 vtb VERIFY: test-channel-does-not-exist.sh testchannel26389 vtb
[1;36mCreating testchannel26389 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMTcwN30.cvk4LBkWtnWBqmfyu0YVMVVD8qUAn7udovPTD1mnVw8
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
"Invalid results returned ::FORBIDDEN" 500
parse error: Unfinished string at EOF at line 1, column 8
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel26389> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:08:29.038 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:08:29.044 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel26389> does not exist and in not visible to vtb[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel26389-02 vtb ; ./verify/test-channel-exists.sh testchannel26389-02 vtb
Step: 5_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel26389-02 vtb VERIFY: test-channel-exists.sh testchannel26389-02 vtb
[1;36mCreating testchannel26389-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMTcwOX0.KapHeCEGygmYOHQbVhWSgzZIXSNyW7PnbpMCaAdKJ1I
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel26389-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel26389-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:08:31.457 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:08:31.459 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:08:31.460 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:08:31.460 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel26389-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:08:30Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel26389-02> exists and visible to vtb[m[m[m
Step 5_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel26389 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel26389 sberbank vtb
Step: 6_api Test 'Add <vtb> to channel <testchannel26389> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel26389 sberbank vtb VERIFY: test-channel-add-org.sh testchannel26389 sberbank vtb
[1;36mAdd vtb to the testchannel26389 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel26389 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMTcxMX0.DjEeMf-SdSaFxrjoQzWyNhiPKZQ14HT7WpP44QauRas
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel26389 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel26389 ...[m[m[m
[34m2020-02-25 09:08:34.418 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:08:34.421 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:08:34.422 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:08:34.422 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel26389>.[m[m[m
Step 6_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel26389-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel26389-02 vtb sberbank
Step: 7_api Test 'Add <sberbank> to channel <testchannel26389-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel26389-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel26389-02 vtb sberbank
[1;36mAdd sberbank to the testchannel26389-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel26389-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMTcxNH0.WgNrOAQzXa0h9OrbDOy9Hki0Rs3QFDN18WlZ28_wfOo
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel26389-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel26389-02 ...[m[m[m
[34m2020-02-25 09:08:36.923 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:08:36.930 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:08:36.935 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:08:36.935 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel26389-02>.[m[m[m
Step 7_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel26389 sberbank vtb ; ./verify/test-join-channel.sh testchannel26389 sberbank vtb
Step: 8_api Test 'Join <vtb> to the <testchannel26389> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel26389 sberbank vtb VERIFY: test-join-channel.sh testchannel26389 sberbank vtb
[1;36mJoining vtb.example.net to the testchannel26389 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel26389 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMTcxN30.auIBrqFTsYdy8bCDu_aYAc4pxcTHGslQqrjHLksy9H8
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
<!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <title>Error</title> </head> <body> <pre>UnauthorizedError: invalid signature<br> &nbsp; &nbsp;at /usr/src/app/node_modules/express-jwt/lib/index.js:102:22<br> &nbsp; &nbsp;at /usr/src/app/node_modules/jsonwebtoken/verify.js:133:14<br> &nbsp; &nbsp;at getSecret (/usr/src/app/node_modules/jsonwebtoken/verify.js:90:14)<br> &nbsp; &nbsp;at Object.module.exports [as verify] (/usr/src/app/node_modules/jsonwebtoken/verify.js:94:10)<br> &nbsp; &nbsp;at verifyToken (/usr/src/app/node_modules/express-jwt/lib/index.js:100:13)<br> &nbsp; &nbsp;at fn (/usr/src/app/node_modules/async/lib/async.js:746:34)<br> &nbsp; &nbsp;at /usr/src/app/node_modules/async/lib/async.js:1213:16<br> &nbsp; &nbsp;at /usr/src/app/node_modules/async/lib/async.js:166:37<br> &nbsp; &nbsp;at /usr/src/app/node_modules/async/lib/async.js:706:43<br> &nbsp; &nbsp;at /usr/src/app/node_modules/async/lib/async.js:167:37<br> &nbsp; &nbsp;at Immediate._onImmediate (/usr/src/app/node_modules/async/lib/async.js:1206:34)<br> &nbsp; &nbsp;at runCallback (timers.js:810:20)<br> &nbsp; &nbsp;at tryOnImmediate (timers.js:768:5)<br> &nbsp; &nbsp;at processImmediate [as _immediateCallback] (timers.js:745:5)</pre> </body> </html> 401
parse error: Invalid numeric literal at EOF at line 1, column 9
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 09:08:38.308 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: 
Step 8_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel314 sberbank ; ./verify/test-channel-exists.sh testchannel314 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel314 sberbank VERIFY: test-channel-exists.sh testchannel314 sberbank
[1;36mCreating testchannel314 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjA3NX0.PrPPh7M9LYSjLTyuKEaHudbsqTDwdgqPBVW2gkIvOvc
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel314> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel314> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:14:37.100 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:14:37.103 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:14:37.104 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:14:37.104 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel314",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:14:35Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel314> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
./verify/test-channel-does-not-exist.sh testchannel314 vtb
Step: 2_api Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel314 vtb
[1;34m
Verifing if the <testchannel314> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:14:37.686 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:14:37.688 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel314> does not exist and in not visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh ^^^^^^testchannel314 sberbank ; ./verify/test-channel-does-not-exist.sh ^^^^^^testchannel314 sberbank
Step: 3_api Test 'Can not create the channel with incorrect name in ORG1'
SKIPCLI: RUNTESTNOERRPRINT: create-channel.sh ^^^^^^testchannel314 sberbank VERIFY: test-channel-does-not-exist.sh ^^^^^^testchannel314 sberbank
[1;36mCreating ^^^^^^testchannel314 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjA3OH0.kfwNb9v0ubF7mNuYfcol_LcyEFKRMRFpzzzFk2FXSak
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
"Failed to create Channel. channel name should match Regex /^[a-z][a-z0-9.-]*$/, but got \"^^^^^^testchannel314\"" 500
parse error: Unfinished string at EOF at line 1, column 7
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <^^^^^^testchannel314> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:14:39.975 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:14:39.981 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
[1;32mOK: The channel <^^^^^^testchannel314> does not exist and in not visible to sberbank[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh testchannel314 vtb ; ./verify/test-channel-does-not-exist.sh testchannel314 vtb
Step: 4_api Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel314 vtb VERIFY: test-channel-does-not-exist.sh testchannel314 vtb
[1;36mCreating testchannel314 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjA4MH0.tnVoGn090u20oJK-LRj8JrE7fV72KxY0vtluoadTKQc
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
"Invalid results returned ::FORBIDDEN" 500
parse error: Unfinished string at EOF at line 1, column 8
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel314> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:14:42.317 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:14:42.318 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel314> does not exist and in not visible to vtb[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel314-02 vtb ; ./verify/test-channel-exists.sh testchannel314-02 vtb
Step: 5_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel314-02 vtb VERIFY: test-channel-exists.sh testchannel314-02 vtb
[1;36mCreating testchannel314-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjA4Mn0.hbQOzNn4m83deSTY5i202UZ3CxGdzQDgfI_SqVlH_BE
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel314-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel314-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:14:44.888 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:14:44.890 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:14:44.892 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:14:44.892 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel314-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:14:43Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel314-02> exists and visible to vtb[m[m[m
Step 5_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel314 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel314 sberbank vtb
Step: 6_api Test 'Add <vtb> to channel <testchannel314> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel314 sberbank vtb VERIFY: test-channel-add-org.sh testchannel314 sberbank vtb
[1;36mAdd vtb to the testchannel314 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel314 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjA4NX0.HmfN5tOi5ioKdBn_Y47ZKXPIa0-Ajx-sVlRrl8-uj3w
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel314 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel314 ...[m[m[m
[34m2020-02-25 09:14:48.103 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:14:48.105 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:14:48.107 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:14:48.107 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel314>.[m[m[m
Step 6_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel314-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel314-02 vtb sberbank
Step: 7_api Test 'Add <sberbank> to channel <testchannel314-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel314-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel314-02 vtb sberbank
[1;36mAdd sberbank to the testchannel314-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel314-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjA4OH0.sI-PtEMgXC5-fBncOJudkcYT8Xbc9Nrw6lK-tR513K8
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel314-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel314-02 ...[m[m[m
[34m2020-02-25 09:14:50.969 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:14:50.974 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:14:50.978 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:14:50.978 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel314-02>.[m[m[m
Step 7_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel314 vtb ; ./verify/test-join-channel.sh testchannel314 sberbank vtb
Step: 8_api Test 'Join <vtb> to the <testchannel314> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel314 vtb VERIFY: test-join-channel.sh testchannel314 sberbank vtb
[1;36mJoining .example.net to the testchannel314 channel using API...[m[m[m
[1;36mJoining .example.net to the testchannel314 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjA5MX0.svmZWPkAlLtnJ8IG9opYSQmskUVoJdiOCy-wqgA3fAY
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 09:14:52.374 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: 
Step 8_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel28091 sberbank ; ./verify/test-channel-exists.sh testchannel28091 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel28091 sberbank VERIFY: test-channel-exists.sh testchannel28091 sberbank
[1;36mCreating testchannel28091 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjI4Mn0.ODP3OLuOW0AT39Ullbz9QBVV0qRUV57ELfgWo7v6ooE
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel28091> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel28091> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:18:04.808 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:18:04.810 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:18:04.811 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:18:04.811 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel28091",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:18:03Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel28091> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
./verify/test-channel-does-not-exist.sh testchannel28091 vtb
Step: 2_api Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel28091 vtb
[1;34m
Verifing if the <testchannel28091> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:18:05.364 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:18:05.365 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel28091> does not exist and in not visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh ^^^^^^testchannel28091 sberbank ; ./verify/test-channel-does-not-exist.sh ^^^^^^testchannel28091 sberbank
Step: 3_api Test 'Can not create the channel with incorrect name in ORG1'
SKIPCLI: RUNTESTNOERRPRINT: create-channel.sh ^^^^^^testchannel28091 sberbank VERIFY: test-channel-does-not-exist.sh ^^^^^^testchannel28091 sberbank
[1;36mCreating ^^^^^^testchannel28091 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjI4NX0.ZbuCnQDjR5_zZuT4jA9_xMrBFEXdABC7zUrad3hzsy8
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
"Failed to create Channel. channel name should match Regex /^[a-z][a-z0-9.-]*$/, but got \"^^^^^^testchannel28091\"" 500
parse error: Unfinished string at EOF at line 1, column 7
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <^^^^^^testchannel28091> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:18:07.479 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:18:07.480 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
[1;32mOK: The channel <^^^^^^testchannel28091> does not exist and in not visible to sberbank[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh testchannel28091 vtb ; ./verify/test-channel-does-not-exist.sh testchannel28091 vtb
Step: 4_api Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel28091 vtb VERIFY: test-channel-does-not-exist.sh testchannel28091 vtb
[1;36mCreating testchannel28091 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjI4N30.I12BwvrpVlYTx5cybp6MmIE6sMl8ZAyCsyJH8zJR8FU
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
"Invalid results returned ::FORBIDDEN" 500
parse error: Unfinished string at EOF at line 1, column 8
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel28091> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:18:09.554 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:18:09.557 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel28091> does not exist and in not visible to vtb[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel28091-02 vtb ; ./verify/test-channel-exists.sh testchannel28091-02 vtb
Step: 5_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel28091-02 vtb VERIFY: test-channel-exists.sh testchannel28091-02 vtb
[1;36mCreating testchannel28091-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjI4OX0.TFd8bqecDY965nae75Pq-wLbwA9c3GL5uNLuDIKzCRo
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel28091-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel28091-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:18:12.143 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:18:12.144 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:18:12.145 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:18:12.145 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel28091-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:18:10Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel28091-02> exists and visible to vtb[m[m[m
Step 5_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel28091 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel28091 sberbank vtb
Step: 6_api Test 'Add <vtb> to channel <testchannel28091> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel28091 sberbank vtb VERIFY: test-channel-add-org.sh testchannel28091 sberbank vtb
[1;36mAdd vtb to the testchannel28091 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel28091 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjI5Mn0.jhgNc7dKA0kZYbMgurjAHJsV_tpkCmrtSu09dPgHKFQ
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel28091 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel28091 ...[m[m[m
[34m2020-02-25 09:18:15.143 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:18:15.145 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:18:15.146 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:18:15.146 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel28091>.[m[m[m
Step 6_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel28091-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel28091-02 vtb sberbank
Step: 7_api Test 'Add <sberbank> to channel <testchannel28091-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel28091-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel28091-02 vtb sberbank
[1;36mAdd sberbank to the testchannel28091-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel28091-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjI5NX0.rmOLWI2VBoukZ8xE4WNOGd6QBH8uy66CDTQIC_8VAIA
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel28091-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel28091-02 ...[m[m[m
[34m2020-02-25 09:18:17.838 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:18:17.840 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:18:17.841 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:18:17.841 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel28091-02>.[m[m[m
Step 7_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel28091 vtb ; ./verify/test-join-channel.sh testchannel28091 sberbank vtb
Step: 8_api Test 'Join <vtb> to the <testchannel28091> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel28091 vtb VERIFY: test-join-channel.sh testchannel28091 sberbank vtb
[1;36mJoining .example.net to the testchannel28091 channel using API...[m[m[m
[1;36mJoining .example.net to the testchannel28091 channel using API...[m[m[m
[34m2020-02-25 09:18:18.709 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: 
Step 8_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel22847 sberbank ; ./verify/test-channel-exists.sh testchannel22847 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel22847 sberbank VERIFY: test-channel-exists.sh testchannel22847 sberbank
[1;36mCreating testchannel22847 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjMyN30.6po4_DnbAU-cygym1_-_qTTydrQ1qyn0T7Qb583Zmyw
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel22847> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel22847> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:18:49.721 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:18:49.722 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:18:49.723 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:18:49.724 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel22847",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:18:48Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel22847> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
./verify/test-channel-does-not-exist.sh testchannel22847 vtb
Step: 2_api Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel22847 vtb
[1;34m
Verifing if the <testchannel22847> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:18:50.377 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:18:50.378 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel22847> does not exist and in not visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh ^^^^^^testchannel22847 sberbank ; ./verify/test-channel-does-not-exist.sh ^^^^^^testchannel22847 sberbank
Step: 3_api Test 'Can not create the channel with incorrect name in ORG1'
SKIPCLI: RUNTESTNOERRPRINT: create-channel.sh ^^^^^^testchannel22847 sberbank VERIFY: test-channel-does-not-exist.sh ^^^^^^testchannel22847 sberbank
[1;36mCreating ^^^^^^testchannel22847 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjMzMH0.2xbFZCivcnc6ZKaffRvD2NVpBxRQk-7OeTvzoEqx7XI
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
"Failed to create Channel. channel name should match Regex /^[a-z][a-z0-9.-]*$/, but got \"^^^^^^testchannel22847\"" 500
parse error: Unfinished string at EOF at line 1, column 7
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <^^^^^^testchannel22847> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:18:52.426 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:18:52.428 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
[1;32mOK: The channel <^^^^^^testchannel22847> does not exist and in not visible to sberbank[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh testchannel22847 vtb ; ./verify/test-channel-does-not-exist.sh testchannel22847 vtb
Step: 4_api Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel22847 vtb VERIFY: test-channel-does-not-exist.sh testchannel22847 vtb
[1;36mCreating testchannel22847 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjMzMn0.8US2eVlSFPdy_3_cdp7SoJrvwvZOC24wNXjKs8k_Ko0
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
"Invalid results returned ::FORBIDDEN" 500
parse error: Unfinished string at EOF at line 1, column 8
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel22847> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:18:54.422 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:18:54.424 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel22847> does not exist and in not visible to vtb[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel22847-02 vtb ; ./verify/test-channel-exists.sh testchannel22847-02 vtb
Step: 5_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel22847-02 vtb VERIFY: test-channel-exists.sh testchannel22847-02 vtb
[1;36mCreating testchannel22847-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjMzNH0.QNoP_Uu-eLyWMbWr4qPPK601bu3Qd1rN9VMoL2pT31A
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel22847-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel22847-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:18:56.781 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:18:56.783 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:18:56.784 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:18:56.784 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel22847-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:18:55Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel22847-02> exists and visible to vtb[m[m[m
Step 5_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel22847 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel22847 sberbank vtb
Step: 6_api Test 'Add <vtb> to channel <testchannel22847> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel22847 sberbank vtb VERIFY: test-channel-add-org.sh testchannel22847 sberbank vtb
[1;36mAdd vtb to the testchannel22847 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel22847 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjMzN30.CFvX2OEJfYW0CHCWi2xV4Gh9UjRRInIA_C3kOn6pKFE
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel22847 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel22847 ...[m[m[m
[34m2020-02-25 09:18:59.761 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:18:59.764 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:18:59.765 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:18:59.765 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel22847>.[m[m[m
Step 6_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel22847-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel22847-02 vtb sberbank
Step: 7_api Test 'Add <sberbank> to channel <testchannel22847-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel22847-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel22847-02 vtb sberbank
[1;36mAdd sberbank to the testchannel22847-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel22847-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjM0MH0.uK3r_ub1mttDLC_fKTPTCIQuMMEU1h2Ocvfje_bmZcA
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel22847-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel22847-02 ...[m[m[m
[34m2020-02-25 09:19:02.830 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:19:02.833 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:19:02.834 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:19:02.834 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel22847-02>.[m[m[m
Step 7_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel22847 vtb ; ./verify/test-join-channel.sh testchannel22847 sberbank vtb
Step: 8_api Test 'Join <vtb> to the <testchannel22847> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel22847 vtb VERIFY: test-join-channel.sh testchannel22847 sberbank vtb
[1;36mJoining .example.net to the testchannel22847 channel using API...[m[m[m
[1;36mJoining .example.net to the testchannel22847 channel using API...[m[m[m
[34m2020-02-25 09:19:03.774 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: 
Step 8_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel9267 sberbank ; ./verify/test-channel-exists.sh testchannel9267 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel9267 sberbank VERIFY: test-channel-exists.sh testchannel9267 sberbank
[1;36mCreating testchannel9267 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjM3N30.KHoh0LiwfpG493HQNGJkiUYyKYfq0xUdXldR4EPtJFo
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel9267> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel9267> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:19:39.135 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:19:39.137 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:19:39.138 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:19:39.138 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel9267",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:19:38Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel9267> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
./verify/test-channel-does-not-exist.sh testchannel9267 vtb
Step: 2_api Test 'The channel is not visible in ORG2'
VERIFY: test-channel-does-not-exist.sh testchannel9267 vtb
[1;34m
Verifing if the <testchannel9267> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:19:39.698 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:19:39.699 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel9267> does not exist and in not visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh ^^^^^^testchannel9267 sberbank ; ./verify/test-channel-does-not-exist.sh ^^^^^^testchannel9267 sberbank
Step: 3_api Test 'Can not create the channel with incorrect name in ORG1'
SKIPCLI: RUNTESTNOERRPRINT: create-channel.sh ^^^^^^testchannel9267 sberbank VERIFY: test-channel-does-not-exist.sh ^^^^^^testchannel9267 sberbank
[1;36mCreating ^^^^^^testchannel9267 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjM4MH0.RMoBlU4Ib2vySIn9oTJpOCpllEE_6KgGkHcokoUCGU4
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
"Failed to create Channel. channel name should match Regex /^[a-z][a-z0-9.-]*$/, but got \"^^^^^^testchannel9267\"" 500
parse error: Unfinished string at EOF at line 1, column 7
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <^^^^^^testchannel9267> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:19:41.881 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:19:41.882 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
[1;32mOK: The channel <^^^^^^testchannel9267> does not exist and in not visible to sberbank[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/create-channel.sh testchannel9267 vtb ; ./verify/test-channel-does-not-exist.sh testchannel9267 vtb
Step: 4_api Test 'Can not create channel in ORG2 with the same name'
RUNTESTNOERRPRINT: create-channel.sh testchannel9267 vtb VERIFY: test-channel-does-not-exist.sh testchannel9267 vtb
[1;36mCreating testchannel9267 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjM4Mn0.IFGsWczJpEtZQSeoN5qYGXK-ZgqMjzqlZ0S2O--Up5c
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
"Invalid results returned ::FORBIDDEN" 500
parse error: Unfinished string at EOF at line 1, column 8
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <testchannel9267> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:19:43.920 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:19:43.923 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
null
[1;32mOK: The channel <testchannel9267> does not exist and in not visible to vtb[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel9267-02 vtb ; ./verify/test-channel-exists.sh testchannel9267-02 vtb
Step: 5_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel9267-02 vtb VERIFY: test-channel-exists.sh testchannel9267-02 vtb
[1;36mCreating testchannel9267-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjM4NH0._hEHmRtJNFZPJSfuoacb9eS7Y8COQQctZsQfG4S48Zk
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel9267-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel9267-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:19:46.332 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:19:46.333 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:19:46.335 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:19:46.335 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel9267-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:19:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel9267-02> exists and visible to vtb[m[m[m
Step 5_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel9267 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel9267 sberbank vtb
Step: 6_api Test 'Add <vtb> to channel <testchannel9267> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel9267 sberbank vtb VERIFY: test-channel-add-org.sh testchannel9267 sberbank vtb
[1;36mAdd vtb to the testchannel9267 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel9267 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjM4Nn0.Q0Dnvg03G4s12xPV0nlJVCcWHWj1CHWiLSkboyZVy1c
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel9267 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel9267 ...[m[m[m
[34m2020-02-25 09:19:49.366 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:19:49.371 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:19:49.374 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:19:49.374 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel9267>.[m[m[m
Step 6_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel9267-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel9267-02 vtb sberbank
Step: 7_api Test 'Add <sberbank> to channel <testchannel9267-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel9267-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel9267-02 vtb sberbank
[1;36mAdd sberbank to the testchannel9267-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel9267-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjM4OX0.j5_6ZJ6Zula8EIwWxMpMnHkfhFjh8am5HcUEB4udZXU
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel9267-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel9267-02 ...[m[m[m
[34m2020-02-25 09:19:52.308 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:19:52.311 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:19:52.312 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:19:52.312 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel9267-02>.[m[m[m
Step 7_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel9267 vtb ; ./verify/test-join-channel.sh testchannel9267 sberbank vtb
Step: 8_api Test 'Join <vtb> to the <testchannel9267> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel9267 vtb VERIFY: test-join-channel.sh testchannel9267 sberbank vtb
[1;36mJoining .example.net to the testchannel9267 channel using API...[m[m[m
[1;36mJoining .example.net to the testchannel9267 channel using API...[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
Got JWT: 000
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 09:19:53.276 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: 
Step 8_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel29825 sberbank ; ./verify/test-channel-exists.sh testchannel29825 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel29825 sberbank VERIFY: test-channel-exists.sh testchannel29825 sberbank
[1;36mCreating testchannel29825 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjUxOH0.NZI1u5wzaFTSDz33OMKeI3mVWOuFDBOTtOnAr1bc2uQ
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel29825> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel29825> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:22:00.283 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:22:00.286 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:22:00.288 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:22:00.288 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel29825",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:21:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel29825> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel29825 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel29825 sberbank vtb
Step: 2_api Test 'Add <vtb> to channel <testchannel29825> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel29825 sberbank vtb VERIFY: test-channel-add-org.sh testchannel29825 sberbank vtb
[1;36mAdd vtb to the testchannel29825 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel29825 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjUyMH0.FhTODsMljAUu8No_FPkncBTBeXqnS0v4NiZyn8w8S3I
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel29825 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel29825 ...[m[m[m
[34m2020-02-25 09:22:02.807 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:22:02.809 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:22:02.810 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:22:02.810 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel29825>.[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel29825-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel29825-02 vtb sberbank
Step: 3_api Test 'Add <sberbank> to channel <testchannel29825-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel29825-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel29825-02 vtb sberbank
[1;36mAdd sberbank to the testchannel29825-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel29825-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjUyM30.DqFS0jWZEGnEtPv3qLNScKPmt3BQk4XIvsNRDDdjkZM
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
"ENOENT: no such file or directory, open '/etc/hyperledger/crypto-config/testchannel29825-02_config.json'" 500
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel29825-02 ...[m[m[m
[34m2020-02-25 09:22:04.958 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:22:04.959 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{NOT_FOUND}
Error: can't read the block: &{NOT_FOUND}
null
null
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 3_api: exit code 1
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel29825 vtb ; ./verify/test-join-channel.sh testchannel29825 sberbank vtb
Step: 4_api Test 'Join <vtb> to the <testchannel29825> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel29825 vtb VERIFY: test-join-channel.sh testchannel29825 sberbank vtb
[1;36mJoining .example.net to the testchannel29825 channel using API...[m[m[m
[1;36mJoining .example.net to the testchannel29825 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjUyNX0.5LnP6OMZ2zGBvg6SrL_4byhk1p5YCAO-PR1aICUsvLw
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 09:22:05.875 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: 
Step 4_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel3346 sberbank ; ./verify/test-channel-exists.sh testchannel3346 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel3346 sberbank VERIFY: test-channel-exists.sh testchannel3346 sberbank
[1;36mCreating testchannel3346 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjU2NX0.8tW8S2guWWNiJBGznUXnoJUqo8wMu6WKHzXU8DbrF8E
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel3346> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel3346> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:22:47.714 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:22:47.716 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:22:47.717 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:22:47.717 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel3346",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:22:46Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel3346> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel3346-02 vtb ; ./verify/test-channel-exists.sh testchannel3346-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel3346-02 vtb VERIFY: test-channel-exists.sh testchannel3346-02 vtb
[1;36mCreating testchannel3346-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjU2OH0.L1qtKAac_MxA391OJ-VHqkFPCMao5GOLg0X4-xNDWqU
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel3346-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel3346-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:22:50.237 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:22:50.239 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:22:50.241 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:22:50.241 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel3346-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:22:49Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel3346-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel3346 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel3346 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel3346> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel3346 sberbank vtb VERIFY: test-channel-add-org.sh testchannel3346 sberbank vtb
[1;36mAdd vtb to the testchannel3346 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel3346 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjU3MH0.84vUVV-mk9_Bf3jtODYBRoM7ygXygu_afUupsG8a-JU
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel3346 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel3346 ...[m[m[m
[34m2020-02-25 09:22:53.604 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:22:53.606 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:22:53.608 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:22:53.608 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel3346>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel3346-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel3346-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel3346-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel3346-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel3346-02 vtb sberbank
[1;36mAdd sberbank to the testchannel3346-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel3346-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjU3NH0.3UYR3Z-kzb7neinhSdtUFvt05LO3UlPMoC1pd0G7nyE
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel3346-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel3346-02 ...[m[m[m
[34m2020-02-25 09:22:56.740 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:22:56.742 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:22:56.746 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:22:56.746 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel3346-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel3346 vtb ; ./verify/test-join-channel.sh testchannel3346 sberbank vtb
Step: 5_api Test 'Join <vtb> to the <testchannel3346> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel3346 vtb VERIFY: test-join-channel.sh testchannel3346 sberbank vtb
[1;36mJoining .example.net to the testchannel3346 channel using API...[m[m[m
[1;36mJoining .example.net to the testchannel3346 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjU3N30.41n5bP1rzA9mV66fLfjCdF6yIaLeqzphpWcJDIIg5MY
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 09:22:58.042 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: 
Step 5_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel7868 sberbank ; ./verify/test-channel-exists.sh testchannel7868 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel7868 sberbank VERIFY: test-channel-exists.sh testchannel7868 sberbank
[1;36mCreating testchannel7868 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjc3MX0.sMzt8qFhmPWmMKkVA4bddsg4umFEYfxM4OiWiwiO8ig
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel7868> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel7868> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:26:13.679 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:26:13.681 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:26:13.682 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:26:13.682 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel7868",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:26:12Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel7868> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel7868-02 vtb ; ./verify/test-channel-exists.sh testchannel7868-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel7868-02 vtb VERIFY: test-channel-exists.sh testchannel7868-02 vtb
[1;36mCreating testchannel7868-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjc3NH0.F0phdFz5x4Bsmi0iS2NZU5BnmcxQiBNFaPQmam3litw
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel7868-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel7868-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:26:16.158 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:26:16.161 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:26:16.162 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:26:16.162 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel7868-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:26:15Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel7868-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel7868 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel7868 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel7868> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel7868 sberbank vtb VERIFY: test-channel-add-org.sh testchannel7868 sberbank vtb
[1;36mAdd vtb to the testchannel7868 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel7868 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjc3Nn0.zkZlgZxMC1_OlhJkVScvNy4DpzXhogruMb-84JGmKX0
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel7868 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel7868 ...[m[m[m
[34m2020-02-25 09:26:19.314 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:26:19.318 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:26:19.320 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:26:19.320 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel7868>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel7868-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel7868-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel7868-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel7868-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel7868-02 vtb sberbank
[1;36mAdd sberbank to the testchannel7868-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel7868-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjc3OX0.cYW2pOwAt_5aQ8SUaUxYsntQsU1wW53LzoOg9oB-Zew
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel7868-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel7868-02 ...[m[m[m
[34m2020-02-25 09:26:22.187 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:26:22.191 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:26:22.193 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:26:22.193 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel7868-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel7868 sberbank vtb ; ./verify/test-join-channel.sh testchannel7868 sberbank vtb
Step: 5_api Test 'Join <vtb> to the <testchannel7868> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel7868 sberbank vtb VERIFY: test-join-channel.sh testchannel7868 sberbank vtb
[1;36mJoining vtb.example.net to the testchannel7868 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel7868 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjc4Mn0.0jNaJ2ZzEDGNV_0crXpd6De-E2SMS3-HnJCR7OISEuo
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
<!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <title>Error</title> </head> <body> <pre>UnauthorizedError: invalid signature<br> &nbsp; &nbsp;at /usr/src/app/node_modules/express-jwt/lib/index.js:102:22<br> &nbsp; &nbsp;at /usr/src/app/node_modules/jsonwebtoken/verify.js:133:14<br> &nbsp; &nbsp;at getSecret (/usr/src/app/node_modules/jsonwebtoken/verify.js:90:14)<br> &nbsp; &nbsp;at Object.module.exports [as verify] (/usr/src/app/node_modules/jsonwebtoken/verify.js:94:10)<br> &nbsp; &nbsp;at verifyToken (/usr/src/app/node_modules/express-jwt/lib/index.js:100:13)<br> &nbsp; &nbsp;at fn (/usr/src/app/node_modules/async/lib/async.js:746:34)<br> &nbsp; &nbsp;at /usr/src/app/node_modules/async/lib/async.js:1213:16<br> &nbsp; &nbsp;at /usr/src/app/node_modules/async/lib/async.js:166:37<br> &nbsp; &nbsp;at /usr/src/app/node_modules/async/lib/async.js:706:43<br> &nbsp; &nbsp;at /usr/src/app/node_modules/async/lib/async.js:167:37<br> &nbsp; &nbsp;at Immediate._onImmediate (/usr/src/app/node_modules/async/lib/async.js:1206:34)<br> &nbsp; &nbsp;at runCallback (timers.js:810:20)<br> &nbsp; &nbsp;at tryOnImmediate (timers.js:768:5)<br> &nbsp; &nbsp;at processImmediate [as _immediateCallback] (timers.js:745:5)</pre> </body> </html> 401
parse error: Invalid numeric literal at EOF at line 1, column 9
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 09:26:23.735 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: 
Step 5_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel15838 sberbank ; ./verify/test-channel-exists.sh testchannel15838 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel15838 sberbank VERIFY: test-channel-exists.sh testchannel15838 sberbank
[1;36mCreating testchannel15838 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjgyMH0.PLrZ8EwQ0oaCeCUA5S1FyhRVl069FwwsIflqQhak2sE
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel15838> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel15838> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:27:02.518 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:27:02.520 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:27:02.522 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:27:02.522 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel15838",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:27:01Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel15838> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel15838-02 vtb ; ./verify/test-channel-exists.sh testchannel15838-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel15838-02 vtb VERIFY: test-channel-exists.sh testchannel15838-02 vtb
[1;36mCreating testchannel15838-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjgyMn0.UM5V3sbURdbjKFoGrL-aw0BmdmfKzxC_4DhPwa7yx_g
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel15838-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel15838-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:27:04.985 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:27:04.989 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:27:04.992 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:27:04.992 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel15838-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:27:03Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel15838-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel15838 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel15838 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel15838> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel15838 sberbank vtb VERIFY: test-channel-add-org.sh testchannel15838 sberbank vtb
[1;36mAdd vtb to the testchannel15838 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel15838 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjgyNX0.MqMCzxbjN3ZcZg4MKvnf2givCe23hioHYNGz6U1CPmo
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel15838 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel15838 ...[m[m[m
[34m2020-02-25 09:27:08.048 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:27:08.051 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:27:08.055 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:27:08.056 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel15838>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel15838-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel15838-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel15838-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel15838-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel15838-02 vtb sberbank
[1;36mAdd sberbank to the testchannel15838-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel15838-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjgyOH0.uuNt7KuGNNvrvR1T1TQBa4z6kmoaN72byd01-RPV7i4
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel15838-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel15838-02 ...[m[m[m
[34m2020-02-25 09:27:10.917 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:27:10.924 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:27:10.925 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:27:10.925 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel15838-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel15838 sberbank vtb ; ./verify/test-join-channel.sh testchannel15838 sberbank vtb
Step: 5_api Test 'Join <vtb> to the <testchannel15838> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel15838 sberbank vtb VERIFY: test-join-channel.sh testchannel15838 sberbank vtb
[1;36mJoining vtb.example.net to the testchannel15838 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel15838 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMjgzMX0.CVe0oBZahPuoJzPEIJv1AtJYObCL0ZTCPd0aIJiVdKI
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 09:29:12.378 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: testchannel15838
Step 5_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel7121 sberbank ; ./verify/test-channel-exists.sh testchannel7121 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel7121 sberbank VERIFY: test-channel-exists.sh testchannel7121 sberbank
[1;36mCreating testchannel7121 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMzE0MH0.AiBiYhJ6b1o0ibbPBx3UWuy4PYF-ILo-bEUstmYkpeU
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel7121> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel7121> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:32:22.561 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:32:22.562 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:32:22.563 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:32:22.563 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel7121",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:32:21Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel7121> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel7121-02 vtb ; ./verify/test-channel-exists.sh testchannel7121-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel7121-02 vtb VERIFY: test-channel-exists.sh testchannel7121-02 vtb
[1;36mCreating testchannel7121-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMzE0M30.hNbGBL-E6A2WhPDhCYb74quSl62CcajPeSUB86DC5Uk
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel7121-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel7121-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:32:25.302 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:32:25.304 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:32:25.305 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:32:25.305 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel7121-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:32:24Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel7121-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel7121 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel7121 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel7121> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel7121 sberbank vtb VERIFY: test-channel-add-org.sh testchannel7121 sberbank vtb
[1;36mAdd vtb to the testchannel7121 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel7121 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMzE0NX0.QR5vrLdJ8A1DHAPIXREFsiD5AdtS80pQeQPI_FHAPF8
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel7121 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel7121 ...[m[m[m
[34m2020-02-25 09:32:28.178 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:32:28.181 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:32:28.183 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:32:28.183 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel7121>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel7121-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel7121-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel7121-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel7121-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel7121-02 vtb sberbank
[1;36mAdd sberbank to the testchannel7121-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel7121-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMzE0OH0.XzGF1rQSVDzaBdKQ_usAMw6AKdeGVVynsPlwgmi_52s
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel7121-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel7121-02 ...[m[m[m
[34m2020-02-25 09:32:30.639 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:32:30.647 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:32:30.648 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:32:30.648 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel7121-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel7121 vtb ; ./verify/test-join-channel.sh testchannel7121 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel7121> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel7121 vtb VERIFY: test-join-channel.sh testchannel7121 vtb
[1;36mJoining vtb.example.net to the testchannel7121 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel7121 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMzE1MX0.wL4Iffc45LYEqK7YGs8Nppmzg5n9M1pofZylfGc0sfM
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 09:34:31.938 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: testchannel7121
Step 5_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel24218 sberbank ; ./verify/test-channel-exists.sh testchannel24218 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel24218 sberbank VERIFY: test-channel-exists.sh testchannel24218 sberbank
[1;36mCreating testchannel24218 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMzg0Nn0.PrPHzQPuIM4HmiL8OiGcZapYco1WbXH4-uGCK72ifNI
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel24218> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel24218> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:44:07.857 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:44:07.860 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:44:07.861 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:44:07.862 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel24218",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:44:06Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel24218> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel24218-02 vtb ; ./verify/test-channel-exists.sh testchannel24218-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel24218-02 vtb VERIFY: test-channel-exists.sh testchannel24218-02 vtb
[1;36mCreating testchannel24218-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMzg0OH0.TWMuPKeI2WS-CIrCk9JXpRtMPgms9ssbJq4KlfF2Eo8
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel24218-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel24218-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:44:10.339 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:44:10.343 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:44:10.345 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:44:10.345 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel24218-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:44:09Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel24218-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel24218 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel24218 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel24218> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel24218 sberbank vtb VERIFY: test-channel-add-org.sh testchannel24218 sberbank vtb
[1;36mAdd vtb to the testchannel24218 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel24218 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMzg1MH0.alCEUa5rJYsQ-CsYhaH5QqOjCbD7uWqRpB__oNAsATQ
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel24218 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel24218 ...[m[m[m
[34m2020-02-25 09:44:13.639 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:44:13.643 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:44:13.646 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:44:13.646 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel24218>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel24218-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel24218-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel24218-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel24218-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel24218-02 vtb sberbank
[1;36mAdd sberbank to the testchannel24218-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel24218-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMzg1NH0.W2NPfzt_gKy7FcZrHyBa08EsalD1TQDMWfT4W8v15gI
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel24218-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel24218-02 ...[m[m[m
[34m2020-02-25 09:44:16.889 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:44:16.895 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:44:16.897 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:44:16.897 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel24218-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel24218 vtb ; ./verify/test-join-channel.sh testchannel24218 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel24218> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel24218 vtb VERIFY: test-join-channel.sh testchannel24218 vtb
[1;36mJoining vtb.example.net to the testchannel24218 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel24218 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMzg1N30.AEsqfqszMbfDFtRFrl-n2pEmU2a0gBDnyTOqQd8e9wE
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 09:46:18.299 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: testchannel24218
Step 5_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel24218-02 sberbank ; ./verify/test-join-channel.sh testchannel24218-02 sberbank
Step: 6_api Test 'Join <sberbank> to the <testchannel24218-02> chanel created by the <vtb> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel24218-02 sberbank VERIFY: test-join-channel.sh testchannel24218-02 sberbank
[1;36mJoining sberbank.example.net to the testchannel24218-02 channel using API...[m[m[m
[1;36mJoining sberbank.example.net to the testchannel24218-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyMzk3OH0.0IiWhiTlYvahoqIEZJBvFndTmyFF1kQqVGFvzt8gTmk
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 09:48:19.433 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: testchannel24218-02
Step 6_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel20589 sberbank ; ./verify/test-channel-exists.sh testchannel20589 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel20589 sberbank VERIFY: test-channel-exists.sh testchannel20589 sberbank
[1;36mCreating testchannel20589 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyNDQ1MH0.8Nlpp8uxCpv7ctivw-u2lvMgSOZtwERHA-qHhbEI0OM
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel20589> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel20589> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 09:54:12.227 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:54:12.230 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:54:12.231 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:54:12.231 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel20589",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:54:11Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel20589> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel20589-02 vtb ; ./verify/test-channel-exists.sh testchannel20589-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel20589-02 vtb VERIFY: test-channel-exists.sh testchannel20589-02 vtb
[1;36mCreating testchannel20589-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyNDQ1Mn0.nv6F_iy-ZAyBM9L7cfkNH1DuekUVLGI2MDFEaJBP3eA
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel20589-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel20589-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 09:54:15.396 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:54:15.404 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 09:54:15.406 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 09:54:15.406 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel20589-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T09:54:13Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel20589-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel20589 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel20589 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel20589> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel20589 sberbank vtb VERIFY: test-channel-add-org.sh testchannel20589 sberbank vtb
[1;36mAdd vtb to the testchannel20589 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel20589 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyNDQ1Nn0.928Sto4IKROaB5uwfZ2CK9wdUUAAgEDUz21wx7TOcME
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel20589 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel20589 ...[m[m[m
[34m2020-02-25 09:54:19.459 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 09:54:19.462 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 09:54:19.464 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 09:54:19.464 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel20589>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel20589 vtb ; ./verify/test-join-channel.sh testchannel20589 vtb
Step: 4_api Test 'Join <vtb> to the <testchannel20589> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel20589 vtb VERIFY: test-join-channel.sh testchannel20589 vtb
[1;36mJoining vtb.example.net to the testchannel20589 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel20589 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyNDQ1OX0.GBFIOfUKWnxTXemuKK1KN-ZQgDcXNvn7nQtEYwWt3Fw
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 09:56:20.682 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: testchannel20589
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel20589-02 sberbank ; ./verify/test-join-channel.sh testchannel20589-02 sberbank
Step: 5_api Test 'Join <sberbank> to the <testchannel20589-02> chanel created by the <vtb> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel20589-02 sberbank VERIFY: test-join-channel.sh testchannel20589-02 sberbank
[1;36mJoining sberbank.example.net to the testchannel20589-02 channel using API...[m[m[m
[1;36mJoining sberbank.example.net to the testchannel20589-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyNDU4MX0.gSfm5r_Zm0xFx45_HbvrnS_Rrku6FdR7A9kWmv1ed8Y
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
"Invalid results returned ::FORBIDDEN" 500
parse error: Unfinished string at EOF at line 1, column 8
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 09:56:22.248 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: testchannel20589-02
Step 5_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel23932 sberbank ; ./verify/test-channel-exists.sh testchannel23932 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel23932 sberbank VERIFY: test-channel-exists.sh testchannel23932 sberbank
[1;36mCreating testchannel23932 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyNDg2Mn0.2cxcMvCBwikEoXsPOpPxL9tNwczyfw1OPsmsp2OrDJ4
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel23932> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel23932> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 10:01:04.960 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:01:04.965 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 10:01:04.967 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 10:01:04.968 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel23932",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T10:01:03Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel23932> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel23932-02 vtb ; ./verify/test-channel-exists.sh testchannel23932-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel23932-02 vtb VERIFY: test-channel-exists.sh testchannel23932-02 vtb
[1;36mCreating testchannel23932-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyNDg2Nn0.hEXCDxVEYQxbXccp8Q47n8EU7XMwnhaBOV5cj8jYVFQ
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel23932-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel23932-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 10:01:08.915 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:01:08.917 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 10:01:08.918 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 10:01:08.918 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel23932-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T10:01:07Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel23932-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel23932 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel23932 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel23932> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel23932 sberbank vtb VERIFY: test-channel-add-org.sh testchannel23932 sberbank vtb
[1;36mAdd vtb to the testchannel23932 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel23932 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyNDg2OX0.PHybLOt6186HiEpk5j5fdO8n2PMeoz7l-2G2m7JifwY
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel23932 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel23932 ...[m[m[m
[34m2020-02-25 10:01:11.704 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:01:11.709 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 10:01:11.716 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 10:01:11.717 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel23932>.[m[m[m
Step 3_api: exit code 0
SKIP : ; NO_RED_OUTPUT=true ./api/join-channel.sh testchannel23932-02 sberbank ; ./verify/test-join-channel.sh testchannel23932-02 sberbank
Step: 4_api Test 'Join <sberbank> to the <testchannel23932-02> chanel created by the <vtb> org'
SKIP : RUNTESTNOERRPRINT: join-channel.sh testchannel23932-02 sberbank VERIFY: test-join-channel.sh testchannel23932-02 sberbank
[1;36mJoining sberbank.example.net to the testchannel23932-02 channel using API...[m[m[m
[1;36mJoining sberbank.example.net to the testchannel23932-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyNDg3Mn0.mGJBPeEZNdv0NBDWdI8hurINUuBntnsxFz1kneVPu7Q
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
"Invalid results returned ::FORBIDDEN" 500
parse error: Unfinished string at EOF at line 1, column 8
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 10:01:14.456 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: testchannel23932-02
Step 4_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel925 sberbank ; ./verify/test-channel-exists.sh testchannel925 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel925 sberbank VERIFY: test-channel-exists.sh testchannel925 sberbank
[1;36mCreating testchannel925 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyNTE3Mn0.3AvUQkvgYcw05akS80uj5i4SW5vbs1MXS7Od9Jo5BS8
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel925> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel925> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 10:06:15.217 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:06:15.220 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 10:06:15.222 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 10:06:15.222 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel925",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T10:06:13Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel925> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel925-02 vtb ; ./verify/test-channel-exists.sh testchannel925-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel925-02 vtb VERIFY: test-channel-exists.sh testchannel925-02 vtb
[1;36mCreating testchannel925-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyNTE3N30.OvXrRx6fFDrNAaqoXqh_GVrtmNUjQi65bpFISNh4Gsk
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel925-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel925-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 10:06:20.524 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:06:20.526 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 10:06:20.527 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 10:06:20.527 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel925-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T10:06:18Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel925-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel925 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel925 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel925> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel925 sberbank vtb VERIFY: test-channel-add-org.sh testchannel925 sberbank vtb
[1;36mAdd vtb to the testchannel925 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel925 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyNTE4MX0.n74t5B_MOyl9g6zP_Ck7Cs6WwObkhRLLJz6NbFUsJTE
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel925 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel925 ...[m[m[m
[34m2020-02-25 10:06:23.991 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:06:23.995 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 10:06:23.997 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 10:06:23.997 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel925>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel925 vtb ; ./verify/test-join-channel.sh testchannel925 vtb
Step: 4_api Test 'Join <vtb> to the <testchannel925> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel925 vtb VERIFY: test-join-channel.sh testchannel925 vtb
[1;36mJoining vtb.example.net to the testchannel925 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel925 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyNTE4NX0.ekbcMi6yRdYPku-gTJSJMN990SUsZ9L-ZBFD0V-lMD0
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 10:08:26.147 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: testchannel925
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel925-02 sberbank ; ./verify/test-join-channel.sh testchannel925-02 sberbank
Step: 5_api Test 'Join <sberbank> to the <testchannel925-02> chanel created by the <vtb> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel925-02 sberbank VERIFY: test-join-channel.sh testchannel925-02 sberbank
[1;36mJoining sberbank.example.net to the testchannel925-02 channel using API...[m[m[m
[1;36mJoining sberbank.example.net to the testchannel925-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyNTMwNn0.q9REILKzyEu9YUCf2skyecCD_1qMjEHgv6lTUchz73A
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
"Invalid results returned ::FORBIDDEN" 500
parse error: Unfinished string at EOF at line 1, column 8
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[34m2020-02-25 10:08:27.659 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: testchannel925-02
Step 5_api: exit code 0
queryContainerNetworkSettings returns: 4000
queryContainerNetworkSettings returns: 4001
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel7964 sberbank ; ./verify/test-channel-exists.sh testchannel7964 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel7964 sberbank VERIFY: test-channel-exists.sh testchannel7964 sberbank
[1;36m
Creating the <testchannel7964> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel7964[m[m[m
example.net

Create channel sberbank testchannel7964
--2020-02-25 10:42:27--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:42:27--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:42:27--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:42:27--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 10:42:27.320 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 10:42:27.372 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 10:42:27.372 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 10:42:27.372 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 10:42:27.372 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 10:42:27.372 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 10:42:27.372 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 10:42:27.372 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 10:42:27.372 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 10:42:27.422 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 10:42:27.422 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 10:42:27.422 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 10:42:27.422 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 10:42:27.422 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 10:42:27.422 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 10:42:27.422 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 10:42:27.423 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 10:42:27.423 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 10:42:27.423 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 10:42:27.423 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 10:42:27.424 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 10:42:27.424 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 10:42:27.424 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 10:42:27.499 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:42:27.542 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel7964.pb -o orderer.example.net:7050 -c testchannel7964 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:42:27.641 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:42:27.644 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 10:42:27.645 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 10:42:27.645 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel7964
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel7964 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:42:27.973 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:42:27.986 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel7964> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel7964> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 10:42:30.283 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:42:30.285 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 10:42:30.286 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 10:42:30.286 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel7964",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T10:42:27Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel7964> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel7964-02 vtb ; ./verify/test-channel-exists.sh testchannel7964-02 vtb
Step: 2_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel7964-02 vtb VERIFY: test-channel-exists.sh testchannel7964-02 vtb
[1;36m
Creating the <testchannel7964-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel7964-02[m[m[m
example.net

Create channel vtb testchannel7964-02
--2020-02-25 10:42:32--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:42:32--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:42:32--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:42:32--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 10:42:32.613 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 10:42:32.664 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 10:42:32.664 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 10:42:32.664 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 10:42:32.664 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 10:42:32.664 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 10:42:32.664 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 10:42:32.664 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 10:42:32.664 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 10:42:32.717 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 10:42:32.717 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 10:42:32.717 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 10:42:32.717 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 10:42:32.717 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 10:42:32.717 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 10:42:32.717 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 10:42:32.718 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 10:42:32.719 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 10:42:32.719 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 10:42:32.719 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 10:42:32.719 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 10:42:32.720 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 10:42:32.720 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 10:42:32.776 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:42:32.814 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel7964-02.pb -o orderer.example.net:7050 -c testchannel7964-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:42:32.888 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:42:32.891 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 10:42:32.892 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 10:42:32.892 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel7964-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel7964-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:42:33.237 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:42:33.247 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel7964-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel7964-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 10:42:35.311 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:42:35.313 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 10:42:35.314 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 10:42:35.314 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel7964-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T10:42:33Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel7964-02> exists and visible to vtb[m[m[m
Step 2_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel7964 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel7964 sberbank vtb
Step: 3_cli Test 'Add <vtb> to channel <testchannel7964> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel7964 sberbank vtb VERIFY: test-channel-add-org.sh testchannel7964 sberbank vtb
[1;36m
Add vtb to the testchannel7964 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel7964 vtb 7051 example.net[m[m[m
--2020-02-25 10:42:37--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:42:37--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:42:37--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel7964, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel7964.pb -o orderer.example.net:7050 -c testchannel7964 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:42:37.640 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:42:37.641 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 10:42:37.642 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 10:42:37.642 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel7964
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel7964 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:42:37.968 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:42:37.996 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel7964 ...[m[m[m
[34m2020-02-25 10:42:39.043 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:42:39.051 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 10:42:39.052 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 10:42:39.052 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel7964>.[m[m[m
Step 3_cli: exit code 0
NO_RED_OUTPUT=true ./cli/join-channel.sh testchannel7964 vtb ; ./verify/test-join-channel.sh testchannel7964 vtb
Step: 4_cli Test 'Join <vtb> to the <testchannel7964> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel7964 vtb VERIFY: test-join-channel.sh testchannel7964 vtb
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-join.sh testchannel7964[m[m[m
CORE_PEER_ADDRESS=peer0.sberbank.example.net:7051
CORE_PEER_LOCALMSPID=sberbank
CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/users/Admin@sberbank.example.net/msp
CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/ca.crt
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
DOMAIN=example.net
ENROLL_ID=admin
ENROLL_SECRET=adminpw
FABRIC_CFG_PATH=/etc/hyperledger/fabric
FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
GOPATH=/opt/gopath
GOROOT=/opt/go
HOME=/root
HOSTNAME=fceff0ee3886
JAVA_HOME=/opt/java/openjdk
JAVA_TOOL_OPTIONS=-XX:+IgnoreUnrecognizedVMOptions -XX:+UseContainerSupport -XX:+IdleTuningCompactOnIdle -XX:+IdleTuningGcOnIdle
JAVA_VERSION=jdk8u222-b10_openj9-0.15.1
LANG=en_US.UTF-8
LANGUAGE=en_US:en
LC_ALL=en_US.UTF-8
ORDERER_BATCH_TIMEOUT=2
ORDERER_DOMAIN=example.net
ORDERER_GENERAL_LISTENPORT=7050
ORDERER_NAME=orderer
ORG=sberbank
PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/go/bin:/opt/gopath/bin
PEER0_PORT=7051
PWD=/etc/hyperledger
RAFT0_PORT=7050
RAFT1_PORT=7150
RAFT2_PORT=7250
SHLVL=2
SIGNATURE_HASH_FAMILY=SHA2
SYSTEM_CHANNEL_ID=orderer-system-channel
TERM=xterm
_=/usr/bin/env
--2020-02-25 10:42:41--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:42:41--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:42:41--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:42:41--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

Join sberbank to channel testchannel7964
Execute: channel fetch 0 crypto-config/configtx/testchannel7964.pb -o orderer.example.net:7050 -c testchannel7964 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:42:41.521 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:42:41.523 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 10:42:41.611 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:42:41.880 UTC [channelCmd] executeJoin -> INFO 002[0m Successfully submitted proposal to join channel
[1;34m
Verifing if the vtb has joined the <testchannel7964> channel...[m[m[m
[34m2020-02-25 10:42:42.759 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Channels peers has joined: testchannel7868-02 testchannel20589-02 testchannel23932-02 testchannel23932 testchannel925 testchannel28091-02 testchannel3346-02 testchannel26389-02 testchannel7121-02 testchannel925-02 testchannel13552-02 testchannel20345-02 testchannel22847-02 testchannel9267-02 testchannel24218-02 common testchannel314-02 testchannel15838 testchannel7121 testchannel24218 testchannel20589 testchannel19176-02 testchannel15838-02
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 4_cli: exit code 1
NO_RED_OUTPUT=true ./cli/join-channel.sh testchannel7964-02 sberbank ; ./verify/test-join-channel.sh testchannel7964-02 sberbank
Step: 5_cli Test 'Join <sberbank> to the <testchannel7964-02> chanel created by the <vtb> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel7964-02 sberbank VERIFY: test-join-channel.sh testchannel7964-02 sberbank
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-join.sh testchannel7964-02[m[m[m
CORE_PEER_ADDRESS=peer0.sberbank.example.net:7051
CORE_PEER_LOCALMSPID=sberbank
CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/users/Admin@sberbank.example.net/msp
CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/ca.crt
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
DOMAIN=example.net
ENROLL_ID=admin
ENROLL_SECRET=adminpw
FABRIC_CFG_PATH=/etc/hyperledger/fabric
FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
GOPATH=/opt/gopath
GOROOT=/opt/go
HOME=/root
HOSTNAME=760c1d20f857
JAVA_HOME=/opt/java/openjdk
JAVA_TOOL_OPTIONS=-XX:+IgnoreUnrecognizedVMOptions -XX:+UseContainerSupport -XX:+IdleTuningCompactOnIdle -XX:+IdleTuningGcOnIdle
JAVA_VERSION=jdk8u222-b10_openj9-0.15.1
LANG=en_US.UTF-8
LANGUAGE=en_US:en
LC_ALL=en_US.UTF-8
ORDERER_BATCH_TIMEOUT=2
ORDERER_DOMAIN=example.net
ORDERER_GENERAL_LISTENPORT=7050
ORDERER_NAME=orderer
ORG=sberbank
PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/go/bin:/opt/gopath/bin
PEER0_PORT=7051
PWD=/etc/hyperledger
RAFT0_PORT=7050
RAFT1_PORT=7150
RAFT2_PORT=7250
SHLVL=2
SIGNATURE_HASH_FAMILY=SHA2
SYSTEM_CHANNEL_ID=orderer-system-channel
TERM=xterm
_=/usr/bin/env
--2020-02-25 10:42:44--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:42:44--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:42:44--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:42:44--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

Join sberbank to channel testchannel7964-02
Execute: channel fetch 0 crypto-config/configtx/testchannel7964-02.pb -o orderer.example.net:7050 -c testchannel7964-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:42:45.024 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:42:45.026 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
[34m2020-02-25 10:42:45.109 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:42:45.232 UTC [channelCmd] executeJoin -> INFO 002[0m Successfully submitted proposal to join channel
[1;34m
Verifing if the sberbank has joined the <testchannel7964-02> channel...[m[m[m
[34m2020-02-25 10:42:46.201 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
Channels peers has joined: testchannel7868 testchannel24218 testchannel20589 testchannel7964 testchannel13807 testchannel11791 testchannel22847 testchannel3346 testchannel15838 testchannel7121 testchannel7964-02 common testchannel13552 testchannel18092 testchannel9267 testchannel24218-02 testchannel23932 testchannel19176 testchannel26389 testchannel28091 testchannel29825 testchannel19799 testchannel20345 testchannel314 testchannel925
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_cli: exit code 1
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel14205 sberbank ; ./verify/test-channel-exists.sh testchannel14205 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel14205 sberbank VERIFY: test-channel-exists.sh testchannel14205 sberbank
[1;36m
Creating the <testchannel14205> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel14205[m[m[m
example.net

Create channel sberbank testchannel14205
--2020-02-25 10:46:24--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:46:24--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:46:24--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:46:24--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 10:46:24.193 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 10:46:24.244 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 10:46:24.244 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 10:46:24.244 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 10:46:24.244 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 10:46:24.244 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 10:46:24.244 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 10:46:24.244 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 10:46:24.244 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 10:46:24.296 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 10:46:24.296 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 10:46:24.296 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 10:46:24.296 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 10:46:24.296 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 10:46:24.296 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 10:46:24.296 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 10:46:24.297 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 10:46:24.297 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 10:46:24.297 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 10:46:24.297 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 10:46:24.298 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 10:46:24.298 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 10:46:24.298 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 10:46:24.356 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:24.389 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel14205.pb -o orderer.example.net:7050 -c testchannel14205 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:46:24.566 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:24.568 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 10:46:24.569 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 10:46:24.569 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel14205
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel14205 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:46:24.880 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:24.890 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel14205> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel14205> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 10:46:27.083 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:27.087 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 10:46:27.088 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 10:46:27.088 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel14205",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T10:46:24Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel14205> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel14205-02 vtb ; ./verify/test-channel-exists.sh testchannel14205-02 vtb
Step: 2_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel14205-02 vtb VERIFY: test-channel-exists.sh testchannel14205-02 vtb
[1;36m
Creating the <testchannel14205-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel14205-02[m[m[m
example.net

Create channel vtb testchannel14205-02
--2020-02-25 10:46:29--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:46:29--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:46:29--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:46:29--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 10:46:29.304 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 10:46:29.358 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 10:46:29.358 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 10:46:29.358 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 10:46:29.358 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 10:46:29.358 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 10:46:29.358 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 10:46:29.358 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 10:46:29.358 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 10:46:29.406 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 10:46:29.406 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 10:46:29.406 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 10:46:29.406 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 10:46:29.406 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 10:46:29.406 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 10:46:29.406 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 10:46:29.406 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 10:46:29.408 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 10:46:29.408 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 10:46:29.408 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 10:46:29.408 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 10:46:29.408 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 10:46:29.408 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 10:46:29.464 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:29.497 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel14205-02.pb -o orderer.example.net:7050 -c testchannel14205-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:46:29.565 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:29.568 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 10:46:29.569 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 10:46:29.569 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel14205-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel14205-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:46:29.875 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:29.884 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel14205-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel14205-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 10:46:32.193 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:32.196 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 10:46:32.198 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 10:46:32.198 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel14205-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T10:46:29Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel14205-02> exists and visible to vtb[m[m[m
Step 2_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel14205 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel14205 sberbank vtb
Step: 3_cli Test 'Add <vtb> to channel <testchannel14205> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel14205 sberbank vtb VERIFY: test-channel-add-org.sh testchannel14205 sberbank vtb
[1;36m
Add vtb to the testchannel14205 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel14205 vtb 7051 example.net[m[m[m
--2020-02-25 10:46:34--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:46:34--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:46:34--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel14205, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel14205.pb -o orderer.example.net:7050 -c testchannel14205 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:46:34.824 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:34.826 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 10:46:34.827 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 10:46:34.827 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel14205
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel14205 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:46:35.160 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:35.172 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel14205 ...[m[m[m
[34m2020-02-25 10:46:36.149 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:36.151 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 10:46:36.152 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 10:46:36.152 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel14205>.[m[m[m
Step 3_cli: exit code 0
NO_RED_OUTPUT=true ./cli/join-channel.sh testchannel14205 vtb ; ./verify/test-join-channel.sh testchannel14205 vtb
Step: 4_cli Test 'Join <vtb> to the <testchannel14205> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel14205 vtb VERIFY: test-join-channel.sh testchannel14205 vtb
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-join.sh testchannel14205[m[m[m
CORE_PEER_ADDRESS=peer0.sberbank.example.net:7051
CORE_PEER_LOCALMSPID=sberbank
CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/users/Admin@sberbank.example.net/msp
CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/ca.crt
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
DOMAIN=example.net
ENROLL_ID=admin
ENROLL_SECRET=adminpw
FABRIC_CFG_PATH=/etc/hyperledger/fabric
FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
GOPATH=/opt/gopath
GOROOT=/opt/go
HOME=/root
HOSTNAME=104b9db52478
JAVA_HOME=/opt/java/openjdk
JAVA_TOOL_OPTIONS=-XX:+IgnoreUnrecognizedVMOptions -XX:+UseContainerSupport -XX:+IdleTuningCompactOnIdle -XX:+IdleTuningGcOnIdle
JAVA_VERSION=jdk8u222-b10_openj9-0.15.1
LANG=en_US.UTF-8
LANGUAGE=en_US:en
LC_ALL=en_US.UTF-8
ORDERER_BATCH_TIMEOUT=2
ORDERER_DOMAIN=example.net
ORDERER_GENERAL_LISTENPORT=7050
ORDERER_NAME=orderer
ORG=sberbank
PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/go/bin:/opt/gopath/bin
PEER0_PORT=7051
PWD=/etc/hyperledger
RAFT0_PORT=7050
RAFT1_PORT=7150
RAFT2_PORT=7250
SHLVL=2
SIGNATURE_HASH_FAMILY=SHA2
SYSTEM_CHANNEL_ID=orderer-system-channel
TERM=xterm
_=/usr/bin/env
--2020-02-25 10:46:38--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:46:38--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:46:38--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:46:38--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

Join sberbank to channel testchannel14205
Execute: channel fetch 0 crypto-config/configtx/testchannel14205.pb -o orderer.example.net:7050 -c testchannel14205 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:46:38.815 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:38.823 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 10:46:39.026 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:39.249 UTC [channelCmd] executeJoin -> INFO 002[0m Successfully submitted proposal to join channel
[1;34m
Verifing if the vtb has joined the <testchannel14205> channel...[m[m[m
[34m2020-02-25 10:46:40.304 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:40.304 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized Channels peers has joined: testchannel19176-02 testchannel15838-02 testchannel15838 testchannel7121 testchannel24218 testchannel20589 testchannel28091-02 testchannel3346-02 testchannel7868-02 testchannel20589-02 testchannel23932-02 testchannel23932 testchannel925 testchannel13552-02 testchannel20345-02 testchannel26389-02 testchannel7121-02 testchannel925-02 common testchannel314-02 testchannel22847-02 testchannel9267-02 testchannel24218-02
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 4_cli: exit code 1
NO_RED_OUTPUT=true ./cli/join-channel.sh testchannel14205-02 sberbank ; ./verify/test-join-channel.sh testchannel14205-02 sberbank
Step: 5_cli Test 'Join <sberbank> to the <testchannel14205-02> chanel created by the <vtb> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel14205-02 sberbank VERIFY: test-join-channel.sh testchannel14205-02 sberbank
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-join.sh testchannel14205-02[m[m[m
CORE_PEER_ADDRESS=peer0.sberbank.example.net:7051
CORE_PEER_LOCALMSPID=sberbank
CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/users/Admin@sberbank.example.net/msp
CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/ca.crt
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
DOMAIN=example.net
ENROLL_ID=admin
ENROLL_SECRET=adminpw
FABRIC_CFG_PATH=/etc/hyperledger/fabric
FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
GOPATH=/opt/gopath
GOROOT=/opt/go
HOME=/root
HOSTNAME=a2919f23a291
JAVA_HOME=/opt/java/openjdk
JAVA_TOOL_OPTIONS=-XX:+IgnoreUnrecognizedVMOptions -XX:+UseContainerSupport -XX:+IdleTuningCompactOnIdle -XX:+IdleTuningGcOnIdle
JAVA_VERSION=jdk8u222-b10_openj9-0.15.1
LANG=en_US.UTF-8
LANGUAGE=en_US:en
LC_ALL=en_US.UTF-8
ORDERER_BATCH_TIMEOUT=2
ORDERER_DOMAIN=example.net
ORDERER_GENERAL_LISTENPORT=7050
ORDERER_NAME=orderer
ORG=sberbank
PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/go/bin:/opt/gopath/bin
PEER0_PORT=7051
PWD=/etc/hyperledger
RAFT0_PORT=7050
RAFT1_PORT=7150
RAFT2_PORT=7250
SHLVL=2
SIGNATURE_HASH_FAMILY=SHA2
SYSTEM_CHANNEL_ID=orderer-system-channel
TERM=xterm
_=/usr/bin/env
--2020-02-25 10:46:42--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:46:42--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:46:42--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:46:42--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

Join sberbank to channel testchannel14205-02
Execute: channel fetch 0 crypto-config/configtx/testchannel14205-02.pb -o orderer.example.net:7050 -c testchannel14205-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:46:42.848 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:42.851 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
[34m2020-02-25 10:46:42.943 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:43.107 UTC [channelCmd] executeJoin -> INFO 002[0m Successfully submitted proposal to join channel
[1;34m
Verifing if the sberbank has joined the <testchannel14205-02> channel...[m[m[m
[34m2020-02-25 10:46:43.973 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:46:43.973 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized Channels peers has joined: testchannel19176 testchannel26389 testchannel29825 testchannel24218-02 testchannel314 testchannel14205-02 testchannel22847 testchannel3346 testchannel24218 testchannel20589 common testchannel13552 testchannel18092 testchannel9267 testchannel15838 testchannel7121 testchannel7964-02 testchannel28091 testchannel23932 testchannel19799 testchannel20345 testchannel925 testchannel14205 testchannel13807 testchannel11791 testchannel7868 testchannel7964
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_cli: exit code 1
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel12495 sberbank ; ./verify/test-channel-exists.sh testchannel12495 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel12495 sberbank VERIFY: test-channel-exists.sh testchannel12495 sberbank
[1;36m
Creating the <testchannel12495> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel12495[m[m[m
example.net

Create channel sberbank testchannel12495
--2020-02-25 10:50:10--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:50:10--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:50:10--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:50:10--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 10:50:10.521 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 10:50:10.625 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 10:50:10.625 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 10:50:10.625 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 10:50:10.625 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 10:50:10.625 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 10:50:10.625 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 10:50:10.625 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 10:50:10.625 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 10:50:10.695 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 10:50:10.695 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 10:50:10.695 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 10:50:10.695 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 10:50:10.695 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 10:50:10.695 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 10:50:10.695 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 10:50:10.696 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 10:50:10.696 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 10:50:10.696 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 10:50:10.696 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 10:50:10.696 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 10:50:10.697 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 10:50:10.697 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 10:50:10.758 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:50:10.792 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel12495.pb -o orderer.example.net:7050 -c testchannel12495 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:50:10.885 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:50:10.888 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 10:50:10.889 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 10:50:10.889 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel12495
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel12495 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:50:11.269 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:50:11.280 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel12495> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel12495> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 10:50:13.835 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:50:13.838 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 10:50:13.839 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 10:50:13.839 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel12495",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T10:50:11Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel12495> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel12495-02 vtb ; ./verify/test-channel-exists.sh testchannel12495-02 vtb
Step: 2_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel12495-02 vtb VERIFY: test-channel-exists.sh testchannel12495-02 vtb
[1;36m
Creating the <testchannel12495-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel12495-02[m[m[m
example.net

Create channel vtb testchannel12495-02
--2020-02-25 10:50:16--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:50:16--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:50:16--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:50:16--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 10:50:16.307 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 10:50:16.359 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 10:50:16.359 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 10:50:16.359 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 10:50:16.359 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 10:50:16.359 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 10:50:16.359 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 10:50:16.359 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 10:50:16.359 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 10:50:16.413 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 10:50:16.414 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 10:50:16.414 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 10:50:16.414 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 10:50:16.414 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 10:50:16.414 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 10:50:16.414 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 10:50:16.414 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 10:50:16.416 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 10:50:16.416 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 10:50:16.416 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 10:50:16.416 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 10:50:16.416 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 10:50:16.417 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 10:50:16.476 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:50:16.520 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel12495-02.pb -o orderer.example.net:7050 -c testchannel12495-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:50:16.606 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:50:16.608 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 10:50:16.609 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 10:50:16.609 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel12495-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel12495-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:50:17.005 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:50:17.020 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel12495-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel12495-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 10:50:19.332 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:50:19.336 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 10:50:19.337 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 10:50:19.337 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel12495-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T10:50:17Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel12495-02> exists and visible to vtb[m[m[m
Step 2_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel12495 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel12495 sberbank vtb
Step: 3_cli Test 'Add <vtb> to channel <testchannel12495> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel12495 sberbank vtb VERIFY: test-channel-add-org.sh testchannel12495 sberbank vtb
[1;36m
Add vtb to the testchannel12495 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel12495 vtb 7051 example.net[m[m[m
--2020-02-25 10:50:22--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:50:22--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:50:22--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel12495, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel12495.pb -o orderer.example.net:7050 -c testchannel12495 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:50:22.298 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:50:22.304 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 10:50:22.305 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 10:50:22.305 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel12495
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel12495 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:50:22.626 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:50:22.646 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel12495 ...[m[m[m
[34m2020-02-25 10:50:23.577 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:50:23.581 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 10:50:23.582 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 10:50:23.582 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel12495>.[m[m[m
Step 3_cli: exit code 0
NO_RED_OUTPUT=true ./cli/join-channel.sh testchannel12495 vtb ; ./verify/test-join-channel.sh testchannel12495 vtb
Step: 4_cli Test 'Join <vtb> to the <testchannel12495> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel12495 vtb VERIFY: test-join-channel.sh testchannel12495 vtb
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-join.sh testchannel12495[m[m[m
CORE_PEER_ADDRESS=peer0.sberbank.example.net:7051
CORE_PEER_LOCALMSPID=sberbank
CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/users/Admin@sberbank.example.net/msp
CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/ca.crt
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
DOMAIN=example.net
ENROLL_ID=admin
ENROLL_SECRET=adminpw
FABRIC_CFG_PATH=/etc/hyperledger/fabric
FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
GOPATH=/opt/gopath
GOROOT=/opt/go
HOME=/root
HOSTNAME=74e4080a97d0
JAVA_HOME=/opt/java/openjdk
JAVA_TOOL_OPTIONS=-XX:+IgnoreUnrecognizedVMOptions -XX:+UseContainerSupport -XX:+IdleTuningCompactOnIdle -XX:+IdleTuningGcOnIdle
JAVA_VERSION=jdk8u222-b10_openj9-0.15.1
LANG=en_US.UTF-8
LANGUAGE=en_US:en
LC_ALL=en_US.UTF-8
ORDERER_BATCH_TIMEOUT=2
ORDERER_DOMAIN=example.net
ORDERER_GENERAL_LISTENPORT=7050
ORDERER_NAME=orderer
ORG=sberbank
PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/go/bin:/opt/gopath/bin
PEER0_PORT=7051
PWD=/etc/hyperledger
RAFT0_PORT=7050
RAFT1_PORT=7150
RAFT2_PORT=7250
SHLVL=2
SIGNATURE_HASH_FAMILY=SHA2
SYSTEM_CHANNEL_ID=orderer-system-channel
TERM=xterm
_=/usr/bin/env
--2020-02-25 10:50:26--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:50:26--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:50:26--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 10:50:26--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

Join sberbank to channel testchannel12495
Execute: channel fetch 0 crypto-config/configtx/testchannel12495.pb -o orderer.example.net:7050 -c testchannel12495 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 10:50:26.254 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:50:26.261 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 10:50:26.357 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 10:50:26.528 UTC [channelCmd] executeJoin -> INFO 002[0m Successfully submitted proposal to join channel
[1;34m
Verifing if the vtb has joined the <testchannel12495> channel...[m[m[m
[34m2020-02-25 10:50:27.427 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized




NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel1619 sberbank ; ./verify/test-channel-exists.sh testchannel1619 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel1619 sberbank VERIFY: test-channel-exists.sh testchannel1619 sberbank
[1;36m
Creating the <testchannel1619> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel1619[m[m[m
example.net

Create channel sberbank testchannel1619
--2020-02-25 11:07:24--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:07:24--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:07:24--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:07:24--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 11:07:24.376 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 11:07:24.440 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 11:07:24.440 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 11:07:24.440 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 11:07:24.440 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 11:07:24.440 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 11:07:24.441 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 11:07:24.441 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 11:07:24.441 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 11:07:24.489 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 11:07:24.489 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 11:07:24.489 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 11:07:24.489 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 11:07:24.489 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 11:07:24.489 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 11:07:24.489 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 11:07:24.489 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 11:07:24.490 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 11:07:24.490 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 11:07:24.490 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 11:07:24.490 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 11:07:24.491 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 11:07:24.491 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 11:07:24.586 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:07:24.626 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel1619.pb -o orderer.example.net:7050 -c testchannel1619 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:07:24.726 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:07:24.728 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 11:07:24.730 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 11:07:24.730 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel1619
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel1619 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:07:25.051 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:07:25.059 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel1619> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel1619> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 11:07:27.242 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:07:27.245 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 11:07:27.246 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 11:07:27.246 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel1619",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T11:07:25Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel1619> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel1619-02 vtb ; ./verify/test-channel-exists.sh testchannel1619-02 vtb
Step: 2_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel1619-02 vtb VERIFY: test-channel-exists.sh testchannel1619-02 vtb
[1;36m
Creating the <testchannel1619-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel1619-02[m[m[m
example.net

Create channel vtb testchannel1619-02
--2020-02-25 11:07:29--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:07:29--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:07:29--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:07:29--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 11:07:29.541 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 11:07:29.588 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 11:07:29.589 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 11:07:29.589 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 11:07:29.589 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 11:07:29.589 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 11:07:29.589 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 11:07:29.589 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 11:07:29.589 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 11:07:29.636 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 11:07:29.636 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 11:07:29.636 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 11:07:29.636 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 11:07:29.636 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 11:07:29.636 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 11:07:29.636 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 11:07:29.636 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 11:07:29.638 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 11:07:29.638 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 11:07:29.638 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 11:07:29.638 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 11:07:29.638 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 11:07:29.638 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 11:07:29.692 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:07:29.725 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel1619-02.pb -o orderer.example.net:7050 -c testchannel1619-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:07:29.789 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:07:29.791 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 11:07:29.792 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 11:07:29.792 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel1619-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel1619-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:07:30.113 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:07:30.122 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel1619-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel1619-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 11:07:32.459 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:07:32.461 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 11:07:32.462 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 11:07:32.463 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel1619-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T11:07:30Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel1619-02> exists and visible to vtb[m[m[m
Step 2_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel1619 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel1619 sberbank vtb
Step: 3_cli Test 'Add <vtb> to channel <testchannel1619> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel1619 sberbank vtb VERIFY: test-channel-add-org.sh testchannel1619 sberbank vtb
[1;36m
Add vtb to the testchannel1619 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel1619 vtb 7051 example.net[m[m[m
--2020-02-25 11:07:34--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:07:34--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:07:34--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel1619, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel1619.pb -o orderer.example.net:7050 -c testchannel1619 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:07:34.861 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:07:34.863 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 11:07:34.864 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 11:07:34.864 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel1619
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel1619 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:07:35.176 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:07:35.186 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel1619 ...[m[m[m
[34m2020-02-25 11:07:36.145 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:07:36.147 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 11:07:36.148 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 11:07:36.148 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel1619>.[m[m[m
Step 3_cli: exit code 0
NO_RED_OUTPUT=true ./cli/join-channel.sh testchannel1619 vtb ; ./verify/test-join-channel.sh testchannel1619 vtb
Step: 4_cli Test 'Join <vtb> to the <testchannel1619> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel1619 vtb VERIFY: test-join-channel.sh testchannel1619 vtb
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-join.sh testchannel1619[m[m[m
CORE_PEER_ADDRESS=peer0.sberbank.example.net:7051
CORE_PEER_LOCALMSPID=sberbank
CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/users/Admin@sberbank.example.net/msp
CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/ca.crt
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
DOMAIN=example.net
ENROLL_ID=admin
ENROLL_SECRET=adminpw
FABRIC_CFG_PATH=/etc/hyperledger/fabric
FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
GOPATH=/opt/gopath
GOROOT=/opt/go
HOME=/root
HOSTNAME=03e192b5318e
JAVA_HOME=/opt/java/openjdk
JAVA_TOOL_OPTIONS=-XX:+IgnoreUnrecognizedVMOptions -XX:+UseContainerSupport -XX:+IdleTuningCompactOnIdle -XX:+IdleTuningGcOnIdle
JAVA_VERSION=jdk8u222-b10_openj9-0.15.1
LANG=en_US.UTF-8
LANGUAGE=en_US:en
LC_ALL=en_US.UTF-8
ORDERER_BATCH_TIMEOUT=2
ORDERER_DOMAIN=example.net
ORDERER_GENERAL_LISTENPORT=7050
ORDERER_NAME=orderer
ORG=sberbank
PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/go/bin:/opt/gopath/bin
PEER0_PORT=7051
PWD=/etc/hyperledger
RAFT0_PORT=7050
RAFT1_PORT=7150
RAFT2_PORT=7250
SHLVL=2
SIGNATURE_HASH_FAMILY=SHA2
SYSTEM_CHANNEL_ID=orderer-system-channel
TERM=xterm
_=/usr/bin/env
--2020-02-25 11:07:38--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:07:38--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:07:38--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:07:38--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

Join sberbank to channel testchannel1619
Execute: channel fetch 0 crypto-config/configtx/testchannel1619.pb -o orderer.example.net:7050 -c testchannel1619 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:07:38.507 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:07:38.510 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 11:07:38.606 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:07:38.761 UTC [channelCmd] executeJoin -> INFO 002[0m Successfully submitted proposal to join channel
[1;34m
Verifing if the vtb has joined the <testchannel1619> channel...[m[m[m
[34m2020-02-25 11:07:39.548 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 4_cli: exit code 1
NO_RED_OUTPUT=true ./cli/join-channel.sh testchannel1619-02 sberbank ; ./verify/test-join-channel.sh testchannel1619-02 sberbank
Step: 5_cli Test 'Join <sberbank> to the <testchannel1619-02> chanel created by the <vtb> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel1619-02 sberbank VERIFY: test-join-channel.sh testchannel1619-02 sberbank
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-join.sh testchannel1619-02[m[m[m
CORE_PEER_ADDRESS=peer0.sberbank.example.net:7051
CORE_PEER_LOCALMSPID=sberbank
CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/users/Admin@sberbank.example.net/msp
CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/ca.crt
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
DOMAIN=example.net
ENROLL_ID=admin
ENROLL_SECRET=adminpw
FABRIC_CFG_PATH=/etc/hyperledger/fabric
FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
GOPATH=/opt/gopath
GOROOT=/opt/go
HOME=/root
HOSTNAME=dbc1a202a3d1
JAVA_HOME=/opt/java/openjdk
JAVA_TOOL_OPTIONS=-XX:+IgnoreUnrecognizedVMOptions -XX:+UseContainerSupport -XX:+IdleTuningCompactOnIdle -XX:+IdleTuningGcOnIdle
JAVA_VERSION=jdk8u222-b10_openj9-0.15.1
LANG=en_US.UTF-8
LANGUAGE=en_US:en
LC_ALL=en_US.UTF-8
ORDERER_BATCH_TIMEOUT=2
ORDERER_DOMAIN=example.net
ORDERER_GENERAL_LISTENPORT=7050
ORDERER_NAME=orderer
ORG=sberbank
PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/go/bin:/opt/gopath/bin
PEER0_PORT=7051
PWD=/etc/hyperledger
RAFT0_PORT=7050
RAFT1_PORT=7150
RAFT2_PORT=7250
SHLVL=2
SIGNATURE_HASH_FAMILY=SHA2
SYSTEM_CHANNEL_ID=orderer-system-channel
TERM=xterm
_=/usr/bin/env
--2020-02-25 11:08:38--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:08:38--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:08:38--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:08:38--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

Join sberbank to channel testchannel1619-02
Execute: channel fetch 0 crypto-config/configtx/testchannel1619-02.pb -o orderer.example.net:7050 -c testchannel1619-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:08:39.035 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:08:39.038 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
[34m2020-02-25 11:08:39.151 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:08:39.302 UTC [channelCmd] executeJoin -> INFO 002[0m Successfully submitted proposal to join channel
[1;34m
Verifing if the sberbank has joined the <testchannel1619-02> channel...[m[m[m
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel8478 sberbank ; ./verify/test-channel-exists.sh testchannel8478 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel8478 sberbank VERIFY: test-channel-exists.sh testchannel8478 sberbank
[1;36m
Creating the <testchannel8478> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel8478[m[m[m
example.net

Create channel sberbank testchannel8478
--2020-02-25 11:08:43--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:08:43--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:08:43--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:08:43--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 11:08:43.712 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 11:08:43.761 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 11:08:43.761 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 11:08:43.761 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 11:08:43.761 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 11:08:43.761 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 11:08:43.761 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 11:08:43.761 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 11:08:43.761 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 11:08:43.808 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 11:08:43.808 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 11:08:43.808 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 11:08:43.808 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 11:08:43.808 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 11:08:43.808 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 11:08:43.808 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 11:08:43.808 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 11:08:43.809 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 11:08:43.809 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 11:08:43.809 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 11:08:43.810 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 11:08:43.810 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 11:08:43.810 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 11:08:43.864 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:08:43.902 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel8478.pb -o orderer.example.net:7050 -c testchannel8478 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:08:43.980 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:08:43.984 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 11:08:43.987 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 11:08:43.987 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel8478
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel8478 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:08:44.294 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:08:44.304 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel8478> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel8478> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 11:08:46.617 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:08:46.621 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 11:08:46.622 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 11:08:46.622 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel8478",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T11:08:44Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel8478> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel8478-02 vtb ; ./verify/test-channel-exists.sh testchannel8478-02 vtb
Step: 2_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel8478-02 vtb VERIFY: test-channel-exists.sh testchannel8478-02 vtb
[1;36m
Creating the <testchannel8478-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel8478-02[m[m[m
example.net

Create channel vtb testchannel8478-02
--2020-02-25 11:08:48--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:08:48--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:08:48--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:08:48--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 11:08:48.895 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 11:08:48.942 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 11:08:48.942 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 11:08:48.942 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 11:08:48.942 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 11:08:48.942 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 11:08:48.942 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 11:08:48.942 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 11:08:48.942 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 11:08:49.018 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 11:08:49.018 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 11:08:49.018 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 11:08:49.018 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 11:08:49.018 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 11:08:49.018 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 11:08:49.018 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 11:08:49.018 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 11:08:49.019 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 11:08:49.019 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 11:08:49.019 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 11:08:49.019 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 11:08:49.020 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 11:08:49.020 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 11:08:49.079 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:08:49.113 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel8478-02.pb -o orderer.example.net:7050 -c testchannel8478-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:08:49.193 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:08:49.195 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 11:08:49.197 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 11:08:49.197 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel8478-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel8478-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:08:49.501 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:08:49.510 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel8478-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel8478-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 11:08:51.607 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:08:51.610 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 11:08:51.612 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 11:08:51.612 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel8478-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T11:08:49Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel8478-02> exists and visible to vtb[m[m[m
Step 2_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel8478 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel8478 sberbank vtb
Step: 3_cli Test 'Add <vtb> to channel <testchannel8478> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel8478 sberbank vtb VERIFY: test-channel-add-org.sh testchannel8478 sberbank vtb
[1;36m
Add vtb to the testchannel8478 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel8478 vtb 7051 example.net[m[m[m
--2020-02-25 11:08:53--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:08:53--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:08:53--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel8478, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel8478.pb -o orderer.example.net:7050 -c testchannel8478 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:08:54.079 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:08:54.090 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 11:08:54.091 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 11:08:54.091 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel8478
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel8478 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:08:54.397 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:08:54.407 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel8478 ...[m[m[m
[34m2020-02-25 11:08:55.379 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:08:55.382 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 11:08:55.383 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 11:08:55.383 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel8478>.[m[m[m
Step 3_cli: exit code 0
NO_RED_OUTPUT=true ./cli/join-channel.sh testchannel8478 vtb ; ./verify/test-join-channel.sh testchannel8478 vtb
Step: 4_cli Test 'Join <vtb> to the <testchannel8478> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel8478 vtb VERIFY: test-join-channel.sh testchannel8478 vtb
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-join.sh testchannel8478[m[m[m
CORE_PEER_ADDRESS=peer0.sberbank.example.net:7051
CORE_PEER_LOCALMSPID=sberbank
CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/users/Admin@sberbank.example.net/msp
CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/ca.crt
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
DOMAIN=example.net
ENROLL_ID=admin
ENROLL_SECRET=adminpw
FABRIC_CFG_PATH=/etc/hyperledger/fabric
FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
GOPATH=/opt/gopath
GOROOT=/opt/go
HOME=/root
HOSTNAME=3d7ce10d3e93
JAVA_HOME=/opt/java/openjdk
JAVA_TOOL_OPTIONS=-XX:+IgnoreUnrecognizedVMOptions -XX:+UseContainerSupport -XX:+IdleTuningCompactOnIdle -XX:+IdleTuningGcOnIdle
JAVA_VERSION=jdk8u222-b10_openj9-0.15.1
LANG=en_US.UTF-8
LANGUAGE=en_US:en
LC_ALL=en_US.UTF-8
ORDERER_BATCH_TIMEOUT=2
ORDERER_DOMAIN=example.net
ORDERER_GENERAL_LISTENPORT=7050
ORDERER_NAME=orderer
ORG=sberbank
PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/go/bin:/opt/gopath/bin
PEER0_PORT=7051
PWD=/etc/hyperledger
RAFT0_PORT=7050
RAFT1_PORT=7150
RAFT2_PORT=7250
SHLVL=2
SIGNATURE_HASH_FAMILY=SHA2
SYSTEM_CHANNEL_ID=orderer-system-channel
TERM=xterm
_=/usr/bin/env
--2020-02-25 11:08:57--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:08:57--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:08:57--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:08:57--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

Join sberbank to channel testchannel8478
Execute: channel fetch 0 crypto-config/configtx/testchannel8478.pb -o orderer.example.net:7050 -c testchannel8478 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:08:57.849 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:08:57.851 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 11:08:57.965 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:08:58.092 UTC [channelCmd] executeJoin -> INFO 002[0m Successfully submitted proposal to join channel
[1;34m
Verifing if the vtb has joined the <testchannel8478> channel...[m[m[m
[34m2020-02-25 11:08:59.049 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 4_cli: exit code 1
NO_RED_OUTPUT=true ./cli/join-channel.sh testchannel8478-02 sberbank ; ./verify/test-join-channel.sh testchannel8478-02 sberbank
Step: 5_cli Test 'Join <sberbank> to the <testchannel8478-02> chanel created by the <vtb> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel8478-02 sberbank VERIFY: test-join-channel.sh testchannel8478-02 sberbank
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-join.sh testchannel8478-02[m[m[m
CORE_PEER_ADDRESS=peer0.sberbank.example.net:7051
CORE_PEER_LOCALMSPID=sberbank
CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/users/Admin@sberbank.example.net/msp
CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/ca.crt
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
DOMAIN=example.net
ENROLL_ID=admin
ENROLL_SECRET=adminpw
FABRIC_CFG_PATH=/etc/hyperledger/fabric
FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
GOPATH=/opt/gopath
GOROOT=/opt/go
HOME=/root
HOSTNAME=1ef94656070c
JAVA_HOME=/opt/java/openjdk
JAVA_TOOL_OPTIONS=-XX:+IgnoreUnrecognizedVMOptions -XX:+UseContainerSupport -XX:+IdleTuningCompactOnIdle -XX:+IdleTuningGcOnIdle
JAVA_VERSION=jdk8u222-b10_openj9-0.15.1
LANG=en_US.UTF-8
LANGUAGE=en_US:en
LC_ALL=en_US.UTF-8
ORDERER_BATCH_TIMEOUT=2
ORDERER_DOMAIN=example.net
ORDERER_GENERAL_LISTENPORT=7050
ORDERER_NAME=orderer
ORG=sberbank
PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/go/bin:/opt/gopath/bin
PEER0_PORT=7051
PWD=/etc/hyperledger
RAFT0_PORT=7050
RAFT1_PORT=7150
RAFT2_PORT=7250
SHLVL=2
SIGNATURE_HASH_FAMILY=SHA2
SYSTEM_CHANNEL_ID=orderer-system-channel
TERM=xterm
_=/usr/bin/env
--2020-02-25 11:10:02--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:10:02--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:10:02--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 11:10:02--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

Join sberbank to channel testchannel8478-02
Execute: channel fetch 0 crypto-config/configtx/testchannel8478-02.pb -o orderer.example.net:7050 -c testchannel8478-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 11:10:02.852 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:10:02.854 UTC [cli.common] readBlock -> INFO 002[0m Got status: &{FORBIDDEN}
Error: can't read the block: &{FORBIDDEN}
[34m2020-02-25 11:10:02.970 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:10:03.127 UTC [channelCmd] executeJoin -> INFO 002[0m Successfully submitted proposal to join channel
[1;34m
Verifing if the sberbank has joined the <testchannel8478-02> channel...[m[m[m
[34m2020-02-25 11:10:04.070 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_cli: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel22840 sberbank ; ./verify/test-channel-exists.sh testchannel22840 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel22840 sberbank VERIFY: test-channel-exists.sh testchannel22840 sberbank
[1;36mCreating testchannel22840 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyOTMwMX0.Pjy0AUxbRNLLQHQZz3uSVCWGOOl4DKHB4r0wqPbe8EM
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel22840> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel22840> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 11:15:04.286 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:15:04.289 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 11:15:04.291 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 11:15:04.291 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel22840",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T11:15:02Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel22840> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel22840-02 vtb ; ./verify/test-channel-exists.sh testchannel22840-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel22840-02 vtb VERIFY: test-channel-exists.sh testchannel22840-02 vtb
[1;36mCreating testchannel22840-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyOTMwNH0.rVftA1huq9En9_30RgYuc6xIgp-hfROD0D44isV5sVo
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel22840-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel22840-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 11:15:07.828 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:15:07.830 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 11:15:07.831 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 11:15:07.831 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel22840-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T11:15:06Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel22840-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel22840 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel22840 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel22840> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel22840 sberbank vtb VERIFY: test-channel-add-org.sh testchannel22840 sberbank vtb
[1;36mAdd vtb to the testchannel22840 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel22840 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyOTMwOH0.WJcYGXKJ9VauLILsdPvySDo0w4J0Si5H_SCmW2LMaYM
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel22840 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel22840 ...[m[m[m
[34m2020-02-25 11:15:10.897 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:15:10.900 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 11:15:10.902 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 11:15:10.902 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel22840>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel22840 vtb ; ./verify/test-join-channel.sh testchannel22840 vtb
Step: 4_api Test 'Join <vtb> to the <testchannel22840> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel22840 vtb VERIFY: test-join-channel.sh testchannel22840 vtb
[1;36mJoining vtb.example.net to the testchannel22840 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel22840 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyOTMxMn0.b1kJL0heKjUbKKdUUAxZjZX4QgnC0pbleY5GLkgPWro
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel32762 sberbank ; ./verify/test-channel-exists.sh testchannel32762 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel32762 sberbank VERIFY: test-channel-exists.sh testchannel32762 sberbank
[1;36mCreating testchannel32762 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyOTUxMH0.YiMaYk_VJGecRm_KSffOuHRslJn8xs7V1miURY_R6WQ
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel32762> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel32762> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 11:18:33.505 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:18:33.510 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 11:18:33.513 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 11:18:33.513 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel32762",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T11:18:31Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel32762> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel32762-02 vtb ; ./verify/test-channel-exists.sh testchannel32762-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel32762-02 vtb VERIFY: test-channel-exists.sh testchannel32762-02 vtb
[1;36mCreating testchannel32762-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyOTUxNH0.DOZxjBM1dLs8Oe6Wk56Ek_ibmkCdUlxWrlOo8ohXt_w
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel32762-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel32762-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 11:18:36.931 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:18:36.933 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 11:18:36.935 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 11:18:36.936 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel32762-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T11:18:35Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel32762-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel32762 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel32762 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel32762> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel32762 sberbank vtb VERIFY: test-channel-add-org.sh testchannel32762 sberbank vtb
[1;36mAdd vtb to the testchannel32762 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel32762 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyOTUxN30.drM9Pd1q6JevoC-kaeLSQCJ1qmuHn-jUROwHiGNGDzk
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel32762 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel32762 ...[m[m[m
[34m2020-02-25 11:18:39.972 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:18:39.980 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 11:18:39.982 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 11:18:39.982 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel32762>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel32762 vtb
Step: 4_api Test 'Join <vtb> to the <testchannel32762> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel32762 vtb
[1;36mJoining vtb.example.net to the testchannel32762 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel32762 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyOTUyMH0.jydYmSPdRHrUXJpgVBaYYJ0cnnBkFMyRO2ZlEgqKm3k
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 4_api: exit code 1
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel32762-02 sberbank
Step: 5_api Test 'Join <sberbank> to the <testchannel32762-02> chanel created by the <vtb> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel32762-02 sberbank
[1;36mJoining sberbank.example.net to the testchannel32762-02 channel using API...[m[m[m
[1;36mJoining sberbank.example.net to the testchannel32762-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyOTY0MX0.JaIC6_IhdlyJoRsifkhW3Wt5C3Wg6BrKdodws9YUQc0
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
"Invalid results returned ::FORBIDDEN" 500
parse error: Unfinished string at EOF at line 1, column 8
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel9746 sberbank ; ./verify/test-channel-exists.sh testchannel9746 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel9746 sberbank VERIFY: test-channel-exists.sh testchannel9746 sberbank
[1;36mCreating testchannel9746 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyOTcyNH0.1ugTPdhCIwXllw5A3yXhvYk9izcmcebzhhsLM0UCAbc
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel9746> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel9746> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 11:22:07.006 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:22:07.013 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 11:22:07.015 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 11:22:07.015 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel9746",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T11:22:05Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel9746> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel9746-02 vtb ; ./verify/test-channel-exists.sh testchannel9746-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel9746-02 vtb VERIFY: test-channel-exists.sh testchannel9746-02 vtb
[1;36mCreating testchannel9746-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyOTcyN30.vuzy2vIA3V2TffBnKQoo7GrzINibg6zR0j3GXC0xPiA
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel9746-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel9746-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 11:22:10.379 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:22:10.381 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 11:22:10.383 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 11:22:10.384 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel9746-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T11:22:08Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel9746-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel9746 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel9746 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel9746> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel9746 sberbank vtb VERIFY: test-channel-add-org.sh testchannel9746 sberbank vtb
[1;36mAdd vtb to the testchannel9746 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel9746 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyOTczMH0.PNnK0Z95pNAH679dih52WJrbmgVoJ3ZwZQG0YENJk54
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel9746 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel9746 ...[m[m[m
[34m2020-02-25 11:22:13.738 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:22:13.744 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 11:22:13.747 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 11:22:13.747 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel9746>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel9746-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel9746-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel9746-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel9746-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel9746-02 vtb sberbank
[1;36mAdd sberbank to the testchannel9746-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel9746-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyOTczNH0.xUoW3LJ4MbC8fE-QQmikcb8IgmE1oOV__N85KajK9-0
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel9746-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel9746-02 ...[m[m[m
[34m2020-02-25 11:22:17.935 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 11:22:17.939 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 11:22:17.941 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 11:22:17.941 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel9746-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel9746 vtb ; ./verify/test-join-channel.sh testchannel9746 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel9746> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel9746 vtb VERIFY: test-join-channel.sh testchannel9746 vtb
[1;36mJoining vtb.example.net to the testchannel9746 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel9746 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyOTczOH0.R7_kG0nXhcrmK7EFTlIp5d6cgnz14CPdQPkgNcivF8g
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel9746> channel...[m[m[m
[34m2020-02-25 11:24:19.327 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_api: exit code 1
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel9746-02 sberbank ; ./verify/test-join-channel.sh testchannel9746-02 sberbank
Step: 6_api Test 'Join <sberbank> to the <testchannel9746-02> chanel created by the <vtb> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel9746-02 sberbank VERIFY: test-join-channel.sh testchannel9746-02 sberbank
[1;36mJoining sberbank.example.net to the testchannel9746-02 channel using API...[m[m[m
[1;36mJoining sberbank.example.net to the testchannel9746-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYyOTk2Mn0.TuHoZ-qDCW822bqkBzFCa5NtH-ihf0eA1hcQ517zUE0
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the sberbank has joined the <testchannel9746-02> channel...[m[m[m
[34m2020-02-25 11:28:02.745 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 6_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel27534 sberbank ; ./verify/test-channel-exists.sh testchannel27534 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel27534 sberbank VERIFY: test-channel-exists.sh testchannel27534 sberbank
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzMzkwMn0.G3OiX-iq0bOkN-FX5UsD4u-cHbl6Q9clwq7y--HMYoo
Step 1_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel27534-02 vtb ; ./verify/test-channel-exists.sh testchannel27534-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel27534-02 vtb VERIFY: test-channel-exists.sh testchannel27534-02 vtb
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzMzkwMn0.dtxU9RNMCHtVaE0N4aSMSH1ZOJ2Bqa9WhjtklqH-_wQ
Step 2_api: exit code 1
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel27534 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel27534 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel27534> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel27534 sberbank vtb VERIFY: test-channel-add-org.sh testchannel27534 sberbank vtb
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzMzkwM30.UsbhFOscNbQVy_xz5HRM3k0OMNMxhNLqZm59nUGmnDQ
Step 3_api: exit code 1
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel27534-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel27534-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel27534-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel27534-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel27534-02 vtb sberbank
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzMzkwM30.wWDys8o2-kIcALAo2xCG78ZVmAsH16DsT-SQyMM4J_Q
Step 4_api: exit code 1
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel27534 vtb ; ./verify/test-join-channel.sh testchannel27534 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel27534> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel27534 vtb VERIFY: test-join-channel.sh testchannel27534 vtb
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzMzkwM30.wWDys8o2-kIcALAo2xCG78ZVmAsH16DsT-SQyMM4J_Q
Step 5_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel22752 sberbank ; ./verify/test-channel-exists.sh testchannel22752 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel22752 sberbank VERIFY: test-channel-exists.sh testchannel22752 sberbank
[1;36mCreating testchannel22752 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzMzkxN30.e2bsoYZ3Nnb3VjgljmS1mQO_smheBh_v78jcdZs_Qpc
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel22752> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel22752> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 12:31:59.807 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:31:59.814 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:31:59.815 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:31:59.816 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel22752",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:31:58Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel22752> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel22752-02 vtb ; ./verify/test-channel-exists.sh testchannel22752-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel22752-02 vtb VERIFY: test-channel-exists.sh testchannel22752-02 vtb
[1;36mCreating testchannel22752-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzMzkyMX0.7fdHowhRPiNgVNVp5LrnMeNdDvnXFMjOY6W1NWR96dI
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel22752-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel22752-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 12:32:04.348 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:32:04.359 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:32:04.364 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:32:04.367 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel22752-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:32:02Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel22752-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel22752 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel22752 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel22752> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel22752 sberbank vtb VERIFY: test-channel-add-org.sh testchannel22752 sberbank vtb
[1;36mAdd vtb to the testchannel22752 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel22752 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzMzkyNH0.QvGfMrEp0cixIOO0lsoOJ_wxwe_CEIIce1dnWRopWUg
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel22752 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel22752 ...[m[m[m
[34m2020-02-25 12:32:07.182 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:32:07.185 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:32:07.186 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:32:07.187 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel22752>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel22752-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel22752-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel22752-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel22752-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel22752-02 vtb sberbank
[1;36mAdd sberbank to the testchannel22752-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel22752-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzMzkyN30.zEHxKwEnLETT_1Nf_C8jbDpaW0p-RlEaLh1dqzXWIy0
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel22752-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel22752-02 ...[m[m[m
[34m2020-02-25 12:32:11.124 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:32:11.129 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:32:11.135 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:32:11.135 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel22752-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel22752 vtb ; ./verify/test-join-channel.sh testchannel22752 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel22752> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel22752 vtb VERIFY: test-join-channel.sh testchannel22752 vtb
[1;36mJoining vtb.example.net to the testchannel22752 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel22752 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzMzkzMn0.OZ5BNaCaAsokucXc1CWHF2a6Ji1oFoLlG4zClbIUEL8
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel22752> channel...[m[m[m
[34m2020-02-25 12:34:13.032 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel12710 sberbank ; ./verify/test-channel-exists.sh testchannel12710 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel12710 sberbank VERIFY: test-channel-exists.sh testchannel12710 sberbank
[1;36mCreating testchannel12710 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDEyNH0.kGZrC3feBCy7z1fGZd_a6F9q1wlYjKNCuiDKq6HchW8
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel12710> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel12710> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 12:35:26.565 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:35:26.567 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:35:26.569 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:35:26.569 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel12710",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:35:25Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel12710> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel12710-02 vtb ; ./verify/test-channel-exists.sh testchannel12710-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel12710-02 vtb VERIFY: test-channel-exists.sh testchannel12710-02 vtb
[1;36mCreating testchannel12710-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDEyN30.aVw244d-NIKIEHDyyFp4RnxpUYtk_Rlf1B29wXlCvfM
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel12710-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel12710-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 12:35:29.714 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:35:29.718 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:35:29.721 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:35:29.721 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel12710-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:35:28Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel12710-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel12710 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel12710 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel12710> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel12710 sberbank vtb VERIFY: test-channel-add-org.sh testchannel12710 sberbank vtb
[1;36mAdd vtb to the testchannel12710 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel12710 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDEzMH0.kDk8w4_jJlUz3QZjI0vCFBBGcgqRD7Imm4kcsNasx8M
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel12710 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel12710 ...[m[m[m
[34m2020-02-25 12:35:34.134 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:35:34.140 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:35:34.143 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:35:34.143 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel12710>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel12710-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel12710-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel12710-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel12710-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel12710-02 vtb sberbank
[1;36mAdd sberbank to the testchannel12710-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel12710-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDEzNH0.pbL-6bjWnoRCKkZNSWD8teyY1-6IhKmEtB5NJqrKeIk
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel12710-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel12710-02 ...[m[m[m
[34m2020-02-25 12:35:37.541 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:35:37.544 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:35:37.545 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:35:37.546 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel12710-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel12710 vtb ; ./verify/test-join-channel.sh testchannel12710 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel12710> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel12710 vtb VERIFY: test-join-channel.sh testchannel12710 vtb
[1;36mJoining vtb.example.net to the testchannel12710 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel12710 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDEzOH0.p0UG0eUdn6XkhIiab0b8b_BjdYFwUj8OvcuOR6C0l1k
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel12710> channel...[m[m[m
[34m2020-02-25 12:37:38.811 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized







[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel2607 sberbank ; ./verify/test-channel-exists.sh testchannel2607 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel2607 sberbank VERIFY: test-channel-exists.sh testchannel2607 sberbank
[1;36mCreating testchannel2607 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDMzOH0.FmpYZaMpzYzD5cvLHDAt6R8WF5Lu70J2QeFHUUrEJb4
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel2607> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel2607> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 12:39:00.581 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:39:00.584 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:39:00.587 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:39:00.587 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel2607",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:38:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel2607> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel2607-02 vtb ; ./verify/test-channel-exists.sh testchannel2607-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel2607-02 vtb VERIFY: test-channel-exists.sh testchannel2607-02 vtb
[1;36mCreating testchannel2607-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDM0MX0.qQYgXZQMmRfmk3ni1rcE1NkAgrSqBOiShMKWJEe7FJU
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel2607-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel2607-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 12:39:04.711 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:39:04.714 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:39:04.715 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:39:04.715 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel2607-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:39:03Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel2607-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel2607 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel2607 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel2607> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel2607 sberbank vtb VERIFY: test-channel-add-org.sh testchannel2607 sberbank vtb
[1;36mAdd vtb to the testchannel2607 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel2607 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDM0NX0.6FRHnsmWo9e16e11-rSWbzODtZNlvpz-88AGUgtowVY
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel2607 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel2607 ...[m[m[m
[34m2020-02-25 12:39:07.662 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:39:07.667 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:39:07.668 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:39:07.669 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel2607>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel2607-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel2607-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel2607-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel2607-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel2607-02 vtb sberbank
[1;36mAdd sberbank to the testchannel2607-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel2607-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDM0OH0.qgWiEgbpzq2mJieW8uQB1-09nJ_7qmMJ7YoYLAp_onw
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel2607-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel2607-02 ...[m[m[m
[34m2020-02-25 12:39:11.384 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:39:11.389 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:39:11.390 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:39:11.391 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel2607-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel2607 vtb ; ./verify/test-join-channel.sh testchannel2607 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel2607> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel2607 vtb VERIFY: test-join-channel.sh testchannel2607 vtb
[1;36mJoining vtb.example.net to the testchannel2607 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel2607 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDM1Mn0.JIfi550jsRPoEXXHqoYwE97bOGkjGkoll4calEIDVh0
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel2607> channel...[m[m[m
[34m2020-02-25 12:41:13.103 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
+-
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel12880 sberbank ; ./verify/test-channel-exists.sh testchannel12880 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel12880 sberbank VERIFY: test-channel-exists.sh testchannel12880 sberbank
[1;36mCreating testchannel12880 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDUzMn0.tzL9OpWGZ3TPigQLAgB2TlfvUm2rLDjOqsPhI204dB4
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel12880> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel12880> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 12:42:14.372 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:42:14.375 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:42:14.378 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:42:14.378 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel12880",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:42:12Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel12880> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel12880-02 vtb ; ./verify/test-channel-exists.sh testchannel12880-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel12880-02 vtb VERIFY: test-channel-exists.sh testchannel12880-02 vtb
[1;36mCreating testchannel12880-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDUzNH0.C3npbLb3FL2JvlRuT2ltMT_q7C35hYYpjzqq_glfDz8
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel12880-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel12880-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 12:42:17.676 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:42:17.679 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:42:17.681 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:42:17.681 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel12880-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:42:16Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel12880-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel12880 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel12880 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel12880> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel12880 sberbank vtb VERIFY: test-channel-add-org.sh testchannel12880 sberbank vtb
[1;36mAdd vtb to the testchannel12880 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel12880 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDUzOH0.3kdde-oes2d7EJBuoBkW1LqrcmK8_waYXAZJMJApJRY
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel12880 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel12880 ...[m[m[m
[34m2020-02-25 12:42:20.317 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:42:20.321 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:42:20.322 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:42:20.323 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel12880>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel12880-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel12880-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel12880-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel12880-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel12880-02 vtb sberbank
[1;36mAdd sberbank to the testchannel12880-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel12880-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDU0MX0.Q7iAb1Mn0nA2LH4Oq4YaeSdZVVZeoQqbJOcVfxuC2G4
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel12880-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel12880-02 ...[m[m[m
[34m2020-02-25 12:42:25.442 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:42:25.446 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:42:25.449 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:42:25.449 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel12880-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel12880 vtb ; ./verify/test-join-channel.sh testchannel12880 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel12880> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel12880 vtb VERIFY: test-join-channel.sh testchannel12880 vtb
[1;36mJoining vtb.example.net to the testchannel12880 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel12880 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDU0Nn0.hN83ygl3Lyydhv27SlrY5EJ3ZSAlY5EQ5SVyC-NpVa4
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel12880> channel...[m[m[m
[34m2020-02-25 12:44:26.835 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:44:26.835 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized Channels peers has joined: common testchannel22847-02 testchannel22840 testchannel12880 testchannel12710-02 testchannel15838 testchannel7121 testchannel24218 testchannel20589 testchannel22840-02 testchannel32762 testchannel28091-02 testchannel3346-02 testchannel23932-02 testchannel23932 testchannel13552-02 testchannel26389-02 testchannel32762-02 testchannel9746 testchannel2607 testchannel314-02 testchannel9267-02 testchannel24218-02 testchannel19176-02 testchannel15838-02 testchannel12880-02 testchannel7868-02 testchannel20589-02 testchannel925 testchannel9746-02 testchannel22752-02 testchannel22752 testchannel20345-02 testchannel7121-02 testchannel925-02 testchannel12710 testchannel2607-02
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel12880 sberbank ; ./verify/test-channel-exists.sh testchannel12880 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel12880 sberbank VERIFY: test-channel-exists.sh testchannel12880 sberbank
[1;36mCreating testchannel12880 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDkyMn0.P7z79syQ9LDp_y1jjhV2_1yoo4qYtu2tyUepfLb8mVM
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"status":500,"payload":{"type":"Buffer","data":[]},"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}},"isProposalResponse":true}] 200
[1;32mOK: Channel <testchannel12880> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel12880> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 12:48:44.364 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:48:44.367 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:48:44.369 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:48:44.369 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel12880",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:42:19Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel12880> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel12880-02 vtb ; ./verify/test-channel-exists.sh testchannel12880-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel12880-02 vtb VERIFY: test-channel-exists.sh testchannel12880-02 vtb
[1;36mCreating testchannel12880-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDkyNH0.hFHSTkIE5nCCm8tW6ZVIaAg3hx-jRB7KI11jQL6A0fI
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"status":500,"payload":{"type":"Buffer","data":[]},"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}},"isProposalResponse":true}] 200
[1;32mOK: Channel <testchannel12880-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel12880-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 12:48:47.560 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:48:47.563 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:48:47.565 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:48:47.567 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel12880-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:42:24Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel12880-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel12880 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel12880 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel12880> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel12880 sberbank vtb VERIFY: test-channel-add-org.sh testchannel12880 sberbank vtb
[1;36mAdd vtb to the testchannel12880 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel12880 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDkyOH0.Ps4Hnbtj5vKk8Gg_CnhW79RWKwcMCskDhA2a02wYFPI
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel12880 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel12880 ...[m[m[m
[34m2020-02-25 12:48:50.078 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:48:50.082 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:48:50.083 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:48:50.084 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel12880>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel12880-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel12880-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel12880-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel12880-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel12880-02 vtb sberbank
[1;36mAdd sberbank to the testchannel12880-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel12880-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDkzMH0.thIGNzqsnT4s-GwU5VFmMPYdjxRFRfmR0b5uOeAhnNs
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel12880-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel12880-02 ...[m[m[m
[34m2020-02-25 12:48:53.182 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:48:53.184 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:48:53.185 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:48:53.186 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel12880-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel12880 vtb ; ./verify/test-join-channel.sh testchannel12880 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel12880> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel12880 vtb VERIFY: test-join-channel.sh testchannel12880 vtb
[1;36mJoining vtb.example.net to the testchannel12880 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel12880 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDkzM30.PaRBn4uY8t92T_37cNycyPgYuxSyOSyOIMXdRuwtiqM
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"status":500,"payload":{"type":"Buffer","data":[]},"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}},"isProposalResponse":true}] 200
[1;32mOK:  vtb joined to testchannel12880 channel [m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel12880> channel...[m[m[m
[34m2020-02-25 12:48:54.647 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:48:54.647 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized Channels peers has joined: testchannel7121-02 testchannel925-02 testchannel12710 testchannel2607-02 testchannel20345-02 testchannel22847-02 testchannel22840 testchannel12880 common testchannel7121 testchannel24218 testchannel20589 testchannel22840-02 testchannel32762 testchannel12710-02 testchannel15838 testchannel3346-02 testchannel23932-02 testchannel23932 testchannel28091-02 testchannel26389-02 testchannel32762-02 testchannel9746 testchannel2607 testchannel13552-02 testchannel9267-02 testchannel24218-02 testchannel314-02 testchannel15838-02 testchannel12880-02 testchannel19176-02 testchannel20589-02 testchannel925 testchannel9746-02 testchannel22752-02 testchannel22752 testchannel7868-02
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel16091 sberbank ; ./verify/test-channel-exists.sh testchannel16091 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel16091 sberbank VERIFY: test-channel-exists.sh testchannel16091 sberbank
[1;36mCreating testchannel16091 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNDk5OX0.VO1MvKigZegDMmeUC24cTXR7ZF0DAy6rg7zO9yDugzE
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel16091> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel16091> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 12:50:01.724 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:50:01.728 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:50:01.730 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:50:01.730 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel16091",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:50:00Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel16091> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel16091-02 vtb ; ./verify/test-channel-exists.sh testchannel16091-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel16091-02 vtb VERIFY: test-channel-exists.sh testchannel16091-02 vtb
[1;36mCreating testchannel16091-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTAwMn0.-JEAKZcxBwiX3oRwDPJzIBKlD0zRAzTQCtJN-VaPgF0
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel16091-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel16091-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 12:50:06.106 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:50:06.113 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:50:06.114 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:50:06.114 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel16091-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:50:04Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel16091-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel16091 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel16091 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel16091> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel16091 sberbank vtb VERIFY: test-channel-add-org.sh testchannel16091 sberbank vtb
[1;36mAdd vtb to the testchannel16091 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel16091 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTAwNn0.DNJQIOTQPke_1ujWmCaD0uUHwioR9k9NdiBZyaxQ5QY
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel16091 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel16091 ...[m[m[m
[34m2020-02-25 12:50:09.163 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:50:09.166 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:50:09.172 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:50:09.173 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel16091>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel16091-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel16091-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel16091-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel16091-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel16091-02 vtb sberbank
[1;36mAdd sberbank to the testchannel16091-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel16091-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTAwOX0.vEV5u88aWY_Wwd2VXp2bSqcA8612A0WBFTlaTVXIovU
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel16091-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel16091-02 ...[m[m[m
[34m2020-02-25 12:50:13.111 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:50:13.113 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:50:13.114 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:50:13.114 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel16091-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel16091 vtb ; ./verify/test-join-channel.sh testchannel16091 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel16091> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel16091 vtb VERIFY: test-join-channel.sh testchannel16091 vtb
[1;36mJoining vtb.example.net to the testchannel16091 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel16091 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTAxNH0.JN5HGqluiwDyNIO8nXsjglKEl3cuX2nkULHyU9xj1p4
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel16091> channel...[m[m[m
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel4292 sberbank ; ./verify/test-channel-exists.sh testchannel4292 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel4292 sberbank VERIFY: test-channel-exists.sh testchannel4292 sberbank
[1;36mCreating testchannel4292 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTE4M30.V5Wb-9ZpQynnc1SF0OC0Ix2e7-OZaU7nX09oMXGWeGQ
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel4292> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel4292> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 12:53:05.803 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:53:05.806 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:53:05.811 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:53:05.811 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel4292",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:53:04Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel4292> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel4292-02 vtb ; ./verify/test-channel-exists.sh testchannel4292-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel4292-02 vtb VERIFY: test-channel-exists.sh testchannel4292-02 vtb
[1;36mCreating testchannel4292-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTE4Nn0.5i51KhiMqRNEx80YVQZO9jgbAPSYnTdUdToX7H-996o
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel4292-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel4292-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 12:53:08.941 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:53:08.951 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:53:08.954 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:53:08.954 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel4292-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:53:07Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel4292-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel4292 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel4292 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel4292> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel4292 sberbank vtb VERIFY: test-channel-add-org.sh testchannel4292 sberbank vtb
[1;36mAdd vtb to the testchannel4292 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel4292 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTE4OX0.JoEXkA8kszTFMWsGDihe54fBcgT9FtXZhs5UngDgFIU
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel4292 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel4292 ...[m[m[m
[34m2020-02-25 12:53:11.600 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:53:11.602 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:53:11.604 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:53:11.604 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel4292>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel4292-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel4292-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel4292-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel4292-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel4292-02 vtb sberbank
[1;36mAdd sberbank to the testchannel4292-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel4292-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTE5Mn0.xlufOqO96yQDkTYUFjDf1540qZgg2HR1-vCXm4qsOJY
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel4292-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel4292-02 ...[m[m[m
[34m2020-02-25 12:53:16.870 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:53:16.873 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:53:16.874 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:53:16.874 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel4292-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel4292 vtb ; ./verify/test-join-channel.sh testchannel4292 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel4292> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel4292 vtb VERIFY: test-join-channel.sh testchannel4292 vtb
[1;36mJoining vtb.example.net to the testchannel4292 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel4292 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTE5N30.jr4vy875SNhOyF0kGWx9gFp7mCDgd6iNCHC_OaXzLfc
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel4292> channel...[m[m[m
[34m2020-02-25 12:55:18.211 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:55:18.211 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized Channels peers has joined: testchannel9267-02 testchannel24218-02 testchannel314-02 testchannel15838-02 testchannel12880-02 testchannel16091 testchannel19176-02 testchannel20589-02 testchannel925 testchannel9746-02 testchannel22752-02 testchannel22752 testchannel4292 testchannel7868-02 testchannel7121-02 testchannel925-02 testchannel12710 testchannel2607-02 testchannel20345-02 testchannel22847-02 testchannel22840 testchannel12880 common testchannel7121 testchannel24218 testchannel20589 testchannel22840-02 testchannel32762 testchannel12710-02 testchannel16091-02 testchannel15838 testchannel3346-02 testchannel23932-02 testchannel23932 testchannel4292-02 testchannel28091-02 testchannel26389-02 testchannel32762-02 testchannel9746 testchannel2607 testchannel13552-02
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel26797 sberbank ; ./verify/test-channel-exists.sh testchannel26797 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel26797 sberbank VERIFY: test-channel-exists.sh testchannel26797 sberbank
[1;36mCreating testchannel26797 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTQwNH0.pedirrXQGzTCeiq_yLsoM7cRJGx74S11zTWdCyS1IFs
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel26797> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel26797> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 12:56:46.846 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:56:46.853 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:56:46.855 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:56:46.855 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel26797",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:56:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel26797> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel26797-02 vtb ; ./verify/test-channel-exists.sh testchannel26797-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel26797-02 vtb VERIFY: test-channel-exists.sh testchannel26797-02 vtb
[1;36mCreating testchannel26797-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTQwN30.SOZJ-K2qoHYxx4iVkzcpdRnGEvGP-Y5aDBfF9jxvOSA
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel26797-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel26797-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 12:56:50.790 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:56:50.796 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:56:50.797 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:56:50.797 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel26797-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:56:49Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel26797-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel26797 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel26797 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel26797> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel26797 sberbank vtb VERIFY: test-channel-add-org.sh testchannel26797 sberbank vtb
[1;36mAdd vtb to the testchannel26797 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel26797 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTQxMX0.8-rmYuptJDcTrPemX1vOYbFsxb81hRVss2D4SzqGSF0
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel26797 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel26797 ...[m[m[m
[34m2020-02-25 12:56:55.110 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:56:55.114 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:56:55.120 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:56:55.120 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel26797>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel26797-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel26797-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel26797-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel26797-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel26797-02 vtb sberbank
[1;36mAdd sberbank to the testchannel26797-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel26797-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTQxNn0.fneXxcMZOqfWhK5ItweYBZa6A7tyGveetdlCYcRf_zU
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel26797-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel26797-02 ...[m[m[m
[34m2020-02-25 12:57:00.078 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:57:00.082 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:57:00.084 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:57:00.084 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel26797-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel26797 vtb ; ./verify/test-join-channel.sh testchannel26797 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel26797> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel26797 vtb VERIFY: test-join-channel.sh testchannel26797 vtb
[1;36mJoining vtb.example.net to the testchannel26797 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel26797 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTQyMH0.gLR_0OhxwzzN_a_iz42dWkk1QYaYSmZx0xqazCTBjWY
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel26797> channel...[m[m[m
[34m2020-02-25 12:59:01.438 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
testchannel26797
testchannel26797-02
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel17891 sberbank ; ./verify/test-channel-exists.sh testchannel17891 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel17891 sberbank VERIFY: test-channel-exists.sh testchannel17891 sberbank
[1;36mCreating testchannel17891 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTU2MX0.dcjT2FMW5R2mV5L-mU9aAgbs8iekzOZH3GjA5b78sZc
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel17891> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel17891> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 12:59:25.065 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:59:25.079 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:59:25.083 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:59:25.083 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel17891",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:59:22Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel17891> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel17891-02 vtb ; ./verify/test-channel-exists.sh testchannel17891-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel17891-02 vtb VERIFY: test-channel-exists.sh testchannel17891-02 vtb
[1;36mCreating testchannel17891-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTU2NX0.0BhSPMScsXXOT5DmVL0gsKZyGMv0nxtPnLrVGF2HbXs
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel17891-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel17891-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 12:59:28.764 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:59:28.768 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 12:59:28.769 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 12:59:28.769 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel17891-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T12:59:27Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel17891-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel17891 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel17891 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel17891> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel17891 sberbank vtb VERIFY: test-channel-add-org.sh testchannel17891 sberbank vtb
[1;36mAdd vtb to the testchannel17891 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel17891 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTU2OX0.1lvy5ABiPeEfpYr_qzIDXcKh5Id0Wcq22HTN31QGzxY
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel17891 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel17891 ...[m[m[m
[34m2020-02-25 12:59:31.879 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:59:31.888 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:59:31.891 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:59:31.891 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel17891>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel17891-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel17891-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel17891-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel17891-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel17891-02 vtb sberbank
[1;36mAdd sberbank to the testchannel17891-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel17891-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTU3Mn0.aFU7s6Fn3L44Oge0O3aNEcvWudoGtoRcgaYP1SqrHhs
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel17891-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel17891-02 ...[m[m[m
[34m2020-02-25 12:59:38.574 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 12:59:38.577 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 12:59:38.584 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 12:59:38.585 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel17891-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel17891 vtb ; ./verify/test-join-channel.sh testchannel17891 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel17891> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel17891 vtb VERIFY: test-join-channel.sh testchannel17891 vtb
[1;36mJoining vtb.example.net to the testchannel17891 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel17891 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNTU3OX0.oH5luPQby5wrxS-krfy5vxa_80OVAG0NUBZf-vyFi-c
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel17891> channel...[m[m[m
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel18423 sberbank ; ./verify/test-channel-exists.sh testchannel18423 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel18423 sberbank VERIFY: test-channel-exists.sh testchannel18423 sberbank
[1;36mCreating testchannel18423 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNjIwM30.041Ly-d5gQZMR1MOnZiftThsPkcSC-7MtaZs5JwbMSg
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel18423> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel18423> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 13:10:06.362 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:10:06.366 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 13:10:06.368 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 13:10:06.368 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel18423",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T13:10:04Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel18423> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel18423-02 vtb ; ./verify/test-channel-exists.sh testchannel18423-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel18423-02 vtb VERIFY: test-channel-exists.sh testchannel18423-02 vtb
[1;36mCreating testchannel18423-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNjIwNn0.CknmO-6Gmn811EHMxgzBHpXrqTJv_MVXW58EkTm1KVs
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel18423-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel18423-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 13:10:09.620 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:10:09.622 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 13:10:09.624 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 13:10:09.624 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel18423-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T13:10:08Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel18423-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel18423 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel18423 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel18423> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel18423 sberbank vtb VERIFY: test-channel-add-org.sh testchannel18423 sberbank vtb
[1;36mAdd vtb to the testchannel18423 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel18423 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNjIxMH0.T4yqJ96DmhdTzNL63pXyD5rprJIfs22aLpLZeTxw00c
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel18423 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel18423 ...[m[m[m
[34m2020-02-25 13:10:12.273 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:10:12.277 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:10:12.279 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:10:12.279 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel18423>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel18423-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel18423-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel18423-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel18423-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel18423-02 vtb sberbank
[1;36mAdd sberbank to the testchannel18423-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel18423-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNjIxMn0.04F9uZoq2iGZ0wd38MxmqoKO1hCG2chJKZCtlGK-Lgs
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel18423-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel18423-02 ...[m[m[m
[34m2020-02-25 13:10:16.645 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:10:16.648 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:10:16.651 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:10:16.651 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel18423-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel18423 vtb ; ./verify/test-join-channel.sh testchannel18423 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel18423> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel18423 vtb VERIFY: test-join-channel.sh testchannel18423 vtb
[1;36mJoining vtb.example.net to the testchannel18423 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel18423 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNjIxOH0.ndsqnGQLlU50mSn3U0nHfBszLyKtZMRqzg0z6sNm-NU
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel18423> channel...[m[m[m
[34m2020-02-25 13:12:18.546 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
testchannel18423
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_api: exit code 1
[34m2020-02-25 13:15:13.453 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:16:12.329 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:16:26.362 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:17:10.235 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:17:45.574 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel14877 sberbank ; ./verify/test-channel-exists.sh testchannel14877 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel14877 sberbank VERIFY: test-channel-exists.sh testchannel14877 sberbank
[1;36mCreating testchannel14877 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNjc4NH0.osbbM69wHd-kCp4rfSb706-yer208_skmekdBEuO0mg
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel14877> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel14877> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 13:19:47.272 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:19:47.275 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 13:19:47.283 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 13:19:47.285 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel14877",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T13:19:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel14877> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel14877-02 vtb ; ./verify/test-channel-exists.sh testchannel14877-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel14877-02 vtb VERIFY: test-channel-exists.sh testchannel14877-02 vtb
[1;36mCreating testchannel14877-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNjc4N30.4gH5peJrbXHhtBha7VnCt65Ql2zUba5MJTqS6tAHGjg
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel14877-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel14877-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 13:19:50.388 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:19:50.391 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 13:19:50.393 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 13:19:50.393 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel14877-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T13:19:49Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel14877-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel14877 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel14877 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel14877> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel14877 sberbank vtb VERIFY: test-channel-add-org.sh testchannel14877 sberbank vtb
[1;36mAdd vtb to the testchannel14877 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel14877 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNjc5MH0.nn13qKaE5Dnu8oGH2UZZSWVlshx6TkDlRv9iSqM4FLM
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel14877 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel14877 ...[m[m[m
[34m2020-02-25 13:19:53.132 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:19:53.135 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:19:53.137 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:19:53.137 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel14877>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel14877-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel14877-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel14877-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel14877-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel14877-02 vtb sberbank
[1;36mAdd sberbank to the testchannel14877-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel14877-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNjc5M30.aY3BZf_au3Hy1wy3yjg5SSb1x_tbkpcnV7E2o3Rnn5Y
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel14877-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel14877-02 ...[m[m[m
[34m2020-02-25 13:19:57.266 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:19:57.275 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:19:57.281 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:19:57.281 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel14877-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel14877 vtb ; ./verify/test-join-channel.sh testchannel14877 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel14877> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel14877 vtb VERIFY: test-join-channel.sh testchannel14877 vtb
[1;36mJoining vtb.example.net to the testchannel14877 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel14877 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNjc5OX0.zpKjRVIhqfLT-U6t3CwJM3DHSgVioXFdJSDXfkhE-po
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel14877> channel...[m[m[m
[34m2020-02-25 13:21:59.726 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
testchannel14877
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel22328 sberbank ; ./verify/test-channel-exists.sh testchannel22328 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel22328 sberbank VERIFY: test-channel-exists.sh testchannel22328 sberbank
[1;36mCreating testchannel22328 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNzEwMX0.q_wUjmZIkf79Ra7Y-TH_M1re2LA3s9kVM5XMQR4E7vc
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel22328> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel22328> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 13:25:03.506 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:25:03.513 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 13:25:03.516 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 13:25:03.516 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel22328",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T13:25:02Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel22328> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel22328-02 vtb ; ./verify/test-channel-exists.sh testchannel22328-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel22328-02 vtb VERIFY: test-channel-exists.sh testchannel22328-02 vtb
[1;36mCreating testchannel22328-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNzEwNH0.7RdYampktzqQ4CRVXoenJL1XXyMkIUz2BX6rz5yyYm4
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel22328-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel22328-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 13:25:06.947 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:25:06.950 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 13:25:06.951 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 13:25:06.951 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel22328-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T13:25:05Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel22328-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel22328 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel22328 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel22328> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel22328 sberbank vtb VERIFY: test-channel-add-org.sh testchannel22328 sberbank vtb
[1;36mAdd vtb to the testchannel22328 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel22328 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNzEwOH0.TeX4ZkayVeqP2gGDNKkH3ht6b2Zc291yOhmsjlV-oLg
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel22328 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel22328 ...[m[m[m
[34m2020-02-25 13:25:11.336 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:25:11.344 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:25:11.346 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:25:11.346 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel22328>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel22328-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel22328-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel22328-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel22328-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel22328-02 vtb sberbank
[1;36mAdd sberbank to the testchannel22328-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel22328-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNzExMn0.q1d9bCUx3zCPu_PSFUn5OXtdzHDf2O34E-Fwdy2j_lI
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel22328-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel22328-02 ...[m[m[m
[34m2020-02-25 13:25:14.750 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:25:14.753 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:25:14.754 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:25:14.754 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel22328-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel22328 vtb ; ./verify/test-join-channel.sh testchannel22328 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel22328> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel22328 vtb VERIFY: test-join-channel.sh testchannel22328 vtb
[1;36mJoining vtb.example.net to the testchannel22328 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel22328 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNzExNX0.9-Fhx1oQU-oOooIqbGXSybbnu5JnjB2h6dKV9PzkbI4
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel22328> channel...[m[m[m
[34m2020-02-25 13:27:15.948 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
testchannel22328
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_api: exit code 1
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel5167 sberbank ; ./verify/test-channel-exists.sh testchannel5167 sberbank
Step: 1_api Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel5167 sberbank VERIFY: test-channel-exists.sh testchannel5167 sberbank
[1;36mCreating testchannel5167 channel in sberbank.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNzMyMH0.3gmiyVGc39bKYpk9q2Zz32z_mEIVkdZIemUgf-DdWzc
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.sberbank.example.net:7051","name":"peer0.sberbank.example.net:7051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.sberbank.example.net:7051","grpc.default_authority":"peer0.sberbank.example.net:7051"}}}] 200
[1;32mOK: Channel <testchannel5167> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel5167> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 13:28:42.390 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:28:42.392 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 13:28:42.394 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 13:28:42.394 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel5167",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T13:28:41Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel5167> exists and visible to sberbank[m[m[m
Step 1_api: exit code 0
NO_RED_OUTPUT=false ./api/create-channel.sh testchannel5167-02 vtb ; ./verify/test-channel-exists.sh testchannel5167-02 vtb
Step: 2_api Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel5167-02 vtb VERIFY: test-channel-exists.sh testchannel5167-02 vtb
[1;36mCreating testchannel5167-02 channel in vtb.example.net using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNzMyMn0.fW8nT8G4mZ2pRErUM4RsdRVnfeawrDLCvDbdUKpqK1o
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
[{"version":0,"timestamp":null,"response":{"status":200,"message":"","payload":{"type":"Buffer","data":[]}},"payload":{"type":"Buffer","data":[]},"endorsement":null,"peer":{"url":"grpcs://peer0.vtb.example.net:8051","name":"peer0.vtb.example.net:8051","options":{"grpc.max_receive_message_length":-1,"grpc.max_send_message_length":-1,"grpc.keepalive_time_ms":120000,"grpc.http2.min_time_between_pings_ms":120000,"grpc.keepalive_timeout_ms":20000,"grpc.http2.max_pings_without_data":0,"grpc.keepalive_permit_without_calls":1,"grpc.ssl_target_name_override":"peer0.vtb.example.net:8051","grpc.default_authority":"peer0.vtb.example.net:8051"}}}] 200
[1;32mOK: Channel <testchannel5167-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel5167-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 13:28:45.735 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:28:45.737 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 13:28:45.744 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 13:28:45.745 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testchannel5167-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T13:28:44Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel5167-02> exists and visible to vtb[m[m[m
Step 2_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel5167 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel5167 sberbank vtb
Step: 3_api Test 'Add <vtb> to channel <testchannel5167> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel5167 sberbank vtb VERIFY: test-channel-add-org.sh testchannel5167 sberbank vtb
[1;36mAdd vtb to the testchannel5167 channel using API...[m[m[m
[1;36mAdd vtb to the testchannel5167 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNzMyNn0.7NivSVSP5-tTqpobDVKXaNdPcfmNqIsOjrz6dQv_p4k
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
200
[1;32mOK: Organization vtb added to testchannel5167 channel[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel5167 ...[m[m[m
[34m2020-02-25 13:28:50.507 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:28:50.516 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:28:50.519 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:28:50.519 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel5167>.[m[m[m
Step 3_api: exit code 0
NO_RED_OUTPUT=true ./api/add-org-to-channel.sh testchannel5167-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel5167-02 vtb sberbank
Step: 4_api Test 'Add <sberbank> to channel <testchannel5167-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel5167-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel5167-02 vtb sberbank
[1;36mAdd sberbank to the testchannel5167-02 channel using API...[m[m[m
[1;36mAdd sberbank to the testchannel5167-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNzMzMX0.Nk_tQgFBzj-Le91tIUubltlWAlbS0Ei0K1FB2lw5drA
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
200
[1;32mOK: Organization sberbank added to testchannel5167-02 channel[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel5167-02 ...[m[m[m
[34m2020-02-25 13:28:53.862 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:28:53.864 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:28:53.865 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:28:53.865 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel5167-02>.[m[m[m
Step 4_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel5167 vtb ; ./verify/test-join-channel.sh testchannel5167 vtb
Step: 5_api Test 'Join <vtb> to the <testchannel5167> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel5167 vtb VERIFY: test-join-channel.sh testchannel5167 vtb
[1;36mJoining vtb.example.net to the testchannel5167 channel using API...[m[m[m
[1;36mJoining vtb.example.net to the testchannel5167 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4001
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNzMzNH0.ZCRnAlx5GcykU8ZTGcj5rCzMFzvX2SSatRyPDxeJ97k
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4001
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel5167> channel...[m[m[m
[34m2020-02-25 13:30:55.150 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
testchannel5167
[1;32mOK: The vtb has joined the <testchannel5167> channel[m[m[m
Step 5_api: exit code 0
NO_RED_OUTPUT=true ./api/join-channel.sh testchannel5167-02 sberbank ; ./verify/test-join-channel.sh testchannel5167-02 sberbank
Step: 6_api Test 'Join <sberbank> to the <testchannel5167-02> chanel created by the <vtb> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel5167-02 sberbank VERIFY: test-join-channel.sh testchannel5167-02 sberbank
[1;36mJoining sberbank.example.net to the testchannel5167-02 channel using API...[m[m[m
[1;36mJoining sberbank.example.net to the testchannel5167-02 channel using API...[m[m[m
queryContainerNetworkSettings returns: 4000
Got JWT: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU4MjYzNzQ1NX0.pu9pLwYJ6DGgfBw08rvdfiEvI1wHgOYKyrHL2tUBtD8
[1;32mOK: JWT token obtained.[m[m[m
queryContainerNetworkSettings returns: 4000
000
jq: error (at <stdin>:0): Cannot index number with number
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the sberbank has joined the <testchannel5167-02> channel...[m[m[m
[34m2020-02-25 13:32:56.241 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
testchannel5167-02
[1;32mOK: The sberbank has joined the <testchannel5167-02> channel[m[m[m
Step 6_api: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel21542 sberbank ; ./verify/test-channel-exists.sh testchannel21542 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel21542 sberbank VERIFY: test-channel-exists.sh testchannel21542 sberbank
[1;36m
Creating the <testchannel21542> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel21542[m[m[m
example.net

Create channel sberbank testchannel21542
--2020-02-25 13:37:47--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:37:47--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:37:47--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:37:47--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 13:37:47.569 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 13:37:47.635 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 13:37:47.635 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 13:37:47.636 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 13:37:47.636 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 13:37:47.636 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 13:37:47.636 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 13:37:47.636 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 13:37:47.636 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 13:37:47.697 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 13:37:47.697 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 13:37:47.697 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 13:37:47.697 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 13:37:47.697 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 13:37:47.697 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 13:37:47.697 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 13:37:47.697 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 13:37:47.698 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 13:37:47.698 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 13:37:47.698 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 13:37:47.698 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 13:37:47.699 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 13:37:47.699 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 13:37:47.774 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:37:47.813 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel21542.pb -o orderer.example.net:7050 -c testchannel21542 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:37:47.998 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:37:48.001 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 13:37:48.002 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 13:37:48.002 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel21542
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel21542 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:37:48.420 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:37:48.432 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel21542> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel21542> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 13:37:50.531 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:37:50.533 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:37:50.534 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:37:50.534 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel21542",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T13:37:48Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel21542> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel21542-02 vtb ; ./verify/test-channel-exists.sh testchannel21542-02 vtb
Step: 2_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel21542-02 vtb VERIFY: test-channel-exists.sh testchannel21542-02 vtb
[1;36m
Creating the <testchannel21542-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel21542-02[m[m[m
example.net

Create channel vtb testchannel21542-02
--2020-02-25 13:37:52--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:37:52--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:37:52--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:37:52--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 13:37:52.719 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 13:37:52.765 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 13:37:52.765 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 13:37:52.765 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 13:37:52.765 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 13:37:52.765 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 13:37:52.765 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 13:37:52.765 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 13:37:52.765 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 13:37:52.812 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 13:37:52.812 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 13:37:52.812 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 13:37:52.812 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 13:37:52.812 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 13:37:52.812 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 13:37:52.812 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 13:37:52.812 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 13:37:52.813 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 13:37:52.813 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 13:37:52.813 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 13:37:52.813 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 13:37:52.813 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 13:37:52.814 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 13:37:52.866 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:37:52.903 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel21542-02.pb -o orderer.example.net:7050 -c testchannel21542-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:37:53.004 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:37:53.006 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 13:37:53.007 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 13:37:53.007 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel21542-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel21542-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:37:53.296 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:37:53.304 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel21542-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel21542-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 13:37:55.390 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:37:55.393 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:37:55.394 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:37:55.394 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel21542-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T13:37:53Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel21542-02> exists and visible to vtb[m[m[m
Step 2_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel21542 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel21542 sberbank vtb
Step: 3_cli Test 'Add <vtb> to channel <testchannel21542> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel21542 sberbank vtb VERIFY: test-channel-add-org.sh testchannel21542 sberbank vtb
[1;36m
Add vtb to the testchannel21542 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel21542 vtb 7051 example.net[m[m[m
--2020-02-25 13:37:57--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:37:57--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:37:57--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel21542, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel21542.pb -o orderer.example.net:7050 -c testchannel21542 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:37:57.577 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:37:57.580 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:37:57.582 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:37:57.582 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel21542
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel21542 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:37:57.903 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:37:57.914 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel21542 ...[m[m[m
[34m2020-02-25 13:37:59.070 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:37:59.072 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 13:37:59.074 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 13:37:59.074 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel21542>.[m[m[m
Step 3_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel21542-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel21542-02 vtb sberbank
Step: 4_cli Test 'Add <sberbank> to channel <testchannel21542-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel21542-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel21542-02 vtb sberbank
[1;36m
Add sberbank to the testchannel21542-02 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel21542-02 sberbank 7051 example.net[m[m[m
--2020-02-25 13:38:01--  http://www.sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:38:01--  http://www.sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:38:01--  http://www.sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'sberbank' to channel testchannel21542-02, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel21542-02.pb -o orderer.example.net:7050 -c testchannel21542-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:38:01.358 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:38:01.360 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:38:01.361 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:38:01.361 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from sberbank for channel testchannel21542-02
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel21542-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:38:01.651 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:38:01.664 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel21542-02 ...[m[m[m
[34m2020-02-25 13:38:02.573 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:38:02.575 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 13:38:02.577 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 13:38:02.577 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel21542-02>.[m[m[m
Step 4_cli: exit code 0
NO_RED_OUTPUT=true ./cli/join-channel.sh testchannel21542 vtb ; ./verify/test-join-channel.sh testchannel21542 vtb
Step: 5_cli Test 'Join <vtb> to the <testchannel21542> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel21542 vtb VERIFY: test-join-channel.sh testchannel21542 vtb
[1;36m
Joining  vtb to the testchannel21542 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-join.sh testchannel21542[m[m[m
CORE_PEER_ADDRESS=peer0.vtb.example.net:7051
CORE_PEER_LOCALMSPID=vtb
CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto-config/peerOrganizations/vtb.example.net/users/Admin@vtb.example.net/msp
CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/vtb.example.net/peers/peer0.vtb.example.net/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto-config/peerOrganizations/vtb.example.net/peers/peer0.vtb.example.net/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/vtb.example.net/peers/peer0.vtb.example.net/tls/ca.crt
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
DOMAIN=example.net
ENROLL_ID=admin
ENROLL_SECRET=adminpw
FABRIC_CFG_PATH=/etc/hyperledger/fabric
FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
GOPATH=/opt/gopath
GOROOT=/opt/go
HOME=/root
HOSTNAME=82335d0028d5
JAVA_HOME=/opt/java/openjdk
JAVA_TOOL_OPTIONS=-XX:+IgnoreUnrecognizedVMOptions -XX:+UseContainerSupport -XX:+IdleTuningCompactOnIdle -XX:+IdleTuningGcOnIdle
JAVA_VERSION=jdk8u222-b10_openj9-0.15.1
LANG=en_US.UTF-8
LANGUAGE=en_US:en
LC_ALL=en_US.UTF-8
ORDERER_BATCH_TIMEOUT=2
ORDERER_DOMAIN=example.net
ORDERER_GENERAL_LISTENPORT=7050
ORDERER_NAME=orderer
ORG=vtb
PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/go/bin:/opt/gopath/bin
PEER0_PORT=7051
PWD=/etc/hyperledger
RAFT0_PORT=7050
RAFT1_PORT=7150
RAFT2_PORT=7250
SHLVL=2
SIGNATURE_HASH_FAMILY=SHA2
SYSTEM_CHANNEL_ID=orderer-system-channel
TERM=xterm
_=/usr/bin/env
--2020-02-25 13:38:04--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:38:04--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:38:04--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:38:04--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

Join vtb to channel testchannel21542
Execute: channel fetch 0 crypto-config/configtx/testchannel21542.pb -o orderer.example.net:7050 -c testchannel21542 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:38:04.717 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:38:04.719 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Error: error getting endorser client for channel: endorser client failed to connect to peer0.vtb.example.net:7051: failed to create new connection: connection error: desc = "transport: error while dialing: dial tcp 172.19.0.12:7051: connect: connection refused"
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel21542> channel...[m[m[m
[34m2020-02-25 13:38:05.706 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_cli: exit code 1
NO_RED_OUTPUT=true ./cli/join-channel.sh testchannel21542-02 sberbank ; ./verify/test-join-channel.sh testchannel21542-02 sberbank
Step: 6_cli Test 'Join <sberbank> to the <testchannel21542-02> chanel created by the <vtb> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel21542-02 sberbank VERIFY: test-join-channel.sh testchannel21542-02 sberbank
[1;36m
Joining  sberbank to the testchannel21542-02 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-join.sh testchannel21542-02[m[m[m
CORE_PEER_ADDRESS=peer0.sberbank.example.net:7051
CORE_PEER_LOCALMSPID=sberbank
CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/users/Admin@sberbank.example.net/msp
CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/ca.crt
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
DOMAIN=example.net
ENROLL_ID=admin
ENROLL_SECRET=adminpw
FABRIC_CFG_PATH=/etc/hyperledger/fabric
FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
GOPATH=/opt/gopath
GOROOT=/opt/go
HOME=/root
HOSTNAME=ea8596a7cd6d
JAVA_HOME=/opt/java/openjdk
JAVA_TOOL_OPTIONS=-XX:+IgnoreUnrecognizedVMOptions -XX:+UseContainerSupport -XX:+IdleTuningCompactOnIdle -XX:+IdleTuningGcOnIdle
JAVA_VERSION=jdk8u222-b10_openj9-0.15.1
LANG=en_US.UTF-8
LANGUAGE=en_US:en
LC_ALL=en_US.UTF-8
ORDERER_BATCH_TIMEOUT=2
ORDERER_DOMAIN=example.net
ORDERER_GENERAL_LISTENPORT=7050
ORDERER_NAME=orderer
ORG=sberbank
PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/go/bin:/opt/gopath/bin
PEER0_PORT=7051
PWD=/etc/hyperledger
RAFT0_PORT=7050
RAFT1_PORT=7150
RAFT2_PORT=7250
SHLVL=2
SIGNATURE_HASH_FAMILY=SHA2
SYSTEM_CHANNEL_ID=orderer-system-channel
TERM=xterm
_=/usr/bin/env
--2020-02-25 13:40:55--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:40:55--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:40:55--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:40:55--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

Join sberbank to channel testchannel21542-02
Execute: channel fetch 0 crypto-config/configtx/testchannel21542-02.pb -o orderer.example.net:7050 -c testchannel21542-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:40:55.314 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:40:55.316 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 13:40:55.371 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:40:55.592 UTC [channelCmd] executeJoin -> INFO 002[0m Successfully submitted proposal to join channel
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the sberbank has joined the <testchannel21542-02> channel...[m[m[m
[34m2020-02-25 13:40:56.546 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
testchannel21542-02
[1;32mOK: The sberbank has joined the <testchannel21542-02> channel[m[m[m
Step 6_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel9810 sberbank ; ./verify/test-channel-exists.sh testchannel9810 sberbank
Step: 1_cli Test 'Create Channel in ORG1'
RUNTEST: create-channel.sh testchannel9810 sberbank VERIFY: test-channel-exists.sh testchannel9810 sberbank
[1;36m
Creating the <testchannel9810> channel for sberbank.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel9810[m[m[m
example.net

Create channel sberbank testchannel9810
--2020-02-25 13:41:42--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:41:42--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:41:42--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:41:42--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 13:41:42.983 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 13:41:43.044 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 13:41:43.044 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 13:41:43.044 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 13:41:43.044 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 13:41:43.044 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 13:41:43.044 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 13:41:43.044 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 13:41:43.044 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 13:41:43.091 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 13:41:43.091 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 13:41:43.091 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 13:41:43.091 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 13:41:43.091 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 13:41:43.091 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 13:41:43.091 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 13:41:43.091 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 13:41:43.091 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[33m2020-02-25 13:41:43.092 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 13:41:43.092 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 13:41:43.092 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 13:41:43.092 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group sberbank in configtx.yaml
[34m2020-02-25 13:41:43.092 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 13:41:43.153 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:41:43.193 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel9810.pb -o orderer.example.net:7050 -c testchannel9810 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:41:43.270 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:41:43.272 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 13:41:43.273 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 13:41:43.273 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from sberbank for channel testchannel9810
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel9810 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:41:43.554 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:41:43.563 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel9810> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel9810> channel exists in sberbank.example.net...[m[m[m
[34m2020-02-25 13:41:45.660 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:41:45.662 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:41:45.663 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:41:45.663 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel9810",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T13:41:43Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel9810> exists and visible to sberbank[m[m[m
Step 1_cli: exit code 0
NO_RED_OUTPUT=false ./cli/create-channel.sh testchannel9810-02 vtb ; ./verify/test-channel-exists.sh testchannel9810-02 vtb
Step: 2_cli Test 'Create another channel in ORG2
RUNTEST: create-channel.sh testchannel9810-02 vtb VERIFY: test-channel-exists.sh testchannel9810-02 vtb
[1;36m
Creating the <testchannel9810-02> channel for vtb.example.net...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-create.sh testchannel9810-02[m[m[m
example.net

Create channel vtb testchannel9810-02
--2020-02-25 13:41:47--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:41:47--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:41:47--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:41:47--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

[34m2020-02-25 13:41:47.947 UTC [common.tools.configtxgen] main -> INFO 001[0m Loading configuration
[34m2020-02-25 13:41:48.027 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 13:41:48.027 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 13:41:48.027 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 004[0m Orderer.BatchTimeout unset, setting to 2s
[34m2020-02-25 13:41:48.027 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 005[0m Orderer.BatchSize.MaxMessageCount unset, setting to 500
[34m2020-02-25 13:41:48.027 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 006[0m Orderer.BatchSize.AbsoluteMaxBytes unset, setting to 10485760
[34m2020-02-25 13:41:48.027 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 007[0m Orderer.BatchSize.PreferredMaxBytes unset, setting to 2097152
[34m2020-02-25 13:41:48.027 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 008[0m orderer type: solo
[34m2020-02-25 13:41:48.027 UTC [common.tools.configtxgen.localconfig] Load -> INFO 009[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 13:41:48.090 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00a[0m Orderer.OrdererType unset, setting to solo
[34m2020-02-25 13:41:48.090 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00b[0m Orderer.Addresses unset, setting to [127.0.0.1:7050]
[34m2020-02-25 13:41:48.090 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 00c[0m orderer type: solo
[34m2020-02-25 13:41:48.090 UTC [common.tools.configtxgen.localconfig] LoadTopLevel -> INFO 00d[0m Loaded configuration: /etc/hyperledger/crypto-config/configtx.yaml
[34m2020-02-25 13:41:48.090 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 00e[0m Generating new channel configtx
[33m2020-02-25 13:41:48.090 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 00f[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 13:41:48.091 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 010[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 13:41:48.091 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 011[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 13:41:48.092 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 012[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[33m2020-02-25 13:41:48.092 UTC [common.tools.configtxgen.encoder] NewChannelGroup -> WARN 013[0m Default policy emission is deprecated, please include policy specifications for the channel group in configtx.yaml
[33m2020-02-25 13:41:48.092 UTC [common.tools.configtxgen.encoder] NewOrdererGroup -> WARN 014[0m Default policy emission is deprecated, please include policy specifications for the orderer group in configtx.yaml
[33m2020-02-25 13:41:48.092 UTC [common.tools.configtxgen.encoder] NewOrdererOrgGroup -> WARN 015[0m Default policy emission is deprecated, please include policy specifications for the orderer org group Orderer in configtx.yaml
[33m2020-02-25 13:41:48.092 UTC [common.tools.configtxgen.encoder] NewApplicationOrgGroup -> WARN 016[0m Default policy emission is deprecated, please include policy specifications for the application org group vtb in configtx.yaml
[34m2020-02-25 13:41:48.093 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 017[0m Writing new channel tx
[34m2020-02-25 13:41:48.150 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:41:48.189 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Execute: channel fetch config crypto-config/configtx/testchannel9810-02.pb -o orderer.example.net:7050 -c testchannel9810-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:41:48.393 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:41:48.395 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 13:41:48.396 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-02-25 13:41:48.396 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
>> Prepare config update from vtb for channel testchannel9810-02
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel9810-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:41:48.782 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:41:48.792 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;32mOK: Channel <testchannel9810-02> creation run sucsessfuly.[m[m[m
[1;34m
Verifing if the <testchannel9810-02> channel exists in vtb.example.net...[m[m[m
[34m2020-02-25 13:41:50.941 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:41:50.943 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:41:50.944 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:41:50.944 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"channel_id": "testchannel9810-02",
"epoch": "0",
"extension": null,
"timestamp": "2020-02-25T13:41:48Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <testchannel9810-02> exists and visible to vtb[m[m[m
Step 2_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel9810 sberbank vtb ; ./verify/test-channel-add-org.sh testchannel9810 sberbank vtb
Step: 3_cli Test 'Add <vtb> to channel <testchannel9810> created by the <sberbank> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel9810 sberbank vtb VERIFY: test-channel-add-org.sh testchannel9810 sberbank vtb
[1;36m
Add vtb to the testchannel9810 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel9810 vtb 7051 example.net[m[m[m
--2020-02-25 13:41:53--  http://www.vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/admincerts/Admin@vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:41:53--  http://www.vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/cacerts/ca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:41:53--  http://www.vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem
Resolving www.vtb.example.net (www.vtb.example.net)... 172.19.0.15
Connecting to www.vtb.example.net (www.vtb.example.net)|172.19.0.15|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/vtb.example.net/msp/tlscacerts/tlsca.vtb.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'vtb' to channel testchannel9810, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel9810.pb -o orderer.example.net:7050 -c testchannel9810 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:41:53.110 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:41:53.112 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:41:53.113 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:41:53.113 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from vtb for channel testchannel9810
>> vtb is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel9810 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:41:53.396 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:41:53.406 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <vtb> added to testchannel9810 ...[m[m[m
[34m2020-02-25 13:41:54.326 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:41:54.328 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 13:41:54.329 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 13:41:54.329 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRQjZyU0k1UjZGR1JxRnhzYmk5S3dvekFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQmEKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFkblJpTG1WNFlXMXdiR1V1Ym1WME1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVmWWFBT3Q4aEY0NHdOVXFNRFQ0S3BZTTJnMFFWWXgyRlBpZGIKNVVvbnhtVkMwamlnSFZVNHlZdEgvSTk5SkFSOHpnckNMdVNoUXBQT012a2RVdEpQNTZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWd5NysyZm9zN2tYcm1ISkRDCno0M2V2MVFCTzBQdWE3ajZNMTZZTkxLaDI5WXdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdBcmRtV3FqMHVOL2YKTEYxcXd2Z1dBWXUvWFA0aHh2eXVreWkxMzhFQldSMENJQmdnN1N5bmJkVFR6ak9obkFlZHRvRm5LU1hKbW5VcwpYNlV1cFhKRENyU0sKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "vtb",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNUVENDQWZPZ0F3SUJBZ0lRZEFUUHBibHlsaWFSVzhXS0l2cDJjVEFLQmdncWhrak9QUVFEQWpCeE1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVlNQllHQTFVRUNoTVBkblJpTG1WNFlXMXdiR1V1Ym1WME1Sc3dHUVlEVlFRREV4SmpZUzUyCmRHSXVaWGhoYlhCc1pTNXVaWFF3SGhjTk1qQXdNakl4TVRjd01EQXdXaGNOTXpBd01qRTRNVGN3TURBd1dqQngKTVFzd0NRWURWUVFHRXdKVlV6RVRNQkVHQTFVRUNCTUtRMkZzYVdadmNtNXBZVEVXTUJRR0ExVUVCeE1OVTJGdQpJRVp5WVc1amFYTmpiekVZTUJZR0ExVUVDaE1QZG5SaUxtVjRZVzF3YkdVdWJtVjBNUnN3R1FZRFZRUURFeEpqCllTNTJkR0l1WlhoaGJYQnNaUzV1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSSzd1MEMKTjcxWkEybUkrNk1ZWTB6WjdjdmhvSnI2U0s4RVF6YXBhRjE5aGQ4MnphR3ZvTDhoN2ZnZWt6YkY5bXN6cnBwTgpmM2UvZFJXYTEzeHpJRysvbzIwd2F6QU9CZ05WSFE4QkFmOEVCQU1DQWFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCCkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3S1FZRFZSME9CQ0lFSU11L3RuNkwKTzVGNjVoeVF3cytOM3I5VUFUdEQ3bXU0K2pOZW1EU3lvZHZXTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSVFDTQowbGJLRHdSQzR6VWdLN2pEUWlHRlFERUZIbWsvODQyeitOaThBcStOVGdJZ1JwSTFJaE9LZU1YcDRaMEJIZ05DCkZQSEt3UkwvMkxSMlhQWkY2Ty9DUXZzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVekNDQWZxZ0F3SUJBZ0lSQVArYWpsdWtYUWY2djgveXFCaTZtVmN3Q2dZSUtvWkl6ajBFQXdJd2RERUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHREFXQmdOVkJBb1REM1owWWk1bGVHRnRjR3hsTG01bGRERWVNQndHQTFVRUF4TVZkR3h6ClkyRXVkblJpTG1WNFlXMXdiR1V1Ym1WME1CNFhEVEl3TURJeU1URTNNREF3TUZvWERUTXdNREl4T0RFM01EQXcKTUZvd2RERUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFeEZqQVVCZ05WQkFjVApEVk5oYmlCR2NtRnVZMmx6WTI4eEdEQVdCZ05WQkFvVEQzWjBZaTVsZUdGdGNHeGxMbTVsZERFZU1Cd0dBMVVFCkF4TVZkR3h6WTJFdWRuUmlMbVY0WVcxd2JHVXVibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKUWdBRVNHUFdJRjNkS3lTTHI4cGc0Zk5vcnFxUGpYUVhma0QyVkpxRFlHWmRCaVRpdGYyVGd4cWtiQ0JacSt2Mgp5N2pKcHo4WStOMVVzT2w3c0RtcC9rbDFpcU50TUdzd0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQ2tHQTFVZERnUWkKQkNEWTJFajM4MHdWUGFXdHlYRk9GaTJiQTZKZnFKeXY5RW0yNFBFM281VGh2VEFLQmdncWhrak9QUVFEQWdOSApBREJFQWlBS1VkbHB1WElKTGpraFhmRzh5NGFzNG5kLzhlQmF6UWRPU3JiamJrYWlPUUlnQ2h2WVhWVC9NeHMzCitrNVhodkRzaEVtN3lPRkpEMkZpQ2RnMFgvYStJa0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
]
},
"type": 0
}
vtb
[1;32mOK: Organization <vtb> is in the channel <testchannel9810>.[m[m[m
Step 3_cli: exit code 0
NO_RED_OUTPUT=true ./cli/add-org-to-channel.sh testchannel9810-02 vtb sberbank ; ./verify/test-channel-add-org.sh testchannel9810-02 vtb sberbank
Step: 4_cli Test 'Add <sberbank> to channel <testchannel9810-02> created by the <vtb> org'
RUNTESTNOERRPRINT: add-org-to-channel.sh testchannel9810-02 vtb sberbank VERIFY: test-channel-add-org.sh testchannel9810-02 vtb sberbank
[1;36m
Add sberbank to the testchannel9810-02 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-add-org.sh testchannel9810-02 sberbank 7051 example.net[m[m[m
--2020-02-25 13:41:56--  http://www.sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/admincerts/Admin@sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:41:56--  http://www.sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/cacerts/ca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:41:56--  http://www.sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem
Resolving www.sberbank.example.net (www.sberbank.example.net)... 172.19.0.7
Connecting to www.sberbank.example.net (www.sberbank.example.net)|172.19.0.7|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/peerOrganizations/sberbank.example.net/msp/tlscacerts/tlsca.sberbank.example.net-cert.pem’ not modified on server. Omitting download.

>> Add new org 'sberbank' to channel testchannel9810-02, anchor peer at port 7051
Execute: channel fetch config crypto-config/configtx/testchannel9810-02.pb -o orderer.example.net:7050 -c testchannel9810-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:41:56.607 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:41:56.609 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-02-25 13:41:56.610 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-02-25 13:41:56.610 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
>> Prepare config update from sberbank for channel testchannel9810-02
>> sberbank is sending channel update update_in_envelope.pb with  by 
Execute: peer channel update -f update_in_envelope.pb -c testchannel9810-02 -o orderer.example.net:7050 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:41:56.896 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:41:56.908 UTC [channelCmd] update -> INFO 002[0m Successfully submitted channel update
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the <sberbank> added to testchannel9810-02 ...[m[m[m
[34m2020-02-25 13:41:57.940 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:41:57.945 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-02-25 13:41:57.946 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-02-25 13:41:57.946 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNKakNDQWN5Z0F3SUJBZ0lSQUlBZ3gxd3VidmxsSlJNdDFmNzNINjh3Q2dZSUtvWkl6ajBFQXdJd2V6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNBd0hnWURWUVFECkV4ZGpZUzV6WW1WeVltRnVheTVsZUdGdGNHeGxMbTVsZERBZUZ3MHlNREF5TWpFeE5qVTVNREJhRncwek1EQXkKTVRneE5qVTVNREJhTUY4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZdwpGQVlEVlFRSEV3MVRZVzRnUm5KaGJtTnBjMk52TVNNd0lRWURWUVFEREJwQlpHMXBia0J6WW1WeVltRnVheTVsCmVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOMGlmbE45Qkt4eWpldnIKSmZvSG9heVBmb1QrZU5lLzVpMm9GWEFlbzJMVVVPNGlobmpoUzc0VS91a00wdzVOQkxIaWpjUzVMTlBaWHdzbQowZ0lTR1ptalRUQkxNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUNzR0ExVWRJd1FrCk1DS0FJQ2xQaHl5YnRTUmhtUFovajB5bkNvd2xMaDRMeThjQzI2UDVYcytEcFhGak1Bb0dDQ3FHU000OUJBTUMKQTBnQU1FVUNJUURqK1B3MExCcEo1aCtnNGg2TXVIZndyanNXL0p1dElzVVU2aUdiNG8zYWtRSWdSSUxFa1Z3SApsVWdVdXprcGZPTlJmbnF6KzNZc1p4M3RwYWg0SGIvNWtWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "sberbank",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNZRENDQWdlZ0F3SUJBZ0lRV0hKSm50dVdaYzN4MHZZRm96aEtTVEFLQmdncWhrak9QUVFEQWpCN01Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RWRNQnNHQTFVRUNoTVVjMkpsY21KaGJtc3VaWGhoYlhCc1pTNXVaWFF4SURBZUJnTlZCQU1UCkYyTmhMbk5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTUI0WERUSXdNREl5TVRFMk5Ua3dNRm9YRFRNd01ESXgKT0RFMk5Ua3dNRm93ZXpFTE1Ba0dBMVVFQmhNQ1ZWTXhFekFSQmdOVkJBZ1RDa05oYkdsbWIzSnVhV0V4RmpBVQpCZ05WQkFjVERWTmhiaUJHY21GdVkybHpZMjh4SFRBYkJnTlZCQW9URkhOaVpYSmlZVzVyTG1WNFlXMXdiR1V1CmJtVjBNU0F3SGdZRFZRUURFeGRqWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQlpNQk1HQnlxR1NNNDkKQWdFR0NDcUdTTTQ5QXdFSEEwSUFCSXVMc1VSWEtwZWhoRUtEYndpaHU1ZHgxRjIrelR1cUMwOHhrdnBTUFZGTApCUjhYUGlRY0RpelFGQTJYdTJQQnFuYWxTbEQ1cCtlTERwYVpzbnBWN0tTamJUQnJNQTRHQTFVZER3RUIvd1FFCkF3SUJwakFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QXBCZ05WSFE0RUlnUWdLVStITEp1MUpHR1k5bitQVEtjS2pDVXVIZ3ZMeHdMYm8vbGV6NE9sY1dNdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdIYlJ2WkVkMWMxRWphbXNjZzJ3K0hlY0VmQzNtNnh0UUdpU2Nwd3NDCjM4d0NJQ2JyQ0FMemo5Tm9NSUhETFRvLzJDRWtTMXdtUEpsNWZlZ0Z5bW1hUFd2bgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNaekNDQWc2Z0F3SUJBZ0lSQU1NTHRySVQ2ZU9jTDZSN1JtTlZJUmN3Q2dZSUtvWkl6ajBFQXdJd2ZqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhIVEFiQmdOVkJBb1RGSE5pWlhKaVlXNXJMbVY0WVcxd2JHVXVibVYwTVNNd0lRWURWUVFECkV4cDBiSE5qWVM1elltVnlZbUZ1YXk1bGVHRnRjR3hsTG01bGREQWVGdzB5TURBeU1qRXhOalU1TURCYUZ3MHoKTURBeU1UZ3hOalU1TURCYU1INHhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saApNUll3RkFZRFZRUUhFdzFUWVc0Z1JuSmhibU5wYzJOdk1SMHdHd1lEVlFRS0V4UnpZbVZ5WW1GdWF5NWxlR0Z0CmNHeGxMbTVsZERFak1DRUdBMVVFQXhNYWRHeHpZMkV1YzJKbGNtSmhibXN1WlhoaGJYQnNaUzV1WlhRd1dUQVQKQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUnh2am5kaVVEc3YzR2FsS1dYTm9Mbkc4WEtSRm9tY3k3RwpMVmFVMmZDMlhnems3dnByMnpxcXdFQUdyVVdaUE1rNnN4QUhiY043R3RTaldibkVZOEx0bzIwd2F6QU9CZ05WCkhROEJBZjhFQkFNQ0FhWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0tRWURWUjBPQkNJRUlBYk8rb0ZxWjF4Q250UE0wTHovZWtIcGpHaytXaTBKNys0MwpzVVBpQ0pEb01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lEMUQ4SXoxSmNGdlhsMEZNZlZOTnRZMm5Ma2hsWmh3ClNmU0pDN0l4MUgxUUFpQmhKYktEc2QwWHlKUWJYUXVFNXpLNWZPQXBMbFdLN1NudGFteWFmOVJ1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
sberbank
[1;32mOK: Organization <sberbank> is in the channel <testchannel9810-02>.[m[m[m
Step 4_cli: exit code 0
NO_RED_OUTPUT=true ./cli/join-channel.sh testchannel9810 vtb ; ./verify/test-join-channel.sh testchannel9810 vtb
Step: 5_cli Test 'Join <vtb> to the <testchannel9810> chanel created by the <sberbank> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel9810 vtb VERIFY: test-join-channel.sh testchannel9810 vtb
[1;36m
Joining  vtb to the testchannel9810 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-join.sh testchannel9810[m[m[m
CORE_PEER_ADDRESS=peer0.vtb.example.net:7051
CORE_PEER_LOCALMSPID=vtb
CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto-config/peerOrganizations/vtb.example.net/users/Admin@vtb.example.net/msp
CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/vtb.example.net/peers/peer0.vtb.example.net/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto-config/peerOrganizations/vtb.example.net/peers/peer0.vtb.example.net/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/vtb.example.net/peers/peer0.vtb.example.net/tls/ca.crt
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
DOMAIN=example.net
ENROLL_ID=admin
ENROLL_SECRET=adminpw
FABRIC_CFG_PATH=/etc/hyperledger/fabric
FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
GOPATH=/opt/gopath
GOROOT=/opt/go
HOME=/root
HOSTNAME=152467b241e5
JAVA_HOME=/opt/java/openjdk
JAVA_TOOL_OPTIONS=-XX:+IgnoreUnrecognizedVMOptions -XX:+UseContainerSupport -XX:+IdleTuningCompactOnIdle -XX:+IdleTuningGcOnIdle
JAVA_VERSION=jdk8u222-b10_openj9-0.15.1
LANG=en_US.UTF-8
LANGUAGE=en_US:en
LC_ALL=en_US.UTF-8
ORDERER_BATCH_TIMEOUT=2
ORDERER_DOMAIN=example.net
ORDERER_GENERAL_LISTENPORT=7050
ORDERER_NAME=orderer
ORG=vtb
PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/go/bin:/opt/gopath/bin
PEER0_PORT=7051
PWD=/etc/hyperledger
RAFT0_PORT=7050
RAFT1_PORT=7150
RAFT2_PORT=7250
SHLVL=2
SIGNATURE_HASH_FAMILY=SHA2
SYSTEM_CHANNEL_ID=orderer-system-channel
TERM=xterm
_=/usr/bin/env
--2020-02-25 13:42:00--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:42:00--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:42:00--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:42:00--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

Join vtb to channel testchannel9810
Execute: channel fetch 0 crypto-config/configtx/testchannel9810.pb -o orderer.example.net:7050 -c testchannel9810 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:42:00.396 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:42:00.398 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
Error: error getting endorser client for channel: endorser client failed to connect to peer0.vtb.example.net:7051: failed to create new connection: connection error: desc = "transport: error while dialing: dial tcp 172.19.0.12:7051: connect: connection refused"
[1;31mError occurred. See console output above.[m[1;33m[m
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the vtb has joined the <testchannel9810> channel...[m[m[m
[34m2020-02-25 13:42:01.432 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized


[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
Step 5_cli: exit code 1
NO_RED_OUTPUT=true ./cli/join-channel.sh testchannel9810-02 sberbank ; ./verify/test-join-channel.sh testchannel9810-02 sberbank
Step: 6_cli Test 'Join <sberbank> to the <testchannel9810-02> chanel created by the <vtb> org'
RUNTESTNOERRPRINT: join-channel.sh testchannel9810-02 sberbank VERIFY: test-join-channel.sh testchannel9810-02 sberbank
[1;36m
Joining  sberbank to the testchannel9810-02 channel...[m[m[m
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/channel-join.sh testchannel9810-02[m[m[m
CORE_PEER_ADDRESS=peer0.sberbank.example.net:7051
CORE_PEER_LOCALMSPID=sberbank
CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/users/Admin@sberbank.example.net/msp
CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/server.key
CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/sberbank.example.net/peers/peer0.sberbank.example.net/tls/ca.crt
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
DOMAIN=example.net
ENROLL_ID=admin
ENROLL_SECRET=adminpw
FABRIC_CFG_PATH=/etc/hyperledger/fabric
FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
GOPATH=/opt/gopath
GOROOT=/opt/go
HOME=/root
HOSTNAME=228969fe8ade
JAVA_HOME=/opt/java/openjdk
JAVA_TOOL_OPTIONS=-XX:+IgnoreUnrecognizedVMOptions -XX:+UseContainerSupport -XX:+IdleTuningCompactOnIdle -XX:+IdleTuningGcOnIdle
JAVA_VERSION=jdk8u222-b10_openj9-0.15.1
LANG=en_US.UTF-8
LANGUAGE=en_US:en
LC_ALL=en_US.UTF-8
ORDERER_BATCH_TIMEOUT=2
ORDERER_DOMAIN=example.net
ORDERER_GENERAL_LISTENPORT=7050
ORDERER_NAME=orderer
ORG=sberbank
PATH=/opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/go/bin:/opt/gopath/bin
PEER0_PORT=7051
PWD=/etc/hyperledger
RAFT0_PORT=7050
RAFT1_PORT=7150
RAFT2_PORT=7250
SHLVL=2
SIGNATURE_HASH_FAMILY=SHA2
SYSTEM_CHANNEL_ID=orderer-system-channel
TERM=xterm
_=/usr/bin/env
--2020-02-25 13:44:54--  http://www.example.net/msp/admincerts/Admin@example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/admincerts/Admin@example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:44:54--  http://www.example.net/msp/cacerts/ca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/cacerts/ca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:44:54--  http://www.example.net/msp/tlscacerts/tlsca.example.net-cert.pem
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem’ not modified on server. Omitting download.

--2020-02-25 13:44:54--  http://www.example.net/msp/orderer.example.net/tls/server.crt
Resolving www.example.net (www.example.net)... 172.19.0.3
Connecting to www.example.net (www.example.net)|172.19.0.3|:80... connected.
HTTP request sent, awaiting response... 304 Not Modified
File ‘crypto-config/ordererOrganizations/example.net/msp/orderer.example.net/tls/server.crt’ not modified on server. Omitting download.

Join sberbank to channel testchannel9810-02
Execute: channel fetch 0 crypto-config/configtx/testchannel9810-02.pb -o orderer.example.net:7050 -c testchannel9810-02 --tls --cafile /etc/hyperledger/crypto-config/ordererOrganizations/example.net/msp/tlscacerts/tlsca.example.net-cert.pem
[34m2020-02-25 13:44:54.289 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:44:54.292 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-02-25 13:44:54.348 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-02-25 13:44:54.536 UTC [channelCmd] executeJoin -> INFO 002[0m Successfully submitted proposal to join channel
[1;37mSee /home/kilpio/CodeLab/merge_test/fabric-starter/test/fs_network_test.log for logs.[m[m[m
[1;34m
Verifing if the sberbank has joined the <testchannel9810-02> channel...[m[m[m
[34m2020-02-25 13:44:55.576 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
testchannel9810-02
[1;32mOK: The sberbank has joined the <testchannel9810-02> channel[m[m[m
Step 6_cli: exit code 0
