Random channel name = testlocal17976
Chaincode name = reference
Running test for org1.example.com for /home/kilpio/CodeLab/merge_test/fabric-starter
Step: 1
./curl/create-channel.sh testlocal17976
[1;36mCreating testlocal17976 channel in org1.example.com using API...[m[m[m
JWT obtained: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyNCIsImlhdCI6MTU3OTY4OTc5MX0.RTxut39bVVFYxL50RzCSoD5uH3oWkt54Vn9hjvsBDQA
[1;32m
OK: JWT token obtained.[m[m[m
Channel created.
[1;32m
OK: testlocal17976: Channel created.[m[m[m
Step 1: exit code 0
Step: 2
./verify/test-exist-channel.sh testlocal17976
[34m2020-01-22 10:43:15.757 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-01-22 10:43:15.759 UTC [cli.common] readBlock -> INFO 002[0m Received block: 0
[34m2020-01-22 10:43:15.760 UTC [cli.common] readBlock -> INFO 003[0m Received block: 0
[34m2020-01-22 10:43:15.760 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 0
{
"channel_id": "testlocal17976",
"epoch": "0",
"extension": null,
"timestamp": "2020-01-22T10:43:14Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 2,
"version": 0
}
configtxlator output for .channel_id: testlocal17976
[1;32m
OK: The channel <testlocal17976> exists.[m[m[m
Step 2: exit code 0
Step: 3
TEST_CHANNEL_NAME=testlocal17976 ORG2=org1 ./curl/add-org-to-channel.sh
[1;36mAdd org1 to the testlocal17976 channel using API...[m[m[m
[1;32m
OK: JWT token obtained.[m[m[m
[1;32m
OK: org1 added to testlocal17976 channel[m[m[m
Step 3: exit code 0
Step: 4
TEST_CHANNEL_NAME=testlocal17976 ORG2=org1 ./verify/test-channel-add-org.sh
[34m2020-01-22 10:43:20.068 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-01-22 10:43:20.070 UTC [cli.common] readBlock -> INFO 002[0m Received block: 1
[34m2020-01-22 10:43:20.071 UTC [cli.common] readBlock -> INFO 003[0m Received block: 1
[34m2020-01-22 10:43:20.071 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 1
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNHRENDQWIrZ0F3SUJBZ0lRWGZmaWgvSmNxVlhIbitZaFpDc0FuREFLQmdncWhrak9QUVFEQWpCek1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVpNQmNHQTFVRUNoTVFiM0puTVM1bGVHRnRjR3hsTG1OdmJURWNNQm9HQTFVRUF4TVRZMkV1CmIzSm5NUzVsZUdGdGNHeGxMbU52YlRBZUZ3MHlNREF4TWpFd09URTFNREJhRncwek1EQXhNVGd3T1RFMU1EQmEKTUZzeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVApZVzRnUm5KaGJtTnBjMk52TVI4d0hRWURWUVFEREJaQlpHMXBia0J2Y21jeExtVjRZVzF3YkdVdVkyOXRNRmt3CkV3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFOTI1cE5xMGtSa0NkUVZvRE5XWmNzeWtJdDRIRjFJbG8KYmN1SHNkVitCRXF4Y1poaFZwclRYR3prS3RBOS9YcHN4S2hWMGVWa1JKbkhuUndFeHdHeVlLTk5NRXN3RGdZRApWUjBQQVFIL0JBUURBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdLd1lEVlIwakJDUXdJb0FncWpONk5DWFZnQ2l6Ci94NDFNck9vQjF1elJKV1d5Ni9La1ArSzlsL0hPQ293Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnU0RmNng4dHQKc0tRcytrN2lWOFlBOGxWWXloeGJHOUo3VE9vbXZLbCtnSE1DSUI4Wld2NCtHKzdKZVNuNFVGak81VHY0Q2hoYgpCdUZtU3BtZHNxVUlzdXVNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "org1",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVVENDQWZpZ0F3SUJBZ0lSQU5OUnBoWjc4OEQ1OHJkMFVRYVBhNWt3Q2dZSUtvWkl6ajBFQXdJd2N6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHVEFYQmdOVkJBb1RFRzl5WnpFdVpYaGhiWEJzWlM1amIyMHhIREFhQmdOVkJBTVRFMk5oCkxtOXlaekV1WlhoaGJYQnNaUzVqYjIwd0hoY05NakF3TVRJeE1Ea3hOVEF3V2hjTk16QXdNVEU0TURreE5UQXcKV2pCek1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTgpVMkZ1SUVaeVlXNWphWE5qYnpFWk1CY0dBMVVFQ2hNUWIzSm5NUzVsZUdGdGNHeGxMbU52YlRFY01Cb0dBMVVFCkF4TVRZMkV1YjNKbk1TNWxlR0Z0Y0d4bExtTnZiVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUEKQkppTkJ6Yk1XdmtBTktaZG81bE9qTDJFbkNKWldhTXdvNHRIWnZlSnRaaHNnaGlUTGxaRFFSNEpVTFZ4ZXZmWgpVbHhsdmFWOFZkQkJFV0RkVWJaUTA5T2piVEJyTUE0R0ExVWREd0VCL3dRRUF3SUJwakFkQmdOVkhTVUVGakFVCkJnZ3JCZ0VGQlFjREFnWUlLd1lCQlFVSEF3RXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QXBCZ05WSFE0RUlnUWcKcWpONk5DWFZnQ2l6L3g0MU1yT29CMXV6UkpXV3k2L0trUCtLOWwvSE9Db3dDZ1lJS29aSXpqMEVBd0lEUndBdwpSQUlnRWxBeWR5SVRNTXNoQkg5aDdiT3E0UXQ0S2pJN3BhTm91V3F4TnZrcWpib0NJRWNZbG0xMmxSVEUwNkRiCkN3Qk83ZWtOamk3NGtVUUtselo3bWwyeDFnbkoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNWekNDQWY2Z0F3SUJBZ0lSQU1KVDdobUVpS0xmWktrVTZMY0VlQTB3Q2dZSUtvWkl6ajBFQXdJd2RqRUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHVEFYQmdOVkJBb1RFRzl5WnpFdVpYaGhiWEJzWlM1amIyMHhIekFkQmdOVkJBTVRGblJzCmMyTmhMbTl5WnpFdVpYaGhiWEJzWlM1amIyMHdIaGNOTWpBd01USXhNRGt4TlRBd1doY05NekF3TVRFNE1Ea3gKTlRBd1dqQjJNUXN3Q1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRQpCeE1OVTJGdUlFWnlZVzVqYVhOamJ6RVpNQmNHQTFVRUNoTVFiM0puTVM1bGVHRnRjR3hsTG1OdmJURWZNQjBHCkExVUVBeE1XZEd4elkyRXViM0puTVM1bGVHRnRjR3hsTG1OdmJUQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDkKQXdFSEEwSUFCT3g3dHVobDlDelp3MnNMMWRrSTdabzhJUHJpaGFuaXNTNXhYOHZ6SGJOWk1iWmZlVStqV0J4ZgpXSjJndnFFT24vdmNFV0F6R2pxSEY3enNEWDVSaDNtamJUQnJNQTRHQTFVZER3RUIvd1FFQXdJQnBqQWRCZ05WCkhTVUVGakFVQmdnckJnRUZCUWNEQWdZSUt3WUJCUVVIQXdFd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBcEJnTlYKSFE0RUlnUWdZS1BkVmwyL042V3B3K0NoaCtFL0paSFN0UnJ1dWlWTjJoT2N6TkxYOHhnd0NnWUlLb1pJemowRQpBd0lEUndBd1JBSWdQUllUK3hibWVRbW1rL1NpeFdoRE10RWZ0QmdMdGRFcCt3SHFTclEwWVVrQ0lBdERpSXh5ClZHYjRBemNUVE9lKzMvT3BOb3FHYW9mUHRrRnVNS0VGemxtTwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
configtxlator output for channel_id: org1
[1;32m
OK: <org1> is in the channel <testlocal17976>.[m[m[m
Step 4: exit code 0
Step: 5
TEST_CHANNEL_NAME=testlocal17976 ORG2=org2 ./curl/add-org-to-channel.sh
[1;36mAdd org2 to the testlocal17976 channel using API...[m[m[m
[1;32m
OK: JWT token obtained.[m[m[m
[1;32m
OK: org2 added to testlocal17976 channel[m[m[m
Step 5: exit code 0
Step: 6
TEST_CHANNEL_NAME=testlocal17976 ORG2=org2 ./verify/test-channel-add-org.sh
[34m2020-01-22 10:43:24.595 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-01-22 10:43:24.597 UTC [cli.common] readBlock -> INFO 002[0m Received block: 2
[34m2020-01-22 10:43:24.598 UTC [cli.common] readBlock -> INFO 003[0m Received block: 2
[34m2020-01-22 10:43:24.598 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 2
{
"config": {
"admins": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNHVENDQWNDZ0F3SUJBZ0lSQU90MDFObERPMUQwS3UwY2pwaHpiaE13Q2dZSUtvWkl6ajBFQXdJd2N6RUwKTUFrR0ExVUVCaE1DVlZNeEV6QVJCZ05WQkFnVENrTmhiR2xtYjNKdWFXRXhGakFVQmdOVkJBY1REVk5oYmlCRwpjbUZ1WTJselkyOHhHVEFYQmdOVkJBb1RFRzl5WnpJdVpYaGhiWEJzWlM1amIyMHhIREFhQmdOVkJBTVRFMk5oCkxtOXlaekl1WlhoaGJYQnNaUzVqYjIwd0hoY05NakF3TVRJeE1Ea3hOakF3V2hjTk16QXdNVEU0TURreE5qQXcKV2pCYk1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDQk1LUTJGc2FXWnZjbTVwWVRFV01CUUdBMVVFQnhNTgpVMkZ1SUVaeVlXNWphWE5qYnpFZk1CMEdBMVVFQXd3V1FXUnRhVzVBYjNKbk1pNWxlR0Z0Y0d4bExtTnZiVEJaCk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkowQSthYXZnOW1SaWlTbG8rNC9OL1luWkRwQmNnTUYKeXRKSWlWNlNuVlcrRURncFY0VEYveGdhY1NEaXBIc29sM05YVThVa1JncU1SWjdjSDlVUkdpK2pUVEJMTUE0RwpBMVVkRHdFQi93UUVBd0lIZ0RBTUJnTlZIUk1CQWY4RUFqQUFNQ3NHQTFVZEl3UWtNQ0tBSUd0bzNYSGNLN2ZxClk5TjZQczU3dmtrWng5eEYxbmZVZjlMdWZFWGtjTVhNTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUh5NHYwTHcKT2toWlkyM0RSem1FOW1iSDNyQlBQQ1V3eGdZQkhjRHdOSEVDQWlCOUp3YysyZDAwQ1VqdUxtL0pKaHNNRWRHMAp3ZzgrWC82TkdObXNZRFdLR0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
],
"crypto_config": {
"identity_identifier_hash_function": "SHA256",
"signature_hash_family": "SHA2"
},
"fabric_node_ous": null,
"intermediate_certs": [],
"name": "org2",
"organizational_unit_identifiers": [],
"revocation_list": [],
"root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVRENDQWZlZ0F3SUJBZ0lRSEtlRE9zYkVjdzQzanc1OXE3M3RtREFLQmdncWhrak9QUVFEQWpCek1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVpNQmNHQTFVRUNoTVFiM0puTWk1bGVHRnRjR3hsTG1OdmJURWNNQm9HQTFVRUF4TVRZMkV1CmIzSm5NaTVsZUdGdGNHeGxMbU52YlRBZUZ3MHlNREF4TWpFd09URTJNREJhRncwek1EQXhNVGd3T1RFMk1EQmEKTUhNeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVApZVzRnUm5KaGJtTnBjMk52TVJrd0Z3WURWUVFLRXhCdmNtY3lMbVY0WVcxd2JHVXVZMjl0TVJ3d0dnWURWUVFECkV4TmpZUzV2Y21jeUxtVjRZVzF3YkdVdVkyOXRNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUUKZkQ3U09XSVRLZk90Z29NUWNPeURTYUFUYk9YQ3FmMjdGWlpwMk9DSCtaRkovWFRPcFFJMEd6MndEUXQ5dkZCdwpyOVhnMUhLbEVTbHRVQUE0M0lzUUdLTnRNR3N3RGdZRFZSMFBBUUgvQkFRREFnR21NQjBHQTFVZEpRUVdNQlFHCkNDc0dBUVVGQndNQ0JnZ3JCZ0VGQlFjREFUQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01Da0dBMVVkRGdRaUJDQnIKYU4xeDNDdTM2bVBUZWo3T2U3NUpHY2ZjUmRaMzFIL1M3bnhGNUhERnpEQUtCZ2dxaGtqT1BRUURBZ05IQURCRQpBaUFoRmUwWHZqN3V5d3NyUEhGY3VXbUhzeXAzdWRMT04xNzBoNkRpVENtSnZRSWdZdkQrd3RrcWZkd0RVOGRqCjlaMWU1enhDWHJmbFA3WjF5eHA4ZXRRMEZzcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
],
"signing_identity": null,
"tls_intermediate_certs": [],
"tls_root_certs": [
"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNWakNDQWYyZ0F3SUJBZ0lRTXY1WC96QTJ0WnB1eGJHelB3b2YrakFLQmdncWhrak9QUVFEQWpCMk1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVpNQmNHQTFVRUNoTVFiM0puTWk1bGVHRnRjR3hsTG1OdmJURWZNQjBHQTFVRUF4TVdkR3h6ClkyRXViM0puTWk1bGVHRnRjR3hsTG1OdmJUQWVGdzB5TURBeE1qRXdPVEUyTURCYUZ3MHpNREF4TVRnd09URTIKTURCYU1IWXhDekFKQmdOVkJBWVRBbFZUTVJNd0VRWURWUVFJRXdwRFlXeHBabTl5Ym1saE1SWXdGQVlEVlFRSApFdzFUWVc0Z1JuSmhibU5wYzJOdk1Sa3dGd1lEVlFRS0V4QnZjbWN5TG1WNFlXMXdiR1V1WTI5dE1SOHdIUVlEClZRUURFeFowYkhOallTNXZjbWN5TG1WNFlXMXdiR1V1WTI5dE1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMEQKQVFjRFFnQUVEbkRQNGtDN1N2YnFJNnltZVc5cXRMWW85QVRhQXl4WG5kbVNWc2piTzh4Vy9NZjJaa1B0dWRaVgprY2t2QUtGcjdzS2wxbDJpYitqbXRGMDAyaHRzSUtOdE1Hc3dEZ1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkCkpRUVdNQlFHQ0NzR0FRVUZCd01DQmdnckJnRUZCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUNrR0ExVWQKRGdRaUJDQ1IyVjcxY3hJZUN4bVU4eC9EOE51MXlMV2VtREdJQjNadjBZaDhQSW5PT3pBS0JnZ3Foa2pPUFFRRApBZ05IQURCRUFpQnJndm4vTVFUelVqT2g3QWtibDBPSUU0ZEdWeTJwdGFZWHZ6a05oS2d4cGdJZ091UW1aWE0rCmNxZzFlSzBNd3k1SmcvUzltT0NhV2ppakxISXNPb0pPVUtjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
]
},
"type": 0
}
configtxlator output for channel_id: org2
[1;32m
OK: <org2> is in the channel <testlocal17976>.[m[m[m
Step 6: exit code 0
Step: 7
PEER0_PORT=7051 TEST_CHANNEL_NAME=testlocal17976 ORG=org1 ./curl/join-channel.sh
[1;36mJoining org1.example.com to the testlocal17976 channel using API...[m[m[m
[1;32m
OK: JWT token obtained.[m[m[m
[1;32m
OK: org1 joined to testlocal17976 channel[m[m[m
Step 7: exit code 0
Step: 8
PEER0_PORT=8051 TEST_CHANNEL_NAME=testlocal17976 ORG=org2 ./curl/join-channel.sh
[1;36mJoining org2.example.com to the testlocal17976 channel using API...[m[m[m
[1;32m
OK: JWT token obtained.[m[m[m
[1;32m
OK: org2 joined to testlocal17976 channel[m[m[m
Step 8: exit code 0
Step: 9
PEER0_PORT=7051 TEST_CHANNEL_NAME=testlocal17976 ORG=org1 ./verify/test-join-channel.sh
[34m2020-01-22 10:45:27.416 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: testlocal17976
Step 9: exit code 0
Step: 10
PEER0_PORT=8051 TEST_CHANNEL_NAME=testlocal17976 ORG=org2 ./verify/test-join-channel.sh
[34m2020-01-22 10:45:28.033 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
configtxlator output for .channel_id: testlocal17976
Step 10: exit code 0
Step: 11
PEER0_PORT=7051 CHAINCODE_NAME=reference TEST_CHANNEL_NAME=testlocal17976 ORG=org1 ./curl/chaincode-install.sh testlocal17976
Step 11: exit code 127
Step: 12
PEER0_PORT=7051 CHAINCODE_NAME=reference TEST_CHANNEL_NAME=testlocal17976 ORG=org2 ./curl/chaincode-install.sh testlocal17976
Step 12: exit code 127
Step: 13
PEER0_PORT=7051 CHAINCODE_NAME=reference TEST_CHANNEL_NAME=testlocal17976 ORG=org1 ./verify/test-chaincode-install.sh
peer chaincode list --installed output for .channel_id: 
Step 13: exit code 1
Step: 14
PEER0_PORT=8051 CHAINCODE_NAME=reference TEST_CHANNEL_NAME=testlocal17976 ORG=org2 ./verify/test-chaincode-install.sh
peer chaincode list --installed output for .channel_id: 
Step 14: exit code 1
Step: 15
PEER0_PORT=7051 CHAINCODE_NAME=reference TEST_CHANNEL_NAME=testlocal17976 ORG=org1 ./curl/chaincode-instantiate.sh testlocal17976
Step 15: exit code 127
Step: 16
PEER0_PORT=7051 CHAINCODE_NAME=reference TEST_CHANNEL_NAME=testlocal17976 ORG=org1 ./verify/test-chaincode-instantiated.sh testlocal17976
peer chaincode list --instantiated output for .channel_id: 
Step 16: exit code 1
Step: 17
CHAINCODE_NAME=reference TEST_CHANNEL_NAME=testlocal17976 ORG1=org1 ORG2=org2 ./verify/test-chaincode-data-exchange.sh
[1;32mExecute: docker-compose -f docker-compose.yaml    run --no-deps --rm cli.peer bash -c container-scripts/network/chaincode-invoke.sh  testlocal17976 referencetestlocal17976 '["put","testlocal17976","testlocal17976"]'[m[m[m
CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode invoke -n referencetestlocal17976 -C testlocal17976 -c '{"Args":["put","testlocal17976","testlocal17976"]}'
[34m2020-01-22 10:45:52.963 UTC [chaincodeCmd] InitCmdFactory -> INFO 001[0m Retrieved channel (testlocal17976) orderer endpoint: orderer.example.com:7050
Error: endorsement failure during invoke. response: status:500 message:"make sure the chaincode referencetestlocal17976 has been successfully instantiated and try again: chaincode referencetestlocal17976 not found" 
[1;31mError occurred. See console output above.[m[1;33m[m
