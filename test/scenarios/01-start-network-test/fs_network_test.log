/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-up-list.sh test.network sberbank vtb
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-up-list.sh test.network sberbank vtb
[1;34m
Verifing that all the test network containers test.network are up and running[m[m[m
[1;32mOK: All the test network containers are up and running[m[m[m
Step 1_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.test.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-19 09:59:49.697 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-19 09:59:49.700 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-19 09:59:49.703 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-19 09:59:49.703 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-19T08:27:10Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common vtb
Step: 3_cli Test 'Organization vtb is in <common> channel'
VERIFY: test-channel-exists.sh common vtb
[1;34m
Verifing if the <common> channel exists in vtb.test.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-19 09:59:50.621 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-19 09:59:50.624 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-19 09:59:50.626 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-19 09:59:50.626 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-19T08:27:10Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to vtb[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-19 09:59:51.508 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common vtb
Step: 5_cli Test 'Organization vtb joined the <common> channel'
VERIFY: test-join-channel.sh common vtb
[1;34m
Verifing if the vtb has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-19 09:59:52.239 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The vtb has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-up-list.sh test.met sberbank alpha
Step: 1_clli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-up-list.sh test.met sberbank alpha
[1;34m
Verifing that all the test network containers test.met are up and running[m[m[m
[31mThese containers are missing or are not running:
	api.alpha.test.met
	api.sberbank.test.met
	ca.alpha.test.met
	ca.sberbank.test.met
	cli.alpha.test.met
	cli.orderer.test.met
	cli.sberbank.test.met
	couchdb.peer0.alpha.test.met
	couchdb.peer0.sberbank.test.met
	orderer.test.met
	peer0.alpha.test.met
	peer0.sberbank.test.met
	www.alpha.test.met
	www.sberbank.test.met
	www.test.met (B[m
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_clli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_clli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.test.met...[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
Error: No such container: cli.sberbank.test.met
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 2_clli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_clli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.test.met...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-21 20:16:49.753 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-21 20:16:49.754 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-21 20:16:49.755 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-21 20:16:49.755 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-21T19:52:37Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_clli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_clli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
Error: No such container: cli.sberbank.test.met
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 4_clli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_clli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-21 20:16:50.489 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_clli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-up-list.sh test.met sberbank alpha
Step: 6_api Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-up-list.sh test.met sberbank alpha
[1;34m
Verifing that all the test network containers test.met are up and running[m[m[m
[31mThese containers are missing or are not running:
	api.alpha.test.met
	api.sberbank.test.met
	ca.alpha.test.met
	ca.sberbank.test.met
	cli.alpha.test.met
	cli.orderer.test.met
	cli.sberbank.test.met
	couchdb.peer0.alpha.test.met
	couchdb.peer0.sberbank.test.met
	orderer.test.met
	peer0.alpha.test.met
	peer0.sberbank.test.met
	www.alpha.test.met
	www.sberbank.test.met
	www.test.met (B[m
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 6_api: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 7_api Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.test.met...[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
Error: No such container: cli.sberbank.test.met
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 7_api: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 8_api Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.test.met...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-21 20:16:52.157 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-21 20:16:52.159 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-21 20:16:52.159 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-21 20:16:52.159 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-21T19:52:37Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 8_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 9_api Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
Error: No such container: cli.sberbank.test.met
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 9_api: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 10_api Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-21 20:16:52.823 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 10_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-up-list.sh test.met sberbank alpha
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-up-list.sh test.met sberbank alpha
[1;34m
Verifing that all the test network containers test.met are up and running[m[m[m
[31mThese containers are missing or are not running:
	api.alpha.test.met
	api.sberbank.test.met
	ca.alpha.test.met
	ca.sberbank.test.met
	cli.alpha.test.met
	cli.orderer.test.met
	cli.sberbank.test.met
	couchdb.peer0.alpha.test.met
	couchdb.peer0.sberbank.test.met
	orderer.test.met
	peer0.alpha.test.met
	peer0.sberbank.test.met
	www.alpha.test.met
	www.sberbank.test.met
	www.test.met (B[m
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.test.met...[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
Error: No such container: cli.sberbank.test.met
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 2_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.test.met...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-21 20:17:17.740 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-21 20:17:17.742 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-21 20:17:17.743 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-21 20:17:17.743 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-21T19:52:37Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
Error: No such container: cli.sberbank.test.met
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 4_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_cli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-21 20:17:18.414 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-up-list.sh test.met sberbank alpha
Step: 6_api Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-up-list.sh test.met sberbank alpha
[1;34m
Verifing that all the test network containers test.met are up and running[m[m[m
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-up-list.sh test.network sberbank alpha
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-up-list.sh test.network sberbank alpha
[1;34m
Verifing that all the test network containers test.network are up and running[m[m[m
[31mThese containers are missing or are not running:
	api.alpha.test.network
	api.sberbank.test.network
	ca.alpha.test.network
	ca.sberbank.test.network
	cli.alpha.test.network
	cli.orderer.test.network
	cli.sberbank.test.network
	couchdb.peer0.alpha.test.network
	couchdb.peer0.sberbank.test.network
	orderer.test.network
	peer0.alpha.test.network
	peer0.sberbank.test.network
	www.alpha.test.network
	www.sberbank.test.network
	www.test.network (B[m
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.test.network...[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
Error: No such container: cli.sberbank.test.network
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 2_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.test.network...[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
Error: No such container: cli.alpha.test.network
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 3_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
Error: No such container: cli.sberbank.test.network
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 4_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_cli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
Error: No such container: cli.alpha.test.network
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 5_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-up-list.sh test.network sberbank alpha
Step: 6_api Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-up-list.sh test.network sberbank alpha
[1;34m
Verifing that all the test network containers test.network are up and running[m[m[m
[31mThese containers are missing or are not running:
	api.alpha.test.network
	api.sberbank.test.network
	ca.alpha.test.network
	ca.sberbank.test.network
	cli.alpha.test.network
	cli.orderer.test.network
	cli.sberbank.test.network
	couchdb.peer0.alpha.test.network
	couchdb.peer0.sberbank.test.network
	orderer.test.network
	peer0.alpha.test.network
	peer0.sberbank.test.network
	www.alpha.test.network
	www.sberbank.test.network
	www.test.network (B[m
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 6_api: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 7_api Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.test.network...[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
Error: No such container: cli.sberbank.test.network
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 7_api: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 8_api Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.test.network...[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
Error: No such container: cli.alpha.test.network
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 8_api: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 9_api Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
Error: No such container: cli.sberbank.test.network
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 9_api: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 10_api Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns:
jq: error (at <stdin>:1): null (null) has no keys
Error: No such container: cli.alpha.test.network
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 10_api: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-up-list.sh test.network sberbank alpha
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-up-list.sh test.network sberbank alpha
[1;34m
Verifing that all the test network containers test.network are up and running[m[m[m
[31mThese containers are missing or are not running:
	api.alpha.test.network
	api.sberbank.test.network
	ca.alpha.test.network
	ca.sberbank.test.network
	cli.alpha.test.network
	cli.orderer.test.network
	cli.sberbank.test.network
	couchdb.peer0.alpha.test.network
	couchdb.peer0.sberbank.test.network
	orderer.test.network
	peer0.alpha.test.network
	peer0.sberbank.test.network
	www.alpha.test.network
	www.sberbank.test.network
	www.test.network (B[m
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.test.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-21 20:20:29.990 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-21 20:20:29.992 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-21 20:20:29.993 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-21 20:20:29.993 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-21T20:19:44Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.test.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-21 20:20:30.525 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-21 20:20:30.527 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-21 20:20:30.528 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-21 20:20:30.528 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-21T20:19:44Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-21 20:20:31.041 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_cli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-21 20:20:31.557 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-up-list.sh test.network sberbank alpha
Step: 6_api Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-up-list.sh test.network sberbank alpha
[1;34m
Verifing that all the test network containers test.network are up and running[m[m[m
[31mThese containers are missing or are not running:
	api.alpha.test.network
	api.sberbank.test.network
	ca.alpha.test.network
	ca.sberbank.test.network
	cli.alpha.test.network
	cli.orderer.test.network
	cli.sberbank.test.network
	couchdb.peer0.alpha.test.network
	couchdb.peer0.sberbank.test.network
	orderer.test.network
	peer0.alpha.test.network
	peer0.sberbank.test.network
	www.alpha.test.network
	www.sberbank.test.network
	www.test.network (B[m
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 6_api: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 7_api Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.test.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-21 20:20:33.069 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-21 20:20:33.070 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-21 20:20:33.072 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-21 20:20:33.072 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-21T20:19:44Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 7_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 8_api Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.test.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-21 20:20:33.660 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-21 20:20:33.662 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-21 20:20:33.664 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-21 20:20:33.664 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-21T20:19:44Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 8_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 9_api Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-21 20:20:34.264 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 9_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 10_api Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-21 20:20:34.746 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 10_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-up-list.sh example.com org1 org2
Step: 1_api Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-up-list.sh example.com org1 org2
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
[31mThese containers are missing or are not running:
	api.org1.example.com
	api.org2.example.com
	ca.org1.example.com
	ca.org2.example.com
	cli.orderer.example.com
	cli.org1.example.com
	cli.org2.example.com
	couchdb.peer0.org1.example.com
	couchdb.peer0.org2.example.com
	orderer.example.com
	peer0.org1.example.com
	peer0.org2.example.com
	www.example.com
	www.org1.example.com
	www.org2.example.com (B[m
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_api: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 2_api Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-21 20:51:33.138 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-21 20:51:33.143 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-21 20:51:33.145 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-21 20:51:33.145 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-21T20:50:08Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 2_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 3_api Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-21 20:51:34.040 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-21 20:51:34.045 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-21 20:51:34.047 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-21 20:51:34.047 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-21T20:50:08Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org2[m[m[m
Step 3_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org1
Step: 4_api Test 'Organization org1 joined the <common> channel'
VERIFY: test-join-channel.sh common org1
[1;34m
Verifing if the org1 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-21 20:51:35.098 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org1 has joined the <common> channel[m[m[m
Step 4_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org2
Step: 5_api Test 'Organization org2 joined the <common> channel'
VERIFY: test-join-channel.sh common org2
[1;34m
Verifing if the org2 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-21 20:51:35.980 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org2 has joined the <common> channel[m[m[m
Step 5_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-up-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-up-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:44:40.572 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:44:40.574 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:44:40.575 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:44:40.575 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:44:41.155 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:44:41.158 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:44:41.159 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:44:41.159 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:44:41.674 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_cli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:44:42.186 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->true

Containers_in_list:
<-

Differences found: <- ->true
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:45:18.715 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:45:18.718 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:45:18.719 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:45:18.719 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:45:19.264 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:45:19.267 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:45:19.268 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:45:19.268 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:45:19.806 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_cli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:45:20.362 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->true

Containers_in_list:
<-

Differences found: <- ->true
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:45:34.731 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:45:34.733 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:45:34.733 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:45:34.733 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:45:35.360 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:45:35.363 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:45:35.364 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:45:35.364 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:45:35.975 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_cli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:45:36.481 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->api.alpha.example.network
->api.sberbank.example.network
->ca.alpha.example.network
->ca.sberbank.example.network
->cli.alpha.example.network
->cli.orderer.example.network
->cli.sberbank.example.network
->couchdb.peer0.alpha.example.network
->couchdb.peer0.sberbank.example.network
->orderer.example.network
->peer0.alpha.example.network
->peer0.sberbank.example.network
->www.alpha.example.network
->www.example.network
->www.sberbank.example.network

Containers_in_list:
<-api.alpha.example.network
<-api.sberbank.example.network
<-ca.alpha.example.network
<-ca.sberbank.example.network
<-cli.alpha.example.network
<-cli.orderer.example.network
<-cli.sberbank.example.network
<-couchdb.peer0.alpha.example.network
<-couchdb.peer0.sberbank.example.network
<-orderer.example.network
<-peer0.alpha.example.network
<-peer0.sberbank.example.network
<-www.alpha.example.network
<-www.example.network
<-www.sberbank.example.network

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 1_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:46:47.199 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:46:47.201 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:46:47.202 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:46:47.202 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:46:47.859 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:46:47.862 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:46:47.863 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:46:47.864 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:46:48.441 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_cli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:46:48.975 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->api.alpha.example.network
->api.sberbank.example.network
->ca.alpha.example.network
->ca.sberbank.example.network
->cli.alpha.example.network
->cli.orderer.example.network
->cli.sberbank.example.network
->couchdb.peer0.alpha.example.network
->couchdb.peer0.sberbank.example.network
->orderer.example.network
->peer0.alpha.example.network
->peer0.sberbank.example.network
->www.alpha.example.network
->www.example.network
->www.sberbank.example.network

Containers_in_list:
<-api.alpha.example.network
<-api.sberbank.example.network
<-ca.alpha.example.network
<-ca.sberbank.example.network
<-cli.alpha.example.network
<-cli.orderer.example.network
<-cli.sberbank.example.network
<-couchdb.peer0.alpha.example.network
<-couchdb.peer0.sberbank.example.network
<-orderer.example.network
<-peer0.alpha.example.network
<-peer0.sberbank.example.network
<-www.alpha.example.network
<-www.example.network
<-www.sberbank.example.network

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 1_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:46:57.546 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:46:57.548 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:46:57.549 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:46:57.549 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:46:58.111 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:46:58.112 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:46:58.114 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:46:58.114 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:46:58.634 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_cli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:46:59.118 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
Step: 1_api Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->api.alpha.example.network
->api.sberbank.example.network
->ca.alpha.example.network
->ca.sberbank.example.network
->cli.alpha.example.network
->cli.orderer.example.network
->cli.sberbank.example.network
->couchdb.peer0.alpha.example.network
->couchdb.peer0.sberbank.example.network
->orderer.example.network
->peer0.alpha.example.network
->peer0.sberbank.example.network
->www.alpha.example.network
->www.example.network
->www.sberbank.example.network

Containers_in_list:
<-api.alpha.example.network
<-api.sberbank.example.network
<-ca.alpha.example.network
<-ca.sberbank.example.network
<-cli.alpha.example.network
<-cli.orderer.example.network
<-cli.sberbank.example.network
<-couchdb.peer0.alpha.example.network
<-couchdb.peer0.sberbank.example.network
<-orderer.example.network
<-peer0.alpha.example.network
<-peer0.sberbank.example.network
<-www.alpha.example.network
<-www.example.network
<-www.sberbank.example.network

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 1_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_api Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:47:12.267 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:47:12.269 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:47:12.270 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:47:12.270 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_api Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:47:12.818 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:47:12.821 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:47:12.822 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:47:12.822 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_api Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:47:13.422 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_api Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:47:13.939 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network api..example.network,api..example.network,ca..example.network,ca..example.network,cli.orderer.example.network,cli..example.network,cli..example.network,couchdb.peer0..example.network,couchdb.peer0..example.network,orderer.example.network,peer0..example.network,peer0..example.network,www..example.network,www.example.network,www..example.network
Step: 1_api Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network api..example.network,api..example.network,ca..example.network,ca..example.network,cli.orderer.example.network,cli..example.network,cli..example.network,couchdb.peer0..example.network,couchdb.peer0..example.network,orderer.example.network,peer0..example.network,peer0..example.network,www..example.network,www.example.network,www..example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->api..example.network
->api..example.network
->ca..example.network
->ca..example.network
->cli..example.network
->cli..example.network
->cli.orderer.example.network
->couchdb.peer0..example.network
->couchdb.peer0..example.network
->orderer.example.network
->peer0..example.network
->peer0..example.network
->www..example.network
->www..example.network
->www.example.network

Containers_in_list:
<-api.alpha.example.network
<-api.sberbank.example.network
<-ca.alpha.example.network
<-ca.sberbank.example.network
<-cli.alpha.example.network
<-cli.orderer.example.network
<-cli.sberbank.example.network
<-couchdb.peer0.alpha.example.network
<-couchdb.peer0.sberbank.example.network
<-orderer.example.network
<-peer0.alpha.example.network
<-peer0.sberbank.example.network
<-www.alpha.example.network
<-www.example.network
<-www.sberbank.example.network

Differences found: <-api.alpha.example.network <-api.sberbank.example.network <-ca.alpha.example.network <-ca.sberbank.example.network <-cli.alpha.example.network <-cli.sberbank.example.network <-couchdb.peer0.alpha.example.network <-couchdb.peer0.sberbank.example.network <-peer0.alpha.example.network <-peer0.sberbank.example.network <-www.alpha.example.network <-www.example.network ->www.example.network <-www.sberbank.example.network
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_api: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_api Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:48:07.449 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:48:07.450 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:48:07.452 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:48:07.452 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_api Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:48:08.058 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:48:08.061 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:48:08.062 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:48:08.062 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_api Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:48:08.588 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_api Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:48:09.088 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network api.sberbank.example.network, api.alpha.example.network, ca.sberbank.example.network, ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
Step: 1_api Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network api.sberbank.example.network, api.alpha.example.network, ca.sberbank.example.network, ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->
->api.sberbank.example.network

Containers_in_list:
<-api.alpha.example.network
<-api.sberbank.example.network
<-ca.alpha.example.network
<-ca.sberbank.example.network
<-cli.alpha.example.network
<-cli.orderer.example.network
<-cli.sberbank.example.network
<-couchdb.peer0.alpha.example.network
<-couchdb.peer0.sberbank.example.network
<-orderer.example.network
<-peer0.alpha.example.network
<-peer0.sberbank.example.network
<-www.alpha.example.network
<-www.example.network
<-www.sberbank.example.network

Differences found: -> <-api.alpha.example.network <-ca.alpha.example.network <-ca.sberbank.example.network <-cli.alpha.example.network <-cli.orderer.example.network <-cli.sberbank.example.network <-couchdb.peer0.alpha.example.network <-couchdb.peer0.sberbank.example.network <-orderer.example.network <-peer0.alpha.example.network <-peer0.sberbank.example.network <-www.alpha.example.network <-www.example.network <-www.sberbank.example.network
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_api: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_api Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:48:39.559 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:48:39.561 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:48:39.562 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:48:39.562 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_api Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:48:40.125 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:48:40.127 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:48:40.128 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:48:40.128 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_api Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:48:40.657 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_api Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:48:41.155 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
Step: 1_api Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->api.alpha.example.network
->api.sberbank.example.network
->ca.alpha.example.network
->ca.sberbank.example.network
->cli.alpha.example.network
->cli.orderer.example.network
->cli.sberbank.example.network
->couchdb.peer0.alpha.example.network
->couchdb.peer0.sberbank.example.network
->orderer.example.network
->peer0.alpha.example.network
->peer0.sberbank.example.network
->www.alpha.example.network
->www.example.network
->www.sberbank.example.network

Containers_in_list:
<-api.alpha.example.network
<-api.sberbank.example.network
<-ca.alpha.example.network
<-ca.sberbank.example.network
<-cli.alpha.example.network
<-cli.orderer.example.network
<-cli.sberbank.example.network
<-couchdb.peer0.alpha.example.network
<-couchdb.peer0.sberbank.example.network
<-orderer.example.network
<-peer0.alpha.example.network
<-peer0.sberbank.example.network
<-www.alpha.example.network
<-www.example.network
<-www.sberbank.example.network

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 1_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_api Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:48:53.614 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:48:53.616 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:48:53.617 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:48:53.617 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_api Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:48:54.153 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:48:54.156 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:48:54.157 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:48:54.157 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_api Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:48:54.684 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_api Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:48:55.194 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
Step: 1_api Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->api.alpha.example.network
->api.sberbank.example.network
->ca.alpha.example.network
->ca.sberbank.example.network
->cli.alpha.example.network
->cli.orderer.example.network
->cli.sberbank.example.network
->couchdb.peer0.alpha.example.network
->couchdb.peer0.sberbank.example.network
->orderer.example.network
->peer0.alpha.example.network
->peer0.sberbank.example.network
->www.alpha.example.network
->www.example.network
->www.sberbank.example.network

Containers_in_list:
<-api.alpha.example.network
<-api.sberbank.example.network
<-ca.alpha.example.network
<-ca.sberbank.example.network
<-cli.alpha.example.network
<-cli.orderer.example.network
<-cli.sberbank.example.network
<-couchdb.peer0.alpha.example.network
<-couchdb.peer0.sberbank.example.network
<-orderer.example.network
<-peer0.alpha.example.network
<-peer0.sberbank.example.network
<-www.alpha.example.network
<-www.example.network
<-www.sberbank.example.network

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 1_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_api Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:49:32.802 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:49:32.803 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:49:32.804 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:49:32.804 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_api Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:49:33.376 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:49:33.378 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:49:33.379 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:49:33.379 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_api: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_api Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->true

Containers_in_list:
<-

Differences found: <- ->true
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:51:11.105 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:51:11.107 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:51:11.108 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:51:11.108 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:51:11.638 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:51:11.640 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:51:11.641 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:51:11.641 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:51:12.234 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_cli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:51:12.726 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->true

Containers_in_list:
<-

Differences found: <- ->true
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:51:38.271 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:51:38.273 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:51:38.274 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:51:38.274 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:51:38.822 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:51:38.824 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:51:38.826 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:51:38.826 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:51:39.435 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_cli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:51:39.992 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->api.alpha.example.network
->api.sberbank.example.network
->ca.alpha.example.network
->ca.sberbank.example.network
->cli.alpha.example.network
->cli.orderer.example.network
->cli.sberbank.example.network
->couchdb.peer0.alpha.example.network
->couchdb.peer0.sberbank.example.network
->orderer.example.network
->peer0.alpha.example.network
->peer0.sberbank.example.network
->www.alpha.example.network
->www.example.network
->www.sberbank.example.network

Containers_in_list:
<-api.alpha.example.network
<-api.sberbank.example.network
<-ca.alpha.example.network
<-ca.sberbank.example.network
<-cli.alpha.example.network
<-cli.orderer.example.network
<-cli.sberbank.example.network
<-couchdb.peer0.alpha.example.network
<-couchdb.peer0.sberbank.example.network
<-orderer.example.network
<-peer0.alpha.example.network
<-peer0.sberbank.example.network
<-www.alpha.example.network
<-www.example.network
<-www.sberbank.example.network

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 1_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:52:17.851 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:52:17.853 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:52:17.854 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:52:17.854 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:52:18.475 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:52:18.477 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:52:18.479 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:52:18.479 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:52:19.083 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_cli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:52:19.752 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->true

Containers_in_list:
<-

Differences found: <- ->true
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:52:25.433 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:52:25.435 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:52:25.436 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:52:25.436 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:52:25.981 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:52:25.984 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:52:25.986 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:52:25.986 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:52:26.511 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_cli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:52:27.015 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->api.alpha.example.network
->api.sberbank.example.network
->ca.alpha.example.network
->ca.sberbank.example.network
->cli.alpha.example.network
->cli.orderer.example.network
->cli.sberbank.example.network
->couchdb.peer0.alpha.example.network
->couchdb.peer0.sberbank.example.network
->orderer.example.network
->peer0.alpha.example.network
->peer0.sberbank.example.network
->www.alpha.example.network
->www.example.network
->www.sberbank.example.network

Containers_in_list:
<-api.alpha.example.network
<-api.sberbank.example.network
<-ca.alpha.example.network
<-ca.sberbank.example.network
<-cli.alpha.example.network
<-cli.orderer.example.network
<-cli.sberbank.example.network
<-couchdb.peer0.alpha.example.network
<-couchdb.peer0.sberbank.example.network
<-orderer.example.network
<-peer0.alpha.example.network
<-peer0.sberbank.example.network
<-www.alpha.example.network
<-www.example.network
<-www.sberbank.example.network

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 1_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:55:19.400 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:55:19.402 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:55:19.403 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:55:19.403 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:55:20.020 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:55:20.021 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:55:20.022 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:55:20.022 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:55:20.585 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_cli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:55:21.147 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->api.alpha.example.network
->api.sberbank.example.network
->ca.alpha.example.network
->ca.sberbank.example.network
->cli.alpha.example.network
->cli.orderer.example.network
->cli.sberbank.example.network
->couchdb.peer0.alpha.example.network
->couchdb.peer0.sberbank.example.network
->orderer.example.network
->peer0.alpha.example.network
->peer0.sberbank.example.network
->www.alpha.example.network
->www.example.network
->www.sberbank.example.network

Containers_in_list:
<-api.alpha.example.network
<-api.sberbank.example.network
<-ca.alpha.example.network
<-ca.sberbank.example.network
<-cli.alpha.example.network
<-cli.orderer.example.network
<-cli.sberbank.example.network
<-couchdb.peer0.alpha.example.network
<-couchdb.peer0.sberbank.example.network
<-orderer.example.network
<-peer0.alpha.example.network
<-peer0.sberbank.example.network
<-www.alpha.example.network
<-www.example.network
<-www.sberbank.example.network

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 1_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:56:45.586 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:56:45.588 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:56:45.589 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:56:45.589 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:56:46.144 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:56:46.146 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:56:46.148 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:56:46.148 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:56:46.692 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_cli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:56:47.213 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network sberbank api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network sberbank api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->api.alpha.example.network
->api.sberbank.example.network
->ca.alpha.example.network
->ca.sberbank.example.network
->cli.alpha.example.network
->cli.orderer.example.network
->cli.sberbank.example.network
->couchdb.peer0.alpha.example.network
->couchdb.peer0.sberbank.example.network
->orderer.example.network
->peer0.alpha.example.network
->peer0.sberbank.example.network
->www.alpha.example.network
->www.example.network
->www.sberbank.example.network

Containers_in_list:
<-api.alpha.example.network
<-api.sberbank.example.network
<-ca.alpha.example.network
<-ca.sberbank.example.network
<-cli.alpha.example.network
<-cli.orderer.example.network
<-cli.sberbank.example.network
<-couchdb.peer0.alpha.example.network
<-couchdb.peer0.sberbank.example.network
<-orderer.example.network
<-peer0.alpha.example.network
<-peer0.sberbank.example.network
<-www.alpha.example.network
<-www.example.network
<-www.sberbank.example.network

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 1_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:58:22.129 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:58:22.131 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:58:22.132 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:58:22.132 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:58:22.693 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:58:22.695 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:58:22.696 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:58:22.696 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:58:23.245 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The sberbank has joined the <common> channel[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common alpha
Step: 5_cli Test 'Organization alpha joined the <common> channel'
VERIFY: test-join-channel.sh common alpha
[1;34m
Verifing if the alpha has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:58:23.747 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The alpha has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.network alpha api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.network alpha api.sberbank.example.network,api.alpha.example.network,ca.sberbank.example.network,ca.alpha.example.network,cli.orderer.example.network,cli.sberbank.example.network,cli.alpha.example.network,couchdb.peer0.sberbank.example.network,couchdb.peer0.alpha.example.network,orderer.example.network,peer0.sberbank.example.network,peer0.alpha.example.network,www.sberbank.example.network,www.example.network,www.alpha.example.network
[1;34m
Verifing that all the test network containers example.network are up and running[m[m[m
Containers_running:
->api.alpha.example.network
->api.sberbank.example.network
->ca.alpha.example.network
->ca.sberbank.example.network
->cli.alpha.example.network
->cli.orderer.example.network
->cli.sberbank.example.network
->couchdb.peer0.alpha.example.network
->couchdb.peer0.sberbank.example.network
->orderer.example.network
->peer0.alpha.example.network
->peer0.sberbank.example.network
->www.alpha.example.network
->www.example.network
->www.sberbank.example.network

Containers_in_list:
<-api.alpha.example.network
<-api.sberbank.example.network
<-ca.alpha.example.network
<-ca.sberbank.example.network
<-cli.alpha.example.network
<-cli.orderer.example.network
<-cli.sberbank.example.network
<-couchdb.peer0.alpha.example.network
<-couchdb.peer0.sberbank.example.network
<-orderer.example.network
<-peer0.alpha.example.network
<-peer0.sberbank.example.network
<-www.alpha.example.network
<-www.example.network
<-www.sberbank.example.network

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 1_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common sberbank
Step: 2_cli Test 'Organization sberbank is in <common> channel'
VERIFY: test-channel-exists.sh common sberbank
[1;34m
Verifing if the <common> channel exists in sberbank.example.network...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-22 20:58:54.405 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:58:54.408 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:58:54.409 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:58:54.409 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to sberbank[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common alpha
Step: 3_cli Test 'Organization alpha is in <common> channel'
VERIFY: test-channel-exists.sh common alpha
[1;34m
Verifing if the <common> channel exists in alpha.example.network...[m[m[m
queryContainerNetworkSettings returns: 8051
[34m2020-03-22 20:58:54.935 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-22 20:58:54.936 UTC [cli.common] readBlock -> INFO 002[0m Received block: 4
[34m2020-03-22 20:58:54.937 UTC [cli.common] readBlock -> INFO 003[0m Received block: 3
[34m2020-03-22 20:58:54.937 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 3
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-22T20:31:45Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to alpha[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common sberbank
Step: 4_cli Test 'Organization sberbank joined the <common> channel'
VERIFY: test-join-channel.sh common sberbank
[1;34m
Verifing if the sberbank has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Differences found: <-api.org1.example.com ->api.org2.example.com <-ca.org1.example.com ->ca.org2.example.com <-cli.orderer.example.com <-cli.org1.example.com ->cli.org2.example.com <-couchdb.peer0.org1.example.com ->couchdb.peer0.org2.example.com <-orderer.example.com <-peer0.org1.example.com ->peer0.org2.example.com <-www.example.com <-www.org1.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org2.example.com
<-ca.org2.example.com
<-cli.org2.example.com
<-couchdb.peer0.org2.example.com
<-peer0.org2.example.com
<-www.org2.example.com

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org1.example.com,api.org2.example.com,ca.org1.example.com,ca.org2.example.com,cli.orderer.example.com,cli.org1.example.com,cli.org2.example.com,couchdb.peer0.org1.example.com,couchdb.peer0.org2.example.com,orderer.example.com,peer0.org1.example.com,peer0.org2.example.com,www.org1.example.com,www.example.com,www.org2.example.com
Step: 3_cli Test 'Docker containers for orderer and organizations are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org1.example.com,api.org2.example.com,ca.org1.example.com,ca.org2.example.com,cli.orderer.example.com,cli.org1.example.com,cli.org2.example.com,couchdb.peer0.org1.example.com,couchdb.peer0.org2.example.com,orderer.example.com,peer0.org1.example.com,peer0.org2.example.com,www.org1.example.com,www.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Containers_running:
->api.org1.example.com
->api.org2.example.com
->ca.org1.example.com
->ca.org2.example.com
->cli.orderer.example.com
->cli.org1.example.com
->cli.org2.example.com
->couchdb.peer0.org1.example.com
->couchdb.peer0.org2.example.com
->orderer.example.com
->peer0.org1.example.com
->peer0.org2.example.com
->www.example.com
->www.org1.example.com
->www.org2.example.com

Containers_in_list:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 3_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 4_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:44:33.661 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 07:44:33.663 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 07:44:33.664 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 07:44:33.665 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 5_cli Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:44:26.390 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 07:44:26.394 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 07:44:26.399 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 07:44:26.399 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org2[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org1
Step: 6_cli Test 'Organization org1 joined the <common> channel'
VERIFY: test-join-channel.sh common org1
[1;34m
Verifing if the org1 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:44:38.232 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org1 has joined the <common> channel[m[m[m
Step 6_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org2
Step: 7_cli Test 'Organization org2 joined the <common> channel'
VERIFY: test-join-channel.sh common org2
[1;34m
Verifing if the org2 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:44:30.885 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org2 has joined the <common> channel[m[m[m
Step 7_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Differences found: <-api.org1.example.com ->api.org2.example.com <-ca.org1.example.com ->ca.org2.example.com <-cli.orderer.example.com <-cli.org1.example.com ->cli.org2.example.com <-couchdb.peer0.org1.example.com ->couchdb.peer0.org2.example.com <-orderer.example.com <-peer0.org1.example.com ->peer0.org2.example.com <-www.example.com <-www.org1.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org2.example.com
<-ca.org2.example.com
<-cli.org2.example.com
<-couchdb.peer0.org2.example.com
<-peer0.org2.example.com
<-www.org2.example.com

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:46:37.293 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 07:46:37.296 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 07:46:37.298 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 07:46:37.298 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 4_cli Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:46:39.473 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 07:46:39.476 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 07:46:39.478 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 07:46:39.478 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org2[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org1
Step: 5_cli Test 'Organization org1 joined the <common> channel'
VERIFY: test-join-channel.sh common org1
[1;34m
Verifing if the org1 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:46:41.596 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org1 has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org2
Step: 6_cli Test 'Organization org2 joined the <common> channel'
VERIFY: test-join-channel.sh common org2
[1;34m
Verifing if the org2 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:46:43.880 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org2 has joined the <common> channel[m[m[m
Step 6_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Differences found: <-api.org1.example.com ->api.org2.example.com <-ca.org1.example.com ->ca.org2.example.com <-cli.orderer.example.com <-cli.org1.example.com ->cli.org2.example.com <-couchdb.peer0.org1.example.com ->couchdb.peer0.org2.example.com <-orderer.example.com <-peer0.org1.example.com ->peer0.org2.example.com <-www.example.com <-www.org1.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org2.example.com
<-ca.org2.example.com
<-cli.org2.example.com
<-couchdb.peer0.org2.example.com
<-peer0.org2.example.com
<-www.org2.example.com

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:46:58.402 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 07:46:58.404 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 07:46:58.408 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 07:46:58.409 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 4_cli Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:47:00.491 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 07:47:00.494 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 07:47:00.496 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 07:47:00.497 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org2[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org1
Step: 5_cli Test 'Organization org1 joined the <common> channel'
VERIFY: test-join-channel.sh common org1
[1;34m
Verifing if the org1 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:47:02.646 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org1 has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org2
Step: 6_cli Test 'Organization org2 joined the <common> channel'
VERIFY: test-join-channel.sh common org2
[1;34m
Verifing if the org2 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:47:04.859 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org2 has joined the <common> channel[m[m[m
Step 6_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Differences found: <-api.org1.example.com ->api.org2.example.com <-ca.org1.example.com ->ca.org2.example.com <-cli.orderer.example.com <-cli.org1.example.com ->cli.org2.example.com <-couchdb.peer0.org1.example.com ->couchdb.peer0.org2.example.com <-orderer.example.com <-peer0.org1.example.com ->peer0.org2.example.com <-www.example.com <-www.org1.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org2.example.com
<-ca.org2.example.com
<-cli.org2.example.com
<-couchdb.peer0.org2.example.com
<-peer0.org2.example.com
<-www.org2.example.com

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:47:16.042 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 07:47:16.044 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 07:47:16.046 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 07:47:16.046 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 4_cli Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:47:18.281 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 07:47:18.284 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 07:47:18.285 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 07:47:18.286 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org2[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org1
Step: 5_cli Test 'Organization org1 joined the <common> channel'
VERIFY: test-join-channel.sh common org1
[1;34m
Verifing if the org1 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:47:20.435 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org1 has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org2
Step: 6_cli Test 'Organization org2 joined the <common> channel'
VERIFY: test-join-channel.sh common org2
[1;34m
Verifing if the org2 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:47:22.635 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org2 has joined the <common> channel[m[m[m
Step 6_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Retrieving container list from org1.example.com for org1
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Differences found: <-api.org1.example.com ->api.org2.example.com <-ca.org1.example.com ->ca.org2.example.com <-cli.orderer.example.com <-cli.org1.example.com ->cli.org2.example.com <-couchdb.peer0.org1.example.com ->couchdb.peer0.org2.example.com <-orderer.example.com <-peer0.org1.example.com ->peer0.org2.example.com <-www.example.com <-www.org1.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Retrieving container list from org2.example.com for org2
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org2.example.com
<-ca.org2.example.com
<-cli.org2.example.com
<-couchdb.peer0.org2.example.com
<-peer0.org2.example.com
<-www.org2.example.com

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:50:50.064 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 07:50:50.067 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 07:50:50.068 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 07:50:50.068 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 4_cli Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:50:52.336 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 07:50:52.338 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 07:50:52.340 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 07:50:52.341 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org2[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org1
Step: 5_cli Test 'Organization org1 joined the <common> channel'
VERIFY: test-join-channel.sh common org1
[1;34m
Verifing if the org1 has joined the <common> channel...[m[m[m
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Retrieving container list from org1.example.com for org1
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Differences found: <-api.org1.example.com ->api.org2.example.com <-ca.org1.example.com ->ca.org2.example.com <-cli.orderer.example.com <-cli.org1.example.com ->cli.org2.example.com <-couchdb.peer0.org1.example.com ->couchdb.peer0.org2.example.com <-orderer.example.com <-peer0.org1.example.com ->peer0.org2.example.com <-www.example.com <-www.org1.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Retrieving container list from org2.example.com for org2
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org2.example.com
<-ca.org2.example.com
<-cli.org2.example.com
<-couchdb.peer0.org2.example.com
<-peer0.org2.example.com
<-www.org2.example.com

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:53:51.274 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 07:53:51.277 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 07:53:51.278 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 07:53:51.279 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 4_cli Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 07:53:53.637 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 07:53:53.639 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 07:53:53.641 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 07:53:53.642 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org2[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org1
Step: 5_cli Test 'Organization org1 joined the <common> channel'
VERIFY: test-join-channel.sh common org1
[1;34m
Verifing if the org1 has joined the <common> channel...[m[m[m
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Differences found: <-api.org1.example.com ->api.org2.example.com <-ca.org1.example.com ->ca.org2.example.com <-cli.orderer.example.com <-cli.org1.example.com ->cli.org2.example.com <-couchdb.peer0.org1.example.com ->couchdb.peer0.org2.example.com <-orderer.example.com <-peer0.org1.example.com ->peer0.org2.example.com <-www.example.com <-www.org1.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org2.example.com
<-ca.org2.example.com
<-cli.org2.example.com
<-couchdb.peer0.org2.example.com
<-peer0.org2.example.com
<-www.org2.example.com

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Differences found: <-api.org1.example.com ->api.org2.example.com <-ca.org1.example.com ->ca.org2.example.com <-cli.orderer.example.com <-cli.org1.example.com ->cli.org2.example.com <-couchdb.peer0.org1.example.com ->couchdb.peer0.org2.example.com <-orderer.example.com <-peer0.org1.example.com ->peer0.org2.example.com <-www.example.com <-www.org1.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org2.example.com
<-ca.org2.example.com
<-cli.org2.example.com
<-couchdb.peer0.org2.example.com
<-peer0.org2.example.com
<-www.org2.example.com

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:00:24.258 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:00:24.260 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:00:24.261 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:00:24.262 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 4_cli Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:00:26.654 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:00:26.657 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:00:26.659 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:00:26.660 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org2[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org1
Step: 5_cli Test 'Organization org1 joined the <common> channel'
VERIFY: test-join-channel.sh common org1
[1;34m
Verifing if the org1 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:00:28.879 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org1 has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org2
Step: 6_cli Test 'Organization org2 joined the <common> channel'
VERIFY: test-join-channel.sh common org2
[1;34m
Verifing if the org2 has joined the <common> channel...[m[m[m
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Differences found: <-api.org1.example.com ->api.org2.example.com <-ca.org1.example.com ->ca.org2.example.com <-cli.orderer.example.com <-cli.org1.example.com ->cli.org2.example.com <-couchdb.peer0.org1.example.com ->couchdb.peer0.org2.example.com <-orderer.example.com <-peer0.org1.example.com ->peer0.org2.example.com <-www.example.com <-www.org1.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org2.example.com
<-ca.org2.example.com
<-cli.org2.example.com
<-couchdb.peer0.org2.example.com
<-peer0.org2.example.com
<-www.org2.example.com

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-couchdb.peer0.org1.example.com
<-fabric-starter_default
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Differences found: <-api.org1.example.com ->api.org2.example.com <-ca.org1.example.com ->ca.org2.example.com <-cli.orderer.example.com ->cli.org2.example.com <-couchdb.peer0.org1.example.com ->couchdb.peer0.org2.example.com <-fabric-starter_default <-orderer.example.com <-peer0.org1.example.com ->peer0.org2.example.com <-www.example.com <-www.org1.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org2.example.com
<-ca.org2.example.com
<-couchdb.peer0.org2.example.com
<-fabric-starter_default
<-peer0.org2.example.com
<-www.org2.example.com

Differences found: ->cli.org2.example.com <-fabric-starter_default
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 2_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 2_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 2_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:03:16.304 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:03:16.307 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:03:16.309 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:03:16.309 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 4_cli Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 2_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:07:40.295 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:07:40.298 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:07:40.299 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:07:40.300 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 4_cli Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:07:42.621 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:07:42.624 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:07:42.627 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:07:42.627 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org2[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org1
Step: 5_cli Test 'Organization org1 joined the <common> channel'
VERIFY: test-join-channel.sh common org1
[1;34m
Verifing if the org1 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:07:44.796 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org1 has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org2
Step: 6_cli Test 'Organization org2 joined the <common> channel'
VERIFY: test-join-channel.sh common org2
[1;34m
Verifing if the org2 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 2_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:07:56.114 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:07:56.119 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:07:56.121 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:07:56.121 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 4_cli Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:07:58.491 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:07:58.494 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:07:58.497 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:07:58.497 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org2[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org1
Step: 5_cli Test 'Organization org1 joined the <common> channel'
VERIFY: test-join-channel.sh common org1
[1;34m
Verifing if the org1 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:08:00.853 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org1 has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org2
Step: 6_cli Test 'Organization org2 joined the <common> channel'
VERIFY: test-join-channel.sh common org2
[1;34m
Verifing if the org2 has joined the <common> channel...[m[m[m
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
* fabric-starter_default cli.org1.example.com true
fabric-starter_default peer0.org1.example.com true
fabric-starter_default api.org1.example.com true
fabric-starter_default www.org1.example.com true
fabric-starter_default ca.org1.example.com true
fabric-starter_default couchdb.peer0.org1.example.com true
fabric-starter_default cli.orderer.example.com true
fabric-starter_default www.example.com true
fabric-starter_default orderer.example.com true *
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
* fabric-starter_default cli.org2.example.com true
fabric-starter_default peer0.org2.example.com true
fabric-starter_default www.org2.example.com true
fabric-starter_default api.org2.example.com true
fabric-starter_default ca.org2.example.com true
fabric-starter_default couchdb.peer0.org2.example.com true *
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 2_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:08:30.033 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:08:30.035 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:08:30.036 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:08:30.037 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 4_cli Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
* fabric-starter_default cli.org1.example.com true
fabric-starter_default peer0.org1.example.com true
fabric-starter_default api.org1.example.com true
fabric-starter_default www.org1.example.com true
fabric-starter_default ca.org1.example.com true
fabric-starter_default couchdb.peer0.org1.example.com true
fabric-starter_default cli.orderer.example.com true
fabric-starter_default www.example.com true
fabric-starter_default orderer.example.com true *
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
* fabric-starter_default cli.org1.example.com true
fabric-starter_default peer0.org1.example.com true
fabric-starter_default api.org1.example.com true
fabric-starter_default www.org1.example.com true
fabric-starter_default ca.org1.example.com true
fabric-starter_default couchdb.peer0.org1.example.com true
fabric-starter_default cli.orderer.example.com true
fabric-starter_default www.example.com true
fabric-starter_default orderer.example.com true *
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
* fabric-starter_default cli.org2.example.com true
fabric-starter_default peer0.org2.example.com true
fabric-starter_default www.org2.example.com true
fabric-starter_default api.org2.example.com true
fabric-starter_default ca.org2.example.com true
fabric-starter_default couchdb.peer0.org2.example.com true *
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 2_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Retrieving container list from org1.example.com for org1
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Retrieving container list from org2.example.com for org2
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 2_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:09:46.458 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:09:46.461 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:09:46.462 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:09:46.462 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 4_cli Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:09:49.078 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:09:49.081 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:09:49.083 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:09:49.083 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org2[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org1
Step: 5_cli Test 'Organization org1 joined the <common> channel'
VERIFY: test-join-channel.sh common org1
[1;34m
Verifing if the org1 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:09:51.438 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org1 has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org2
Step: 6_cli Test 'Organization org2 joined the <common> channel'
VERIFY: test-join-channel.sh common org2
[1;34m
Verifing if the org2 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:09:53.497 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org2 has joined the <common> channel[m[m[m
Step 6_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Retrieving container list from org1.example.com for org1
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Retrieving container list from org2.example.com for org2
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:


Differences found: ->api.org2.example.com ->ca.org2.example.com ->cli.org2.example.com ->couchdb.peer0.org2.example.com ->peer0.org2.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 2_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:12:22.473 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:12:22.476 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:12:22.477 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:12:22.477 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 4_cli Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:12:24.691 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:12:24.693 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:12:24.695 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:12:24.695 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org2[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org1
Step: 5_cli Test 'Organization org1 joined the <common> channel'
VERIFY: test-join-channel.sh common org1
[1;34m
Verifing if the org1 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:12:26.937 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org1 has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org2
Step: 6_cli Test 'Organization org2 joined the <common> channel'
VERIFY: test-join-channel.sh common org2
[1;34m
Verifing if the org2 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:12:29.049 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org2 has joined the <common> channel[m[m[m
Step 6_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Differences found: <-api.org1.example.com ->api.org2.example.com <-ca.org1.example.com ->ca.org2.example.com <-cli.orderer.example.com <-cli.org1.example.com ->cli.org2.example.com <-couchdb.peer0.org1.example.com ->couchdb.peer0.org2.example.com <-orderer.example.com <-peer0.org1.example.com ->peer0.org2.example.com <-www.example.com <-www.org1.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org2.example.com
<-ca.org2.example.com
<-cli.org2.example.com
<-couchdb.peer0.org2.example.com
<-peer0.org2.example.com
<-www.org2.example.com

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
fabric-starter_default cli.org1.example.com true
fabric-starter_default peer0.org1.example.com true
fabric-starter_default api.org1.example.com true
fabric-starter_default www.org1.example.com true
fabric-starter_default ca.org1.example.com true
fabric-starter_default couchdb.peer0.org1.example.com true
fabric-starter_default cli.orderer.example.com true
fabric-starter_default www.example.com true
fabric-starter_default orderer.example.com true
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Differences found: <-api.org1.example.com ->api.org2.example.com <-ca.org1.example.com ->ca.org2.example.com <-cli.orderer.example.com <-cli.org1.example.com ->cli.org2.example.com <-couchdb.peer0.org1.example.com ->couchdb.peer0.org2.example.com <-orderer.example.com <-peer0.org1.example.com ->peer0.org2.example.com <-www.example.com <-www.org1.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
fabric-starter_default cli.org1.example.com true
fabric-starter_default peer0.org1.example.com true
fabric-starter_default api.org1.example.com true
fabric-starter_default www.org1.example.com true
fabric-starter_default ca.org1.example.com true
fabric-starter_default couchdb.peer0.org1.example.com true
fabric-starter_default cli.orderer.example.com true
fabric-starter_default www.example.com true
fabric-starter_default orderer.example.com true
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Differences found: <-api.org1.example.com ->api.org2.example.com <-ca.org1.example.com ->ca.org2.example.com <-cli.orderer.example.com <-cli.org1.example.com ->cli.org2.example.com <-couchdb.peer0.org1.example.com ->couchdb.peer0.org2.example.com <-orderer.example.com <-peer0.org1.example.com ->peer0.org2.example.com <-www.example.com <-www.org1.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
fabric-starter_default cli.org2.example.com true
fabric-starter_default peer0.org2.example.com true
fabric-starter_default www.org2.example.com true
fabric-starter_default api.org2.example.com true
fabric-starter_default ca.org2.example.com true
fabric-starter_default couchdb.peer0.org2.example.com true
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org2.example.com
<-ca.org2.example.com
<-cli.org2.example.com
<-couchdb.peer0.org2.example.com
<-peer0.org2.example.com
<-www.org2.example.com

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
[31mContainers_running: (B[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
fabric-starter_default cli.org1.example.com true
fabric-starter_default peer0.org1.example.com true
fabric-starter_default api.org1.example.com true
fabric-starter_default www.org1.example.com true
fabric-starter_default ca.org1.example.com true
fabric-starter_default couchdb.peer0.org1.example.com true
fabric-starter_default cli.orderer.example.com true
fabric-starter_default www.example.com true
fabric-starter_default orderer.example.com true
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Differences found: <-api.org1.example.com ->api.org2.example.com <-ca.org1.example.com ->ca.org2.example.com <-cli.orderer.example.com <-cli.org1.example.com ->cli.org2.example.com <-couchdb.peer0.org1.example.com ->couchdb.peer0.org2.example.com <-orderer.example.com <-peer0.org1.example.com ->peer0.org2.example.com <-www.example.com <-www.org1.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
[31mContainers_running: (B[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
fabric-starter_default cli.org2.example.com true
fabric-starter_default peer0.org2.example.com true
fabric-starter_default www.org2.example.com true
fabric-starter_default api.org2.example.com true
fabric-starter_default ca.org2.example.com true
fabric-starter_default couchdb.peer0.org2.example.com true
Containers_running:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Containers_in_list:
<-api.org2.example.com
<-ca.org2.example.com
<-cli.org2.example.com
<-couchdb.peer0.org2.example.com
<-peer0.org2.example.com
<-www.org2.example.com

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:38:30.276 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:38:30.279 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:38:30.280 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:38:30.281 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 4_cli Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:38:32.649 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:38:32.651 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:38:32.655 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:38:32.656 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org2[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org1
Step: 5_cli Test 'Organization org1 joined the <common> channel'
VERIFY: test-join-channel.sh common org1
[1;34m
Verifing if the org1 has joined the <common> channel...[m[m[m
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
[31mContainers_running: (B[m
Calling <getContainersList org1>
Retrieving container list from org1.example.com for org1
fabric-starter_default cli.org1.example.com true
fabric-starter_default peer0.org1.example.com true
fabric-starter_default api.org1.example.com true
fabric-starter_default www.org1.example.com true
fabric-starter_default ca.org1.example.com true
fabric-starter_default couchdb.peer0.org1.example.com true
fabric-starter_default cli.orderer.example.com true
fabric-starter_default www.example.com true
fabric-starter_default orderer.example.com true
Containers_running:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Containers_in_list:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Differences found: <-api.org1.example.com ->api.org2.example.com <-ca.org1.example.com ->ca.org2.example.com <-cli.orderer.example.com <-cli.org1.example.com ->cli.org2.example.com <-couchdb.peer0.org1.example.com ->couchdb.peer0.org2.example.com <-orderer.example.com <-peer0.org1.example.com ->peer0.org2.example.com <-www.example.com <-www.org1.example.com ->www.org2.example.com
[1;31mERROR! See /home/kilpio/CodeLab/merge_test/fabric-starter/test/scenarios/01-start-network-test/fs_network_test.log for logs.[m[m[m
Step 1_cli: exit code 1
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
[31mContainers_running: (B[m
Calling <getContainersList org2>
Retrieving container list from org2.example.com for org2
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org1 api.org1.example.com,ca.org1.example.com,cli.orderer.example.com,cli.org1.example.com,couchdb.peer0.org1.example.com,orderer.example.com,peer0.org1.example.com,www.org1.example.com,www.example.com
Step: 1_cli Test 'Docker containers for vbox <org1> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org1 api.org1.example.com,ca.org1.example.com,cli.orderer.example.com,cli.org1.example.com,couchdb.peer0.org1.example.com,orderer.example.com,peer0.org1.example.com,www.org1.example.com,www.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Retrieving container list from org1.example.com for org1
fabric-starter_default cli.org1.example.com true
fabric-starter_default peer0.org1.example.com true
fabric-starter_default api.org1.example.com true
fabric-starter_default www.org1.example.com true
fabric-starter_default ca.org1.example.com true
fabric-starter_default couchdb.peer0.org1.example.com true
fabric-starter_default cli.orderer.example.com true
fabric-starter_default www.example.com true
fabric-starter_default orderer.example.com true
Containers_running:
<-api.org1.example.com
<-ca.org1.example.com
<-cli.orderer.example.com
<-cli.org1.example.com
<-couchdb.peer0.org1.example.com
<-orderer.example.com
<-peer0.org1.example.com
<-www.example.com
<-www.org1.example.com

Containers_in_list:
->api.org1.example.com
->ca.org1.example.com
->cli.orderer.example.com
->cli.org1.example.com
->couchdb.peer0.org1.example.com
->orderer.example.com
->peer0.org1.example.com
->www.example.com
->www.org1.example.com

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 1_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
Step: 2_cli Test 'Docker containers for vbox <org2> machine are up and running'
VERIFY: ./test-containers-list.sh example.com org2 api.org2.example.com,ca.org2.example.com,cli.org2.example.com,couchdb.peer0.org2.example.com,peer0.org2.example.com,www.org2.example.com
[1;34m
Verifing that all the test network containers example.com are up and running[m[m[m
Retrieving container list from org2.example.com for org2
fabric-starter_default cli.org2.example.com true
fabric-starter_default peer0.org2.example.com true
fabric-starter_default www.org2.example.com true
fabric-starter_default api.org2.example.com true
fabric-starter_default ca.org2.example.com true
fabric-starter_default couchdb.peer0.org2.example.com true
Containers_running:
<-api.org2.example.com
<-ca.org2.example.com
<-cli.org2.example.com
<-couchdb.peer0.org2.example.com
<-peer0.org2.example.com
<-www.org2.example.com

Containers_in_list:
->api.org2.example.com
->ca.org2.example.com
->cli.org2.example.com
->couchdb.peer0.org2.example.com
->peer0.org2.example.com
->www.org2.example.com

Differences found: 
[1;32mOK: All the test network containers are up and running[m[m[m
Step 2_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org1
Step: 3_cli Test 'Organization org1 is in <common> channel'
VERIFY: test-channel-exists.sh common org1
[1;34m
Verifing if the <common> channel exists in org1.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:41:34.436 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:41:34.438 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:41:34.440 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:41:34.440 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org1[m[m[m
Step 3_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-channel-exists.sh common org2
Step: 4_cli Test 'Organization org2 is in <common> channel'
VERIFY: test-channel-exists.sh common org2
[1;34m
Verifing if the <common> channel exists in org2.example.com...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:41:36.694 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2020-03-23 08:41:36.697 UTC [cli.common] readBlock -> INFO 002[0m Received block: 7
[34m2020-03-23 08:41:36.699 UTC [cli.common] readBlock -> INFO 003[0m Received block: 5
[34m2020-03-23 08:41:36.699 UTC [channelCmd] fetch -> INFO 004[0m Retrieving last config block: 5
{
"channel_id": "common",
"epoch": "0",
"extension": null,
"timestamp": "2020-03-23T07:40:59Z",
"tls_cert_hash": null,
"tx_id": "",
"type": 1,
"version": 0
}
[1;32mOK: The channel <common> exists and visible to org2[m[m[m
Step 4_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org1
Step: 5_cli Test 'Organization org1 joined the <common> channel'
VERIFY: test-join-channel.sh common org1
[1;34m
Verifing if the org1 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:41:38.988 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org1 has joined the <common> channel[m[m[m
Step 5_cli: exit code 0
/home/kilpio/CodeLab/merge_test/fabric-starter/test/verify/test-join-channel.sh common org2
Step: 6_cli Test 'Organization org2 joined the <common> channel'
VERIFY: test-join-channel.sh common org2
[1;34m
Verifing if the org2 has joined the <common> channel...[m[m[m
queryContainerNetworkSettings returns: 7051
[34m2020-03-23 08:41:41.185 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[1;32mOK: The org2 has joined the <common> channel[m[m[m
Step 6_cli: exit code 0
