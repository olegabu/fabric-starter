#
# Copyright . All Rights Reserved.
#

version: '3.7'

volumes:
  peer0:
#  peer1:
  webapps:
  routes:

x-peer:
  &peer-defaults
  image: ${DOCKER_REGISTRY:-docker.io}/hyperledger/fabric-peer:${FABRIC_VERSION:-latest}
  working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
  command: peer node start
  volumes:
    - /var/run/:/host/var/run/
  depends_on:
    - pre-install
    - ca

services:

  pre-install:
    container_name: pre-install.${ORG:-org1}.${DOMAIN:-example.com}
    image: ${DOCKER_REGISTRY:-docker.io}/olegabu/fabric-tools-extended:${FABRIC_STARTER_VERSION:-latest}
    environment:
      - ORG=${ORG:-org1}
      - DOMAIN=${DOMAIN:-example.com}
      - ORDERER_DOMAIN
      - ORDERER_GENERAL_LISTENPORT=${ORDERER_GENERAL_LISTENPORT:-7050}
      - PEER0_PORT=${PEER0_PORT:-7051}
      - BOOTSTRAP_IP
      - ENROLL_ID
      - ENROLL_SECRET
      - LDAP_ENABLED
      - LDAP_BASE_DN
      - FABRIC_LOGGING_SPEC=orderer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
      - ORDERER_BATCH_TIMEOUT=${ORDERER_BATCH_TIMEOUT:-2}
    working_dir: /etc/hyperledger
    command: container-scripts/container-peer.sh
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config:/etc/hyperledger/crypto-config
#      - ${FABRIC_STARTER_HOME:-.}/templates:/etc/hyperledger/templates # for local debug
#      - ${FABRIC_STARTER_HOME:-.}/container-scripts:/etc/hyperledger/container-scripts # for local debug


  post-install:
    container_name: post-install.${ORG:-org1}.${DOMAIN:-example.com}
    image: ${DOCKER_REGISTRY:-docker.io}/olegabu/fabric-tools-extended:${FABRIC_STARTER_VERSION:-latest}
    environment:
      - ORG=${ORG:-org1}
      - DOMAIN=${DOMAIN:-example.com}
      - ORDERER_DOMAIN
      - DNS_CHANNEL=${DNS_CHANNEL:-common}
      - BOOTSTRAP_IP
      - MY_IP
      - CORE_PEER_LOCALMSPID=${ORG:-org1}
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/users/Admin@${ORG:-org1}.${DOMAIN:-example.com}/msp
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/peers/peer0.${ORG:-org1}.${DOMAIN:-example.com}/tls/ca.crt
      - PEER0_PORT
    working_dir: /etc/hyperledger
    command: container-scripts/install-default-chaincodes.sh
    depends_on:
      - pre-install
      - peer0
    volumes:
      - ./crypto-config:/etc/hyperledger/crypto-config
#      - ${FABRIC_STARTER_HOME:-.}/templates:/etc/hyperledger/templates # for local debug
#      - ${FABRIC_STARTER_HOME:-.}/container-scripts:/etc/hyperledger/container-scripts # for local debug


  ca:
    container_name: ca.${ORG:-org1}.${DOMAIN:-example.com}
    image: ${DOCKER_REGISTRY:-docker.io}/hyperledger/fabric-ca:${FABRIC_VERSION:-latest}
    restart: always
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.${ORG:-org1}.${DOMAIN:-example.com}-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/sk.pem
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.${ORG:-org1}.${DOMAIN:-example.com}-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/sk.pem
    command: sh -c 'fabric-ca-server start -b ${ENROLL_ID}:${ENROLL_SECRET} -d --ca.name default'
    depends_on:
      - pre-install
    volumes:
      - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/ca/:/etc/hyperledger/fabric-ca-server-config
      - ./crypto-config/fabric-ca-server-config-${ORG:-org1}.yaml:/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml

  peer0:
    << : *peer-defaults
    container_name: peer0.${ORG:-org1}.${DOMAIN:-example.com}
    restart: always
    environment:
    - CORE_PEER_ID=peer0.${ORG:-org1}.${DOMAIN:-example.com}
    - CORE_PEER_LOCALMSPID=${ORG:-org1}
    - CORE_PEER_ADDRESS=peer0.${ORG:-org1}.${DOMAIN:-example.com}:${PEER0_PORT:-7051}
    - CORE_PEER_LISTENADDRESS=0.0.0.0:${PEER0_PORT:-7051}
    - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
    # the following setting starts chaincode containers on the same
    # bridge network as the peers
    # https://docs.docker.com/compose/networking/
    - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric-starter_default
    - CORE_VM_DOCKER_ATTACHSTDOUT=true
#    - FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
    - CORE_CHAINCODE_BUILDER=${DOCKER_REGISTRY:-docker.io}/${CORE_CHAINCODE_BUILDER:-hyperledger/fabric-ccenv}:${FABRIC_VERSION:-latest}
    - CORE_CHAINCODE_JAVA_RUNTIME=${DOCKER_REGISTRY:-docker.io}/${CORE_CHAINCODE_JAVA_RUNTIME:-hyperledger/fabric-javaenv}:${FABRIC_VERSION:-latest}
    - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
    - CORE_CHAINCODE_LOGGING_SHIM=debug
#    - CORE_CHAINCODE_STARTUPTIMEOUT=600000
#    - CORE_CHAINCODE_DEPLOYTIMEOUT=600000
    - CORE_PEER_GOSSIP_USELEADERELECTION=true
    - CORE_PEER_GOSSIP_ORGLEADER=false
    - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.${ORG:-org1}.${DOMAIN:-example.com}:${PEER0_PORT:-7051}
    - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.${ORG:-org1}.${DOMAIN:-example.com}:${PEER0_PORT:-7051}
    # The following setting skips the gossip handshake since we are
    # are not doing mutual TLS
    - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
    - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peer/msp
    - CORE_PEER_TLS_ENABLED=true
    - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto/peer/tls/server.key
    - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto/peer/tls/server.crt
    - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto/peer/tls/ca.crt

    volumes:
    - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/peers/peer0.${ORG:-org1}.${DOMAIN:-example.com}/:/etc/hyperledger/crypto/peer
    - peer0:/var/hyperledger/production
    - /var/run/:/host/var/run/

#  peer1:
#    << : *peer-defaults
#    container_name: peer1.${ORG:-org1}.${DOMAIN:-example.com}
#    environment:
#    - CORE_PEER_ID=peer1.${ORG:-org1}.${DOMAIN:-example.com}
#    - CORE_PEER_LOCALMSPID=${ORG:-org1}
#    - CORE_PEER_ADDRESS=peer1.${ORG:-org1}.${DOMAIN:-example.com}:7051
#
#    - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#    # the following setting starts chaincode containers on the same
#    # bridge network as the peers
#    # https://docs.docker.com/compose/networking/
#    - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric-starter_default
#    - CORE_VM_DOCKER_ATTACHSTDOUT=true
##    - FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
#    - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
#    - CORE_CHAINCODE_LOGGING_SHIM=debug
#    - CORE_PEER_GOSSIP_USELEADERELECTION=false
#    - CORE_PEER_GOSSIP_ORGLEADER=false
#    # Don't particiapte in external gossip- CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.${ORG:-org1}.${DOMAIN:-example.com}:7051
#    - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.${ORG:-org1}.${DOMAIN:-example.com}:7051
#    # The following setting skips the gossip handshake since we are
#    # are not doing mutual TLS
#    - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
#    - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peer/msp
#    - CORE_PEER_TLS_ENABLED=true
#    - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto/peer/tls/server.key
#    - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto/peer/tls/server.crt
#    - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto/peer/tls/ca.crt
#    volumes:
#    - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/peers/peer1.${ORG:-org1}.${DOMAIN:-example.com}/:/etc/hyperledger/crypto/peer
#    - peer1:/var/hyperledger/production
#    - /var/run/:/host/var/run/

  cli.peer:
    container_name: cli.${ORG:-org1}.${DOMAIN:-example.com}
    image: ${DOCKER_REGISTRY:-docker.io}/olegabu/fabric-tools-extended:${FABRIC_STARTER_VERSION:-latest}
    tty: true
    environment:
      - ORG=${ORG:-org1}
      - DOMAIN=${DOMAIN:-example.com}
      - ORDERER_NAME=${ORDERER_NAME:-orderer}
      - ORDERER_DOMAIN
      - ENROLL_ID
      - ENROLL_SECRET
      - LDAP_ENABLED
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_LOCALMSPID=${ORG:-org1}
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peeradmin/msp
      - CORE_PEER_ADDRESS=peer0.${ORG:-org1}.${DOMAIN:-example.com}:${PEER0_PORT:-7051}
      - PEER0_PORT=${PEER0_PORT:-7051}
      - FABRIC_LOGGING_SPEC=peer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto/peer/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto/peer/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto/peer/tls/ca.crt
      - ORDERER_BATCH_TIMEOUT=${ORDERER_BATCH_TIMEOUT:-2}
    working_dir: /etc/hyperledger
    depends_on:
      - peer0
    volumes:
    - /var/run/:/host/var/run/
    - ${CHAINCODE_HOME:-./chaincode}:/opt/chaincode
    - ${CHAINCODE_HOME:-./chaincode}/go:/opt/gopath/src
    - ./crypto-config:/etc/hyperledger/crypto-config
    - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/users/Admin@${ORG:-org1}.${DOMAIN:-example.com}:/etc/hyperledger/crypto/peeradmin
    - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/peers/peer0.${ORG:-org1}.${DOMAIN:-example.com}:/etc/hyperledger/crypto/peer
#    - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/peers/peer1.${ORG:-org1}.${DOMAIN:-example.com}:/etc/hyperledger/crypto/peer1
#    - ./crypto-config/ordererOrganizations/${DOMAIN:-example.com}/msp:/etc/hyperledger/crypto/orderer
#    - ${FABRIC_STARTER_HOME:-.}/templates:/etc/hyperledger/templates # for local debug
    - ${FABRIC_STARTER_HOME:-.}/container-scripts:/etc/hyperledger/container-scripts # for local debug


  # fabric-rest api server
  api:
#    build: ../fabric-starter-rest
    image: ${DOCKER_REGISTRY:-docker.io}/olegabu/fabric-starter-rest:${FABRIC_STARTER_VERSION:-latest}
    restart: always
    container_name: api.${ORG:-org1}.${DOMAIN:-example.com}
    environment:
      - ORG=${ORG:-org1}
      - DOMAIN=${DOMAIN:-example.com}
      - ORDERER_DOMAIN
      - ORDERER_NAME=${ORDERER_NAME:-orderer}
      - ORDERER_GENERAL_LISTENPORT=${ORDERER_GENERAL_LISTENPORT:-7050}
      - CRYPTO_CONFIG_DIR=/usr/src/app/crypto-config
      - TEMPLATES_DIR=/etc/hyperledger/templates
      - WEBAPP_DIR=/usr/src/app/webapp
      - MSP_DIR=/usr/src/app/msp
      - CORE_PEER_LOCALMSPID=${ORG:-org1}
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peeradmin/msp
      - PEER0_PORT=${PEER0_PORT:-7051}
      - DISCOVER_AS_LOCALHOST=false
      - DNS_CHANNEL=${DNS_CHANNEL:-common}
      - ENROLL_ID
      - ENROLL_SECRET
      - MULTIHOST
      - UI_LISTEN_BLOCK_OPTS
      - P=${PWD}
      - HFC_LOGGING={"debug":"console","info":"console"}
      - ORDERER_BATCH_TIMEOUT=${ORDERER_BATCH_TIMEOUT:-2}
# to troubleshoot grpc issues https://github.com/grpc/grpc/blob/master/doc/environment_variables.md
#      - GRPC_VERBOSITY=DEBUG
#      - GRPC_TRACE=connectivity_state,health_check_client,timer,timer_check,tcp,api
    depends_on:
      - pre-install
      - post-install
#      - peer1
    volumes:
      - ./crypto-config:/usr/src/app/crypto-config
      - ${WEBAPP_HOME:-./webapp}:/usr/src/app/webapp
      - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/msp:/usr/src/app/msp
      - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/users/Admin@${ORG:-org1}.${DOMAIN:-example.com}:/etc/hyperledger/crypto/peeradmin
      - webapps:/usr/src/app/webapps
      - routes:/usr/src/app/routes
#      - ${MIDDLEWARE_HOME:-./middleware}:/usr/src/app/routes #for debug
#      - ${FABRIC_STARTER_HOME:-.}/templates:/etc/hyperledger/templates # for local debug
#      - ${FABRIC_STARTER_HOME:-.}/container-scripts:/etc/hyperledger/container-scripts # for local debug

    command: sh -c "npm start"

  # simple http server to disseminate certificates
  www.peer:
    container_name: www.${ORG:-org1}.${DOMAIN:-example.com}
    image: ${DOCKER_REGISTRY:-docker.io}/nginx
    depends_on:
      - pre-install
    volumes:
      - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/msp:/usr/share/nginx/html/msp
      - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/msp/well-known:/usr/share/nginx/html/.well-known

networks:
  default:
    external: false
    name: fabric-starter_default