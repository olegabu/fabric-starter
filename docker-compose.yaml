#
# Copyright . All Rights Reserved.
#

version: '3.7'

volumes:
  peer0:
#  peer1:

x-peer:
  &peer-defaults
  image: hyperledger/fabric-peer:${FABRIC_VERSION:-latest}
  working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
  command: peer node start
  volumes:
  - /var/run/:/host/var/run/
  depends_on:
  - ca


services:

  ca:
    container_name: ca.${ORG:-org1}.${DOMAIN:-example.com}
    image: hyperledger/fabric-ca:${FABRIC_VERSION:-latest}
    restart: always
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.${ORG:-org1}.${DOMAIN:-example.com}-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/sk.pem
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.${ORG:-org1}.${DOMAIN:-example.com}-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/sk.pem
    command: sh -c 'fabric-ca-server start -b ${ENROLL_ID}:${ENROLL_SECRET} -d --ca.name default'
    volumes:
      - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/ca/:/etc/hyperledger/fabric-ca-server-config
      - ./crypto-config/fabric-ca-server-config-${ORG:-org1}.yaml:/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml

  peer0:
    << : *peer-defaults
    container_name: peer0.${ORG:-org1}.${DOMAIN:-example.com}
    restart: always
    environment:
    - CORE_PEER_ID=peer0.${ORG:-org1}.${DOMAIN:-example.com}
    - CORE_PEER_LOCALMSPID=${ORG:-org1}
    - CORE_PEER_ADDRESS=peer0.${ORG:-org1}.${DOMAIN:-example.com}:7051

    - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
    # the following setting starts chaincode containers on the same
    # bridge network as the peers
    # https://docs.docker.com/compose/networking/
    - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric-starter_default
    - CORE_VM_DOCKER_ATTACHSTDOUT=true
#    - CORE_LOGGING_LEVEL=DEBUG
    - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
    - CORE_CHAINCODE_LOGGING_SHIM=debug
    - CORE_PEER_GOSSIP_USELEADERELECTION=true
    - CORE_PEER_GOSSIP_ORGLEADER=false
    - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.${ORG:-org1}.${DOMAIN:-example.com}:7051
    - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.${ORG:-org1}.${DOMAIN:-example.com}:7051
    # The following setting skips the gossip handshake since we are
    # are not doing mutual TLS
    - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
    - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peer/msp
    - CORE_PEER_TLS_ENABLED=true
    - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto/peer/tls/server.key
    - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto/peer/tls/server.crt
    - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto/peer/tls/ca.crt

    volumes:
    - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/peers/peer0.${ORG:-org1}.${DOMAIN:-example.com}/:/etc/hyperledger/crypto/peer
    - peer0:/var/hyperledger/production
    - /var/run/:/host/var/run/

#  peer1:
#    << : *peer-defaults
#    container_name: peer1.${ORG:-org1}.${DOMAIN:-example.com}
#    environment:
#    - CORE_PEER_ID=peer1.${ORG:-org1}.${DOMAIN:-example.com}
#    - CORE_PEER_LOCALMSPID=${ORG:-org1}
#    - CORE_PEER_ADDRESS=peer1.${ORG:-org1}.${DOMAIN:-example.com}:7051
#
#    - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#    # the following setting starts chaincode containers on the same
#    # bridge network as the peers
#    # https://docs.docker.com/compose/networking/
#    - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric-starter_default
#    - CORE_VM_DOCKER_ATTACHSTDOUT=true
##    - CORE_LOGGING_LEVEL=DEBUG
#    - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
#    - CORE_CHAINCODE_LOGGING_SHIM=debug
#    - CORE_PEER_GOSSIP_USELEADERELECTION=false
#    - CORE_PEER_GOSSIP_ORGLEADER=false
#    # Don't particiapte in external gossip- CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.${ORG:-org1}.${DOMAIN:-example.com}:7051
#    - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.${ORG:-org1}.${DOMAIN:-example.com}:7051
#    # The following setting skips the gossip handshake since we are
#    # are not doing mutual TLS
#    - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
#    - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peer/msp
#    - CORE_PEER_TLS_ENABLED=true
#    - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto/peer/tls/server.key
#    - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto/peer/tls/server.crt
#    - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto/peer/tls/ca.crt
#    volumes:
#    - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/peers/peer1.${ORG:-org1}.${DOMAIN:-example.com}/:/etc/hyperledger/crypto/peer
#    - peer1:/var/hyperledger/production
#    - /var/run/:/host/var/run/

  cli.peer:
    container_name: cli.${ORG:-org1}.${DOMAIN:-example.com}
#    build:
#      args:
#        FABRIC_VERSION: ${FABRIC_VERSION:-latest}
#      context: ./fabric-tools-extended
    image: olegabu/fabric-tools-extended
    tty: true
    environment:
      - ORG=${ORG:-org1}
      - DOMAIN=${DOMAIN:-example.com}
      - ENROLL_ID
      - ENROLL_SECRET
      - LDAP_ENABLED
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_LOCALMSPID=${ORG:-org1}
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peeradmin/msp
      - CORE_PEER_ADDRESS=peer0.${ORG:-org1}.${DOMAIN:-example.com}:7051
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto/peer/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto/peer/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto/peer/tls/ca.crt
    working_dir: /etc/hyperledger
    volumes:
    - /var/run/:/host/var/run/
    - ${CHAINCODE_HOME:-./chaincode}:/opt/chaincode
    - ${CHAINCODE_HOME:-./chaincode}/go:/opt/gopath/src
    - ./crypto-config:/etc/hyperledger/crypto-config
    - ${FABRIC_STARTER_HOME:-.}/templates:/etc/hyperledger/templates
    - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/users/Admin@${ORG:-org1}.${DOMAIN:-example.com}:/etc/hyperledger/crypto/peeradmin
    - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/peers/peer0.${ORG:-org1}.${DOMAIN:-example.com}:/etc/hyperledger/crypto/peer
#    - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/peers/peer1.${ORG:-org1}.${DOMAIN:-example.com}:/etc/hyperledger/crypto/peer1
    - ./crypto-config/ordererOrganizations/${DOMAIN:-example.com}/msp:/etc/hyperledger/crypto/orderer

  # fabric-rest api server
  api:
#    build: ../fabric-starter-rest
    image: olegabu/fabric-starter-rest:${FABRIC_STARTER_REST_VERSION:-latest}
    restart: always
    container_name: api.${ORG:-org1}.${DOMAIN:-example.com}
    environment:
      - ORG=${ORG:-org1}
      - DOMAIN=${DOMAIN:-example.com}
      - CRYPTO_CONFIG_DIR=/usr/src/app/crypto-config
      - WEBAPP_DIR=/usr/src/app/webapp
      - MSP_DIR=/usr/src/app/msp
      - CORE_PEER_LOCALMSPID=${ORG:-org1}
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/peeradmin/msp
      - DISCOVER_AS_LOCALHOST=false
      - ENROLL_ID
      - ENROLL_SECRET
      - P=${PWD}
      - HFC_LOGGING={"debug":"console","info":"console"}
# to troubleshoot grpc issues https://github.com/grpc/grpc/blob/master/doc/environment_variables.md
#      - GRPC_VERBOSITY=DEBUG
#      - GRPC_TRACE=connectivity_state,health_check_client,timer,timer_check,tcp,api
    depends_on:
      - peer0
#      - peer1
    volumes:
      - ./crypto-config:/usr/src/app/crypto-config
      - ./templates:/usr/src/app/templates
      - ${WEBAPP_HOME:-./webapp}:/usr/src/app/webapp
      - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/msp:/usr/src/app/msp
      - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/users/Admin@${ORG:-org1}.${DOMAIN:-example.com}:/etc/hyperledger/crypto/peeradmin

    command: sh -c "sleep 1 && npm start"

  # simple http server to disseminate certificates
  www.peer:
    container_name: www.${ORG:-org1}.${DOMAIN:-example.com}
    image: nginx
    volumes:
      - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/msp:/usr/share/nginx/html/msp

networks:
  default:
    external:
      name: fabric-starter_default