#
# Copyright . All Rights Reserved.
#

version: '3.7'

volumes:
  webapps:
  routes:


services:

  pre-install:
    container_name: pre-install.${ORG:-org1}.${DOMAIN:-example.com}
    image: ${DOCKER_REGISTRY:-docker.io}/olegabu/fabric-tools-extended:${FABRIC_STARTER_VERSION:-latest}
    environment:
      - ORG=${ORG:-org1}
      - DOMAIN=${DOMAIN:-example.com}
      - ORDERER_NAME=${ORDERER_NAME:-orderer}
      - ORDERER_NAMES
      - ORDERER_DOMAIN
      - ORDERER_GENERAL_LISTENPORT=${ORDERER_GENERAL_LISTENPORT:-7050}
      - ORDERER_WWW_PORT=${ORDERER_WWW_PORT:-80}
      - PEER0_PORT=${PEER0_PORT:-7051}
      - BOOTSTRAP_IP
      - BOOTSTRAP_ORG
      - DNS_CHANNEL
      - MY_IP
      - ENROLL_ID
      - ENROLL_SECRET
      - LDAP_ENABLED
      - LDAP_BASE_DN
      - FABRIC_LOGGING_SPEC=orderer=DEBUG:endorser=DEBUG:nodeCmd=DEBUG:committer=DEBUG
      - ORDERER_BATCH_TIMEOUT=${ORDERER_BATCH_TIMEOUT:-2}
      - RAFT0_PORT=${RAFT0_PORT:-7050}
      - RAFT1_PORT=${RAFT1_PORT:-7150}
      - RAFT2_PORT=${RAFT2_PORT:-7250}
      - CRYPTO_ALGORITHM=${CRYPTO_ALGORITHM:-SW}
      - SIGNATURE_HASH_FAMILY=${SIGNATURE_HASH_FAMILY:-SHA2}
    working_dir: /etc/hyperledger
    command: container-scripts/container-peer.sh
    volumes:
      - ${FABRIC_STARTER_HOME:-.}/crypto-config:/etc/hyperledger/crypto-config
#      - ${FABRIC_STARTER_HOME:-.}/templates:/etc/hyperledger/templates # for local debug
#      - ${FABRIC_STARTER_HOME:-.}/container-scripts:/etc/hyperledger/container-scripts # for local debug

  ca:
    container_name: ca.${ORG:-org1}.${DOMAIN:-example.com}
    image: ${DOCKER_REGISTRY:-docker.io}/hyperledger/fabric-ca:${FABRIC_VERSION:-1.4.8}
    restart: always
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_LDAP_USERFILTER=(cn=%s)
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/ca/ca.${ORG:-org1}.${DOMAIN:-example.com}-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/ca/sk.pem
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/tlsca/tlsca.${ORG:-org1}.${DOMAIN:-example.com}-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/tlsca/sk.pem
    command: sh -c 'fabric-ca-server start -b ${ENROLL_ID}:${ENROLL_SECRET} -d --ca.name default'
    depends_on:
      - pre-install
    logging:
      options:
        max-size: "${LOG_FILES_MAX_SIZE:-10m}"
        max-file: "1"
    volumes:
      - ${FABRIC_STARTER_HOME:-.}/crypto-config:/etc/hyperledger/crypto-config
#      - ${FABRIC_STARTER_HOME:-.}/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/ca/:/etc/hyperledger/fabric-ca-server-config
      - ${FABRIC_STARTER_HOME:-.}/crypto-config/fabric-ca-server-config-${ORG:-org1}.yaml:/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml

  # fabric-rest api server
  api:
#    build: ../fabric-starter-rest
    image: ${DOCKER_REGISTRY:-docker.io}/olegabu/fabric-starter-rest:${FABRIC_STARTER_VERSION:-latest}
    restart: always
    container_name: api.${ORG:-org1}.${DOMAIN:-example.com}
    environment:
      - ORG=${ORG:-org1}
      - DOMAIN=${DOMAIN:-example.com}
      - ORDERER_NAME=${ORDERER_NAME:-orderer}
      - ORDERER_NAMES
      - ORDERER_DOMAIN
      - ORDERER_WWW_PORT=${ORDERER_WWW_PORT:-80}
      - ORDERER_GENERAL_LISTENPORT=${ORDERER_GENERAL_LISTENPORT:-7050}
      - CRYPTO_CONFIG_DIR=/etc/hyperledger/crypto-config
      - TEMPLATES_DIR=/etc/hyperledger/templates
      - WEBAPP_DIR=/usr/src/app/webapp
      - MSP_DIR=/etc/hyperledger/msp
      - CORE_PEER_LOCALMSPID=${ORG:-org1}
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/users/Admin@${ORG:-org1}.${DOMAIN:-example.com}/msp
      - PEER0_PORT=${PEER0_PORT:-7051}
      - DISCOVER_AS_LOCALHOST=false
      - DNS_CHANNEL=${DNS_CHANNEL:-common}
      - DNS_USERNAME=${ENROLL_ID:-admin}
      - DNS_PASSWORD=${ENROLL_SECRET:-adminpw}
      - ENROLL_ID
      - ENROLL_SECRET
      - BOOTSTRAP_IP
      - MY_IP
      - WWW_PORT=${WWW_PORT:-80}
      - MULTIHOST
      - UI_LISTEN_BLOCK_OPTS
      - FABRIC_STARTER_HOME=${PWD}
#      - HFC_LOGGING={"debug":"console","info":"console"}
      - HFC_LOGGING={"debug":"/dev/null","info":"/dev/null"}
      - ORDERER_BATCH_TIMEOUT=${ORDERER_BATCH_TIMEOUT:-2}
      - DOCKER_REGISTRY
      - BOOTSTRAP_PORT
      - CRYPTO_ALGORITHM
      - AUTH_MODE
      - SIGNATURE_HASH_FAMILY=${SIGNATURE_HASH_FAMILY:-SHA2}
      - CUSTOM_APP_PORTS=${CUSTOM_APP_PORTS:-8001-8999}
      - ACCEPT_ALL_ORGS
      - AUTH_JWT_EXPIRES_IN
# to troubleshoot grpc issues https://github.com/grpc/grpc/blob/master/doc/environment_variables.md
#      - GRPC_VERBOSITY=DEBUG
#      - GRPC_TRACE=connectivity_state,health_check_client,timer,timer_check,tcp,api
    depends_on:
      - pre-install
    logging:
      options:
        max-size: "${LOG_FILES_MAX_SIZE:-20m}"
        max-file: "1"
    volumes:
      - ${FABRIC_STARTER_HOME:-.}/crypto-config:/etc/hyperledger/crypto-config
      - ${WEBAPP_HOME:-./webapp}:/usr/src/app/webapp
      - ${FABRIC_STARTER_HOME:-.}/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/msp:/etc/hyperledger/msp:ro
#      - ./crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/users/Admin@${ORG:-org1}.${DOMAIN:-example.com}:/etc/hyperledger/crypto/peeradmin
      - webapps:/usr/src/app/webapps
      - routes:/usr/src/app/routes
      - ${FABRIC_STARTER_HOME:-.}/appstore:/usr/src/app/appstore
      - ${FABRIC_STARTER_HOME:-.}/crypto-config/hosts:/etc/hosts
      - /var/run/docker.sock:/var/run/docker.sock
    #      - ${MIDDLEWARE_HOME:-./middleware}:/usr/src/app/routes #for debug
    #      - ${FABRIC_STARTER_HOME:-.}/templates:/etc/hyperledger/templates # for local debug
    #      - ${FABRIC_STARTER_HOME:-.}/container-scripts:/etc/hyperledger/container-scripts # for local debug
    command: sh -c 'sleep 2 && npm start'

  # simple http server to disseminate certificates
  www.peer:
    container_name: www.${ORG:-org1}.${DOMAIN:-example.com}
    image: ${DOCKER_REGISTRY:-docker.io}/nginx
    restart: always
    depends_on:
      - pre-install
    logging:
      options:
        max-size: "${LOG_FILES_MAX_SIZE:-10m}"
        max-file: "1"
    volumes:
      - ${FABRIC_STARTER_HOME:-.}/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/msp:/usr/share/nginx/html/msp:ro
      - ${FABRIC_STARTER_HOME:-.}/crypto-config/peerOrganizations/${ORG:-org1}.${DOMAIN:-example.com}/msp/well-known:/usr/share/nginx/html/.well-known:ro

networks:
  default:
    external: false
    name: fabric-starter_default
