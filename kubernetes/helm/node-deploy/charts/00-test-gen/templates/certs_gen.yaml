apiVersion: batch/v1
kind: Job
metadata:
  name: gen-deployment-{{ .Values.org }}
  labels:
    app: gen-{{ .Values.org }}
    name: gen-{{ .Values.org }}
spec:
  template:
    metadata:
      labels:
        app: gen-{{ .Values.org }}

    spec:
      restartPolicy: Never

      {{ if .Values.useExistingCerts }}
      volumes:
        - name: certs
          projected:
            sources:
              - secret:
                  {{ range $ordererName := split "," .Values.ordererNames }}
                    {{- $ordererValues := dict "ordererName" $ordererName "domain" $.Values.domain "ordererDomain" $.Values.ordererDomain "certificatePathes" $.Values.orderer.certificatePathes "Values" (dict "ordererName" $ordererName) -}}
                  name: orderer-certs-{{ include "orderer.nameDomain" $ordererValues }}
                  items:
                    {{- include "certificates.decode" (mergeOverwrite (deepCopy $) $ordererValues) | nindent 12 }}
                  {{ end }}
              - secret:
                  name: certs-{{ .Values.org }}
                  items:
                    {{- include "certificates.decode" (merge (deepCopy .) .Values.peer) | nindent 12 }}
      {{ end }}

      containers:
        - name: gen
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File

          image: >-
            {{ tpl .Values.images.fabric_tools_extended . }}
            {{/*            ${IMAGE_PATH}@sha256:${IMAGE_TAG}*/}}

          workingDir: /etc/hyperledger
          command: ["sh", "-c", "container-scripts/container-orderer.sh; sleep 1000"]
#          command: ["sleep", "100000"]
          env:
            - name: PEER_NAME
              value: {{ .Values.peerName | default "peer0" }}
            - name: ORG
              value: {{ .Values.org }}
            - name: DOMAIN
              value: {{ .Values.domain }}
            - name: INTERNAL_DOMAIN
              value: {{ default .Values.domain .Values.NAMESPACE }}
            - name: ORDERER_PROFILE
              value: {{ default "Raft" .Values.ordererProfile }}
            - name: ORDERER_NAME
              value: {{ .Values.ordererName }}
            - name: ORDERER_DOMAIN
              value: {{ default .Values.domain .Values.ordererDomain }}
            - name: ORDERER_GENERAL_LISTENPORT
              value: "{{ default 7050 .Values.ordererPort }}"
            - name: TMP_DIR
              value: {{ .Values.tmpDir }}
            - name: RAFT_NODES_COUNT
              value: "{{ len (split "," .Values.ordererNames) }}"
            {{ if .Values.useExistingCerts }}
            - name: CERTS_DIR
              value: "/etc/hyperledger/crypto-config"
            {{ end }}

          {{ if .Values.useExistingCerts }}
          volumeMounts:
            - name: certs
              mountPath: /etc/hyperledger/crypto-config
          {{ end }}

          startupProbe:
            exec:
              command:
                - ls
                - {{ default "/etc/hyperledger" .Values.tmpDir }}/crypto-config/configtx/{{ default .Values.domain .Values.ordererDomain }}/genesis.pb
            failureThreshold: 40
            initialDelaySeconds: 5
            periodSeconds: 3
