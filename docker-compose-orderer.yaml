# 
# Copyright . All Rights Reserved.
# 

version: '3.7'

volumes:
  orderer:

services:

  orderer:
    container_name: orderer.${DOMAIN:-example.com}
    restart: always
    image: hyperledger/fabric-orderer:${FABRIC_VERSION:-latest}
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.pb
      - ORDERER_GENERAL_LOCALMSPID=orderer
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/crypto/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/crypto/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/crypto/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/crypto/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderers
    command: orderer
    volumes:
      - ./crypto-config/configtx:/etc/hyperledger/configtx
      - ./crypto-config/ordererOrganizations/${DOMAIN:-example.com}/orderers/orderer.${DOMAIN:-example.com}/:/etc/hyperledger/crypto/orderer
      - orderer:/var/hyperledger/production/orderer

  cli.orderer:
    container_name: cli.${DOMAIN:-example.com}
    #    build: ./fabric-tools-extended
    image: olegabu/fabric-tools-extended
    tty: true
    environment:
      - DOMAIN=${DOMAIN:-example.com}
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.pb
      - ORDERER_GENERAL_LOCALMSPID=orderer
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/crypto/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/crypto/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/crypto/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/crypto/orderer/tls/ca.crt]
      - CORE_PEER_LOCALMSPID=orderer
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/ordereradmin/msp
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto/orderer/tls/ca.crt
    working_dir: /etc/hyperledger
    volumes:
      - ./crypto-config:/etc/hyperledger/crypto-config
      - ./templates:/etc/hyperledger/templates
      - ./crypto-config/ordererOrganizations/${DOMAIN:-example.com}/orderers/orderer.${DOMAIN:-example.com}:/etc/hyperledger/crypto/orderer
      - ./crypto-config/ordererOrganizations/${DOMAIN:-example.com}/users/Admin@${DOMAIN:-example.com}:/etc/hyperledger/crypto/ordereradmin


  # fabric-rest api server
  #  api.orderer:
  #    #    build: ../fabric-starter-rest
  #    image: olegabu/fabric-starter-rest
  #    container_name: api.${DOMAIN:-example.com}
  #    ports:
  #      - ${ORDERER_API_PORT:-4500}:3000
  #    environment:
  #      - ORG=${ORG:-orderer}
  #      - DOMAIN=${DOMAIN:-example.com}
  #      - CRYPTO_CONFIG_DIR=/usr/src/app/crypto-config
  #      - WEBAPP_DIR=/usr/src/app/webapp
  #      - MSP_DIR=/usr/src/app/msp
  #      - ORGS=${ORGS:-"orderer":"peer0.org1.example.com:7051"}
  #      - CAS=${CAS:-"org1":"ca.org1.example.com:7054"}
  #      - DISCOVER_AS_LOCALHOST=false
  #      - ENROLL_ID
  #      - ENROLL_SECRET
  #      - P=${PWD}
  #      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
  #      - ORDERER_GENERAL_LOCALMSPID=orderer
  #      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/crypto/orderer/msp
  #      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/crypto/orderer/tls/server.key
  #      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/crypto/orderer/tls/server.crt
  #      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/crypto/orderer/tls/ca.crt]
  #      - CORE_PEER_LOCALMSPID=orderer
  #      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/crypto/ordereradmin/msp
  #      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto/orderer/tls/ca.crt
  #    depends_on:
  #      - orderer
  #    volumes:
  #      - ../fabric-starter-rest:/usr/src/app
  #      - ./crypto-config:/usr/src/app/crypto-config
  #      - ./webapp:/usr/src/app/webapp
  #      - ./crypto-config/ordererOrganizations/${DOMAIN:-example.com}/msp:/usr/src/app/msp
  #      - ./crypto-config/ordererOrganizations/${DOMAIN:-example.com}/orderers/orderer.${DOMAIN:-example.com}:/etc/hyperledger/crypto/orderer
  #      - ./crypto-config/ordererOrganizations/${DOMAIN:-example.com}/users/Admin@${DOMAIN:-example.com}:/etc/hyperledger/crypto/ordereradmin
  #
  #    command: sh -c "sleep 3 && npm start"
  #    privileged: true

  # http serves certificates
  www.orderer:
    image: nginx
    container_name: www.${DOMAIN:-example.com}
    #    ports:
    #      - ${WWW_PORT:-8080}:80
    volumes:
      - ./crypto-config/ordererOrganizations/${DOMAIN:-example.com}/msp:/usr/share/nginx/html/msp